C:\Users\gday\AppData\Local\Programs\Python\Python313\Lib\site-packages\pygame\pkgdata.py:25: UserWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. The pkg_resources package is slated for removal as early as 2025-11-30. Refrain from using this package or pin to Setuptools<81.
  from pkg_resources import resource_stream, resource_exists
test_balance_change_sign_correctness (test_accounting_software.TestAccountingSoftware.test_balance_change_sign_correctness)
Test that balance change sign is correct for positive and negative amounts. ... ok
test_balance_change_with_accounting_software (test_accounting_software.TestAccountingSoftware.test_balance_change_with_accounting_software)
Test that last_balance_change is updated when accounting software is bought. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test_seed_20250929_074205.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_no_balance_change_without_accounting_software (test_accounting_software.TestAccountingSoftware.test_no_balance_change_without_accounting_software)
Test that last_balance_change is not updated without accounting software. ... ok
test_other_resources_dont_affect_balance_change (test_accounting_software.TestAccountingSoftware.test_other_resources_dont_affect_balance_change)
Test that changing other resources doesn't affect last_balance_change. ... ok
test_sequential_transactions (test_accounting_software.TestAccountingSoftware.test_sequential_transactions)
Test that last_balance_change reflects only the most recent transaction. ... ok
test_negative_balance_change_color (test_accounting_software.TestAccountingUIColorDisplay.test_negative_balance_change_color)
Test that negative balance changes are displayed in red. ... ok
test_positive_balance_change_color (test_accounting_software.TestAccountingUIColorDisplay.test_positive_balance_change_color)
Test that positive balance changes are displayed in green. ... ok
test_zero_balance_change_color (test_accounting_software.TestAccountingUIColorDisplay.test_zero_balance_change_color)
Test that zero balance changes are displayed appropriately. ... ok
test_color_scheme_structure (test_action_color_scheme.TestActionColorScheme.test_color_scheme_structure)
Test that color schemes have the correct structure. ... ok
test_core_action_categorization (test_action_color_scheme.TestActionColorScheme.test_core_action_categorization)
Test that core actions get blue-grey colors. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test-color-scheme_20250929_074206.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_default_fallback (test_action_color_scheme.TestActionColorScheme.test_default_fallback)
Test that unknown actions get default colors. ... ok
test_economic_action_categorization (test_action_color_scheme.TestActionColorScheme.test_economic_action_categorization)
Test that economic actions get green colors. ... ok
test_hover_brightness_progression (test_action_color_scheme.TestActionColorScheme.test_hover_brightness_progression)
Test that hover colors are lighter than normal colors. ... ok
test_research_action_categorization (test_action_color_scheme.TestActionColorScheme.test_research_action_categorization)
Test that research actions get blue colors. ... ok
test_special_action_categorization (test_action_color_scheme.TestActionColorScheme.test_special_action_categorization)
Test that special actions get appropriate unique colors. ... ok
test_all_game_actions_have_colors (test_action_color_scheme.TestGameActionsColorIntegration.test_all_game_actions_have_colors)
Test that all game actions return valid color schemes. ... ok
test_color_distribution (test_action_color_scheme.TestGameActionsColorIntegration.test_color_distribution)
Test that actions are distributed across different color categories. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test-game-integration_20250929_074206.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_color_consistency_across_modes (test_action_color_scheme.TestUIModesColorConsistency.test_color_consistency_across_modes)
Test that the same actions get the same colors in both UI modes. ... ok
test_shadow_color_generation (test_action_color_scheme.TestVisualFeedbackIntegration.test_shadow_color_generation)
Test that shadow colors are properly darkened. ... ok
test_visual_feedback_color_mapping (test_action_color_scheme.TestVisualFeedbackIntegration.test_visual_feedback_color_mapping)
Test that color schemes can be converted to visual feedback format. ... ok
test_action_costs_preserved (test_action_points.TestActionPointsBackwardCompatibility.test_action_costs_preserved)
Test that money costs of actions are preserved. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test_seed_20250929_074206.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_all_actions_have_ap_cost (test_action_points.TestActionPointsBackwardCompatibility.test_all_actions_have_ap_cost)
Test that all actions have an ap_cost field. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test_seed_20250929_074207.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_default_ap_cost_is_one (test_action_points.TestActionPointsBackwardCompatibility.test_default_ap_cost_is_one)
Test that default AP cost is 1 for backward compatibility. ... ok
test_existing_actions_unchanged (test_action_points.TestActionPointsBackwardCompatibility.test_existing_actions_unchanged)
Test that existing actions still work with AP system. ... ok
test_ap_deduction_on_action_execution (test_action_points.TestActionPointsDeduction.test_ap_deduction_on_action_execution)
Test that AP is deducted when actions are executed. ... ok
test_ap_glow_effect_triggered (test_action_points.TestActionPointsDeduction.test_ap_glow_effect_triggered)
Test that glow effect is triggered when AP is spent. ... ok
test_multiple_actions_ap_deduction (test_action_points.TestActionPointsDeduction.test_multiple_actions_ap_deduction)
Test AP deduction with multiple actions. ... ok
test_auto_delegation_when_beneficial (test_action_points.TestActionPointsDelegation.test_auto_delegation_when_beneficial)
Test that actions are auto-delegated when beneficial (lower AP cost). ... skipped 'TECH DEBT: Delegation system hardcoded for old action names, future release roadmap'
test_can_delegate_action_with_sufficient_staff (test_action_points.TestActionPointsDelegation.test_can_delegate_action_with_sufficient_staff)
Test that delegation is possible with sufficient staff. ... skipped 'TECH DEBT: Delegation system hardcoded for old action names, future release roadmap'
test_can_delegate_action_without_staff (test_action_points.TestActionPointsDelegation.test_can_delegate_action_without_staff)
Test that delegation is not possible without required staff. ... skipped 'TECH DEBT: Delegation system hardcoded for old action names, future release roadmap'
test_can_delegate_operational_action (test_action_points.TestActionPointsDelegation.test_can_delegate_operational_action)
Test delegation of operational actions. ... skipped 'TECH DEBT: Delegation system hardcoded for old action names, future release roadmap'
test_delegation_effectiveness_stored (test_action_points.TestActionPointsDelegation.test_delegation_effectiveness_stored)
Test that delegation effectiveness is properly stored. ... skipped 'TECH DEBT: Delegation system hardcoded for old action names, future release roadmap'
test_delegation_fields_exist (test_action_points.TestActionPointsDelegation.test_delegation_fields_exist)
Test that delegatable actions have required delegation fields. ... skipped 'TECH DEBT: Delegation system hardcoded for old action names, future release roadmap'
test_delegation_with_lower_ap_cost (test_action_points.TestActionPointsDelegation.test_delegation_with_lower_ap_cost)
Test that delegation can provide lower AP cost for operational tasks. ... skipped 'TECH DEBT: Delegation system hardcoded for old action names, future release roadmap'
test_execute_action_with_delegation (test_action_points.TestActionPointsDelegation.test_execute_action_with_delegation)
Test executing action with delegation. ... skipped 'TECH DEBT: Delegation system hardcoded for old action names, future release roadmap'
test_execute_action_without_delegation (test_action_points.TestActionPointsDelegation.test_execute_action_without_delegation)
Test executing action without delegation. ... skipped 'TECH DEBT: Delegation system hardcoded for old action names, future release roadmap'
test_non_delegatable_action (test_action_points.TestActionPointsDelegation.test_non_delegatable_action)
Test that non-delegatable actions cannot be delegated. ... skipped 'TECH DEBT: Delegation system hardcoded for old action names, future release roadmap'
test_action_points_fields_exist (test_action_points.TestActionPointsInitialization.test_action_points_fields_exist)
Test that all AP-related fields exist. ... ok
test_action_points_initialization (test_action_points.TestActionPointsInitialization.test_action_points_initialization)
Test that AP are initialized correctly. ... ok
test_ap_reset_end_of_turn (test_action_points.TestActionPointsReset.test_ap_reset_end_of_turn)
Test that AP resets to max at end of turn. ... ok
test_glow_timer_decreases (test_action_points.TestActionPointsReset.test_glow_timer_decreases)
Test that glow timer decreases over turns. ... ok
test_add_specialized_staff (test_action_points.TestActionPointsStaffScaling.test_add_specialized_staff)
Test adding specialized staff through _add method. ... ok
test_ap_recalculation_on_turn_end (test_action_points.TestActionPointsStaffScaling.test_ap_recalculation_on_turn_end)
Test that max AP is recalculated at turn end. ... ok
test_calculate_max_ap_base (test_action_points.TestActionPointsStaffScaling.test_calculate_max_ap_base)
Test base AP calculation without staff bonuses. ... ok
test_calculate_max_ap_complex_composition (test_action_points.TestActionPointsStaffScaling.test_calculate_max_ap_complex_composition)
Test AP calculation with complex staff composition. ... ok
test_calculate_max_ap_with_admin_staff (test_action_points.TestActionPointsStaffScaling.test_calculate_max_ap_with_admin_staff)
Test AP calculation with admin staff bonus. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test_seed_20250929_074208.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_calculate_max_ap_with_regular_staff (test_action_points.TestActionPointsStaffScaling.test_calculate_max_ap_with_regular_staff)
Test AP calculation with regular staff bonus. ... ok
test_hiring_dialog_action_exists (test_action_points.TestActionPointsStaffScaling.test_hiring_dialog_action_exists)
Test that general hiring dialog action exists (replaces removed direct hire actions). ... ok
test_specialized_staff_cannot_go_negative (test_action_points.TestActionPointsStaffScaling.test_specialized_staff_cannot_go_negative)
Test that specialized staff counts cannot go below zero. ... ok
test_specialized_staff_fields_initialization (test_action_points.TestActionPointsStaffScaling.test_specialized_staff_fields_initialization)
Test that specialized staff fields are properly initialized. ... ok
test_specialized_staff_hiring_via_dialog (test_action_points.TestActionPointsStaffScaling.test_specialized_staff_hiring_via_dialog)
Test that specialized staff can be hired through the hiring dialog. ... FAIL
test_action_selection_with_sufficient_ap (test_action_points.TestActionPointsValidation.test_action_selection_with_sufficient_ap)
Test that actions can be selected when AP is sufficient. ... ok
test_action_validation_insufficient_ap (test_action_points.TestActionPointsValidation.test_action_validation_insufficient_ap)
Test that actions are blocked when AP is insufficient. ... ok
test_message_for_insufficient_ap (test_action_points.TestActionPointsValidation.test_message_for_insufficient_ap)
Test that appropriate message is shown for insufficient AP. ... ok
test_blob_position_updates_with_screen_size (test_action_points.TestBlobPositioning.test_blob_position_updates_with_screen_size)
Test that blob positions update when screen size changes. ... ok
test_calculate_blob_position_basic (test_action_points.TestBlobPositioning.test_calculate_blob_position_basic)
Test basic blob position calculation. ... ok
test_calculate_blob_position_center_spiral (test_action_points.TestBlobPositioning.test_calculate_blob_position_center_spiral)
Test that blobs are positioned in center-based spiral pattern. ... FAIL
test_calculate_blob_position_multiple_blobs (test_action_points.TestBlobPositioning.test_calculate_blob_position_multiple_blobs)
Test that multiple blobs get different positions. ... ok
test_ap_deduction_on_keyboard_action (test_action_points.TestEnhancedAPFeedback.test_ap_deduction_on_keyboard_action)
Test that AP is properly deducted when using keyboard shortcuts. ... ok
test_ap_glow_effect_on_action_execution (test_action_points.TestEnhancedAPFeedback.test_ap_glow_effect_on_action_execution)
Test that AP glow effect is triggered when executing actions. ... ok
test_ap_glow_timer_initialization (test_action_points.TestEnhancedAPFeedback.test_ap_glow_timer_initialization)
Test that AP glow timer is properly initialized. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test_seed_20250929_074209.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_error_tracking_for_easter_egg (test_action_points.TestEnhancedAPFeedback.test_error_tracking_for_easter_egg)
Test that repeated errors are tracked for easter egg. ... ok
test_execute_gameplay_action_by_keyboard_action_not_available (test_action_points.TestKeyboardShortcuts.test_execute_gameplay_action_by_keyboard_action_not_available)
Test keyboard shortcuts handle unavailable actions correctly. ... ERROR
test_execute_gameplay_action_by_keyboard_insufficient_ap (test_action_points.TestKeyboardShortcuts.test_execute_gameplay_action_by_keyboard_insufficient_ap)
Test keyboard shortcuts handle insufficient AP correctly. ... ok
test_execute_gameplay_action_by_keyboard_insufficient_money (test_action_points.TestKeyboardShortcuts.test_execute_gameplay_action_by_keyboard_insufficient_money)
Test keyboard shortcuts handle insufficient money correctly. ... ok
test_execute_gameplay_action_by_keyboard_invalid_index (test_action_points.TestKeyboardShortcuts.test_execute_gameplay_action_by_keyboard_invalid_index)
Test keyboard shortcuts handle invalid action indices. ... ok
test_execute_gameplay_action_by_keyboard_success (test_action_points.TestKeyboardShortcuts.test_execute_gameplay_action_by_keyboard_success)
Test that keyboard shortcuts execute actions successfully. ... ok
test_keyboard_shortcut_auto_delegation (test_action_points.TestKeyboardShortcuts.test_keyboard_shortcut_auto_delegation)
Test that keyboard shortcuts use auto-delegation when beneficial. ... skipped 'TECH DEBT: Delegation system hardcoded for old actions, future release'
test_manager_action_uses_new_rule_system (test_action_rules.TestActionRulesIntegration.test_manager_action_uses_new_rule_system)
Test that the manager action uses the new rule system ... ok
test_scout_action_uses_new_rule_system (test_action_rules.TestActionRulesIntegration.test_scout_action_uses_new_rule_system)
Test that the scout action uses the new rule system ... FAIL
test_search_action_uses_new_rule_system (test_action_rules.TestActionRulesIntegration.test_search_action_uses_new_rule_system)
Test that the search action uses the new rule system ... ok
test_combine_and (test_action_rules.TestActionRulesSystem.test_combine_and)
Test AND logic combination ... ok
test_combine_or (test_action_rules.TestActionRulesSystem.test_combine_or)
Test OR logic combination ... ok
test_not_yet_triggered (test_action_rules.TestActionRulesSystem.test_not_yet_triggered)
Test negation rule for milestones ... ok
test_requires_any_specialized_staff (test_action_rules.TestActionRulesSystem.test_requires_any_specialized_staff)
Test specialized staff rule requirements ... ok
test_requires_board_members (test_action_rules.TestActionRulesSystem.test_requires_board_members)
Test board member rule requirements ... ok
test_requires_milestone_triggered (test_action_rules.TestActionRulesSystem.test_requires_milestone_triggered)
Test milestone-based rule requirements ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test_seed_20250929_074210.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_requires_money (test_action_rules.TestActionRulesSystem.test_requires_money)
Test money-based rule requirements ... ok
test_requires_reputation (test_action_rules.TestActionRulesSystem.test_requires_reputation)
Test reputation-based rule requirements ... ok
test_requires_scrollable_log (test_action_rules.TestActionRulesSystem.test_requires_scrollable_log)
Test scrollable log rule requirements ... ok
test_requires_staff (test_action_rules.TestActionRulesSystem.test_requires_staff)
Test staff-based rule requirements ... ok
test_requires_staff_and_turn (test_action_rules.TestActionRulesSystem.test_requires_staff_and_turn)
Test composite rule requiring both staff and turn ... ok
test_requires_turn (test_action_rules.TestActionRulesSystem.test_requires_turn)
Test turn-based rule requirements ... ok
test_requires_upgrade (test_action_rules.TestActionRulesSystem.test_requires_upgrade)
Test upgrade-based rule requirements ... ok
test_manager_unlock_rule (test_action_rules.TestConvenienceRuleFunctions.test_manager_unlock_rule)
Test the manager unlock rule function ... ok
test_scout_unlock_rule (test_action_rules.TestConvenienceRuleFunctions.test_scout_unlock_rule)
Test the scout unlock rule function ... ok
test_search_unlock_rule (test_action_rules.TestConvenienceRuleFunctions.test_search_unlock_rule)
Test the search unlock rule function ... ok
test_compact_text_parameters (test_action_text_display.TestActionTextDisplay.test_compact_text_parameters)
Test compact UI text parameters are reasonable ... ok
test_optimal_action_text_long_name (test_action_text_display.TestActionTextDisplay.test_optimal_action_text_long_name)
Test optimal text for action with very long name ... ok
test_optimal_action_text_no_shortcut (test_action_text_display.TestActionTextDisplay.test_optimal_action_text_no_shortcut)
Test optimal text for action without shortcut (index >= 9) ... ok
test_optimal_action_text_short_name (test_action_text_display.TestActionTextDisplay.test_optimal_action_text_short_name)
Test optimal text for action with short name ... ok
test_text_fits_in_small_buttons (test_action_text_display.TestActionTextDisplay.test_text_fits_in_small_buttons)
Test that text properly handles very small button sizes ... ok
test_text_truncation (test_action_text_display.TestActionTextDisplay.test_text_truncation)
Test that long text is properly truncated with ellipsis ... ok
test_ui_renders_without_crash (test_action_text_display.TestActionTextDisplay.test_ui_renders_without_crash)
Test that UI renders without crashing with text fixes ... ok
test_visual_feedback_text_handling (test_action_text_display.TestActionTextDisplay.test_visual_feedback_text_handling)
Test that visual feedback system handles text overflow ... ok
test_activity_log_clears_by_default_every_turn (test_activity_log_behavior.TestActivityLogBehavior.test_activity_log_clears_by_default_every_turn)
Test that activity log clears every turn when scrollable log is disabled ... ok
test_activity_log_minimization_requires_upgrade (test_activity_log_behavior.TestActivityLogBehavior.test_activity_log_minimization_requires_upgrade)
Test that activity log minimization only works with the upgrade ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test_seed_20250929_074211.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_activity_log_preserves_history_when_scrollable_enabled (test_activity_log_behavior.TestActivityLogBehavior.test_activity_log_preserves_history_when_scrollable_enabled)
Test that activity log preserves history when scrollable log is enabled ... ok
test_compact_activity_display_upgrade_available (test_activity_log_behavior.TestActivityLogBehavior.test_compact_activity_display_upgrade_available)
Test that compact activity display upgrade exists and works ... ok
test_scrollable_event_log_unlocks_at_turn_5 (test_activity_log_behavior.TestActivityLogBehavior.test_scrollable_event_log_unlocks_at_turn_5)
Test that scrollable event log upgrade triggers at turn 5 ... ok
test_activity_log_can_be_minimized (test_activity_log_behavior.TestActivityLogMinimization.test_activity_log_can_be_minimized)
Test that activity log can be minimized when upgrade is available ... ok
test_expand_button_rect_calculation (test_activity_log_behavior.TestActivityLogMinimization.test_expand_button_rect_calculation)
Test that expand button rectangle is calculated correctly ... ok
test_minimize_button_rect_calculation (test_activity_log_behavior.TestActivityLogMinimization.test_minimize_button_rect_calculation)
Test that minimize button rectangle is calculated correctly ... ok
test_activity_log_drag_initialization (test_activity_log_improvements.TestActivityLogDrag.test_activity_log_drag_initialization)
Test that drag-related attributes are properly initialized ... ok
test_activity_log_position_methods (test_activity_log_improvements.TestActivityLogDrag.test_activity_log_position_methods)
Test position calculation methods ... ok
test_drag_constrains_position_to_screen (test_activity_log_improvements.TestActivityLogDrag.test_drag_constrains_position_to_screen)
Test that dragging constrains activity log position to screen bounds ... ok
test_drag_motion_updates_position (test_activity_log_improvements.TestActivityLogDrag.test_drag_motion_updates_position)
Test that mouse motion updates activity log position during drag ... ok
test_drag_release_stops_dragging (test_activity_log_improvements.TestActivityLogDrag.test_drag_release_stops_dragging)
Test that mouse release stops drag operation ... ok
test_drag_start_on_activity_log_click (test_activity_log_improvements.TestActivityLogDrag.test_drag_start_on_activity_log_click)
Test that clicking on activity log starts drag operation ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test_seed_20250929_074212.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_tooltip_shows_expand_info_when_minimized (test_activity_log_improvements.TestActivityLogTooltip.test_tooltip_shows_expand_info_when_minimized)
Test that hovering over minimized activity log shows expand info ... ok
test_tooltip_shows_minimize_info_when_upgrade_purchased (test_activity_log_improvements.TestActivityLogTooltip.test_tooltip_shows_minimize_info_when_upgrade_purchased)
Test that hovering over activity log shows minimize info when upgrade is purchased ... ok
test_tooltip_shows_purchase_prompt_when_upgrade_not_purchased (test_activity_log_improvements.TestActivityLogTooltip.test_tooltip_shows_purchase_prompt_when_upgrade_not_purchased)
Test that hovering over activity log shows purchase prompt when upgrade not purchased ... ok
test_config_files_ascii_only (test_ascii_compliance.TestASCIICompliance.test_config_files_ascii_only)
Check all config files for ASCII compliance. ... ok
test_documentation_files_ascii_only (test_ascii_compliance.TestASCIICompliance.test_documentation_files_ascii_only)
Check documentation files for ASCII compliance. ... 
  test_documentation_files_ascii_only (test_ascii_compliance.TestASCIICompliance.test_documentation_files_ascii_only) (file='MASTER_CLEANUP_REFERENCE.md')
Check documentation files for ASCII compliance. ... FAIL
test_main_entry_points_ascii_only (test_ascii_compliance.TestASCIICompliance.test_main_entry_points_ascii_only)
Check main entry point files for ASCII compliance. ... ok
test_python_files_ascii_only (test_ascii_compliance.TestASCIICompliance.test_python_files_ascii_only)
Check all Python files for ASCII compliance. ... ok
test_bug_reporter_initialization (test_bug_reporter.TestBugReporter.test_bug_reporter_initialization)
Test that BugReporter initializes correctly. ... ok
test_create_bug_report_minimal (test_bug_reporter.TestBugReporter.test_create_bug_report_minimal)
Test creating a bug report with minimal information. ... ok
test_create_bug_report_with_attribution (test_bug_reporter.TestBugReporter.test_create_bug_report_with_attribution)
Test creating a bug report with attribution. ... ok
test_create_bug_report_without_attribution (test_bug_reporter.TestBugReporter.test_create_bug_report_without_attribution)
Test creating anonymous bug report. ... ok
test_format_for_github (test_bug_reporter.TestBugReporter.test_format_for_github)
Test formatting bug report for GitHub issues. ... ok
test_format_for_github_anonymous (test_bug_reporter.TestBugReporter.test_format_for_github_anonymous)
Test formatting anonymous bug report for GitHub. ... ok
test_get_recent_reports_empty (test_bug_reporter.TestBugReporter.test_get_recent_reports_empty)
Test getting recent reports when none exist. ... ok
test_get_recent_reports_with_files (test_bug_reporter.TestBugReporter.test_get_recent_reports_with_files)
Test getting recent reports when files exist. ... ok
test_save_report_locally (test_bug_reporter.TestBugReporter.test_save_report_locally)
Test saving bug report to local file system. ... ok
test_system_info_collection (test_bug_reporter.TestBugReporter.test_system_info_collection)
Test that system information is collected correctly. ... ok
test_attribution_optional (test_bug_reporter.TestBugReporterPrivacy.test_attribution_optional)
Test that attribution is completely optional. ... ok
test_contact_info_optional (test_bug_reporter.TestBugReporterPrivacy.test_contact_info_optional)
Test that contact information is optional even with attribution. ... ok
test_no_personal_info_in_system_data (test_bug_reporter.TestBugReporterPrivacy.test_no_personal_info_in_system_data)
Test that system info contains no personal information. ... ok
test_command_strings (unittest.loader._FailedTest.test_command_strings) ... ERROR
test_buy_compute_action_exists (test_compute_and_sound.TestComputeSystem.test_buy_compute_action_exists)
Test that Buy Compute action exists in actions list ... ok
test_buy_compute_action_functionality (test_compute_and_sound.TestComputeSystem.test_buy_compute_action_functionality)
Test that Buy Compute action actually adds compute ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test_seed_20250929_074215.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_compute_initial_value (test_compute_and_sound.TestComputeSystem.test_compute_initial_value)
Test that compute starts at 0 ... ok
test_employee_blobs_initialized (test_compute_and_sound.TestComputeSystem.test_employee_blobs_initialized)
Test that employee blobs are created for initial staff ... ok
test_employee_productivity_with_compute (test_compute_and_sound.TestComputeSystem.test_employee_productivity_with_compute)
Test employee productivity when compute is available ... ok
test_employee_productivity_without_compute (test_compute_and_sound.TestComputeSystem.test_employee_productivity_without_compute)
Test employee productivity when no compute is available ... ok
test_papers_published_initial_value (test_compute_and_sound.TestComputeSystem.test_papers_published_initial_value)
Test that papers published starts at 0 ... ok
test_research_progress_initial_value (test_compute_and_sound.TestComputeSystem.test_research_progress_initial_value)
Test that research progress starts at 0 ... ok
test_blob_animation_initial_state (test_compute_and_sound.TestEmployeeBlobSystem.test_blob_animation_initial_state)
Test that initial blobs are fully animated ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test_seed_20250929_074216.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_blob_properties (test_compute_and_sound.TestEmployeeBlobSystem.test_blob_properties)
Test that blobs have required properties ... ok
test_firing_removes_blobs (test_compute_and_sound.TestEmployeeBlobSystem.test_firing_removes_blobs)
Test that losing staff removes employee blobs ... ok
test_hiring_adds_blobs (test_compute_and_sound.TestEmployeeBlobSystem.test_hiring_adds_blobs)
Test that hiring staff adds employee blobs ... ok
test_initial_blob_count (test_compute_and_sound.TestEmployeeBlobSystem.test_initial_blob_count)
Test that initial blobs match staff count ... ok
test_blob_sound_doesnt_crash (test_compute_and_sound.TestSoundSystem.test_blob_sound_doesnt_crash)
Test that playing blob sound doesn't crash (even if no audio) ... ok
test_sound_manager_exists (test_compute_and_sound.TestSoundSystem.test_sound_manager_exists)
Test that sound manager is created ... ok
test_sound_set_enabled (test_compute_and_sound.TestSoundSystem.test_sound_set_enabled)
Test explicitly setting sound enabled/disabled ... ok
test_sound_toggle (test_compute_and_sound.TestSoundSystem.test_sound_toggle)
Test sound enable/disable toggle ... ok
test_zabinga_sound_doesnt_crash (test_compute_and_sound.TestSoundSystem.test_zabinga_sound_doesnt_crash)
Test that playing Zabinga sound doesn't crash (even if no audio) ... ok
test_zabinga_sound_multiple_papers (test_compute_and_sound.TestSoundSystem.test_zabinga_sound_multiple_papers)
Test that Zabinga sound is triggered when multiple papers are completed at once ... ok
test_zabinga_sound_on_paper_completion (test_compute_and_sound.TestSoundSystem.test_zabinga_sound_on_paper_completion)
Test that Zabinga sound is triggered when research papers are completed ... ok
test_config_directory_creation_failure (test_config_manager.TestConfigErrorHandling.test_config_directory_creation_failure)
Test handling when config directory cannot be created. ... ok
test_config_load_binary_file (test_config_manager.TestConfigErrorHandling.test_config_load_binary_file)
Test handling when config files contain binary data. ... ok
test_config_load_corrupted_file (test_config_manager.TestConfigErrorHandling.test_config_load_corrupted_file)
Test handling when config files are corrupted. ... ok
test_config_load_empty_file (test_config_manager.TestConfigErrorHandling.test_config_load_empty_file)
Test handling when config files are empty. ... ok
test_config_save_permission_denied (test_config_manager.TestConfigErrorHandling.test_config_save_permission_denied)
Test handling when config files cannot be saved due to permissions. ... ok
test_config_switching_to_nonexistent (test_config_manager.TestConfigErrorHandling.test_config_switching_to_nonexistent)
Test switching to a config that doesn't exist. ... ok
test_config_system_resilience (test_config_manager.TestConfigErrorHandling.test_config_system_resilience)
Test that the config system remains functional even with multiple failures. ... ok
test_current_config_file_corruption (test_config_manager.TestConfigErrorHandling.test_current_config_file_corruption)
Test handling when current_config.json is corrupted. ... ok
test_graceful_fallback_when_all_fails (test_config_manager.TestConfigErrorHandling.test_graceful_fallback_when_all_fails)
Test that system gracefully falls back to in-memory defaults when everything fails. ... ok
test_action_points_balanced (test_config_manager.TestConfigGameBalanceValidation.test_action_points_balanced)
Test that action point settings are balanced. ... ok
test_milestones_progression (test_config_manager.TestConfigGameBalanceValidation.test_milestones_progression)
Test that milestone thresholds create good progression. ... ok
test_resource_limits_sensible (test_config_manager.TestConfigGameBalanceValidation.test_resource_limits_sensible)
Test that resource limits prevent overflow/underflow. ... ok
test_starting_resources_reasonable (test_config_manager.TestConfigGameBalanceValidation.test_starting_resources_reasonable)
Test that starting resources are reasonable. ... ok
test_ui_settings_valid (test_config_manager.TestConfigGameBalanceValidation.test_ui_settings_valid)
Test that UI settings have valid values. ... ok
test_config_directory_creation (test_config_manager.TestConfigManager.test_config_directory_creation)
Test that config directory is created when needed. ... ok
test_config_info_retrieval (test_config_manager.TestConfigManager.test_config_info_retrieval)
Test getting metadata about configurations. ... ok
test_config_switching (test_config_manager.TestConfigManager.test_config_switching)
Test switching between different configurations. ... ok
test_create_config_copy (test_config_manager.TestConfigManager.test_create_config_copy)
Test creating copies of existing configurations. ... ok
test_create_default_config_if_needed (test_config_manager.TestConfigManager.test_create_default_config_if_needed)
Test default config file creation when none exists. ... ok
test_current_config_persistence (test_config_manager.TestConfigManager.test_current_config_persistence)
Test that current config selection persists across sessions. ... ok
test_default_config_generation (test_config_manager.TestConfigManager.test_default_config_generation)
Test that default config is generated with expected structure. ... ok
test_delete_config (test_config_manager.TestConfigManager.test_delete_config)
Test deleting configuration files. ... ok
test_error_handling (test_config_manager.TestConfigManager.test_error_handling)
Test error handling for file operations. ... ok
test_list_available_configs (test_config_manager.TestConfigManager.test_list_available_configs)
Test listing available configuration files. ... ok
test_save_and_load_config (test_config_manager.TestConfigManager.test_save_and_load_config)
Test saving and loading configuration files. ... ok
test_get_current_config_function (test_config_manager.TestConfigSystemIntegration.test_get_current_config_function)
Test the convenience function for getting current config. ... ok
test_initialize_config_system (test_config_manager.TestConfigSystemIntegration.test_initialize_config_system)
Test the initialization function. ... ok
test_check_hover_no_duplicate_returns_fix_263 (test_critical_bug_fixes.TestCriticalBugFixes.test_check_hover_no_duplicate_returns_fix_263)
Test fix for issue #263: duplicate return statements in check_hover. ... FAIL
test_check_hover_normal_operation_after_fix (test_critical_bug_fixes.TestCriticalBugFixes.test_check_hover_normal_operation_after_fix)
Test that check_hover works normally after removing duplicate returns. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test-critical-fixes_20250929_074217.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_list_operations_are_safe_in_game_loops (test_critical_bug_fixes.TestCriticalBugFixes.test_list_operations_are_safe_in_game_loops)
Test that game state operations don't modify lists during iteration. ... ok
test_magical_orb_list_modification_fix_265 (test_critical_bug_fixes.TestCriticalBugFixes.test_magical_orb_list_modification_fix_265)
Test fix for issue #265: safe list sampling instead of modification during iteration. ... ERROR
test_magical_orb_scouting_with_multiple_iterations (test_critical_bug_fixes.TestCriticalBugFixes.test_magical_orb_scouting_with_multiple_iterations)
Test that magical orb scouting works correctly with multiple stat sampling. ... ERROR
test_mouse_wheel_handling_verification_261 (test_critical_bug_fixes.TestCriticalBugFixes.test_mouse_wheel_handling_verification_261)
Test comprehensive mouse wheel handling for issue #261: verify no crashes. ... ok
test_robust_error_handling_in_critical_methods (test_critical_bug_fixes.TestCriticalBugFixes.test_robust_error_handling_in_critical_methods)
Test that critical methods have robust error handling after fixes. ... ok
test_check_hover_single_return_path (test_critical_bug_fixes.TestRegressionPrevention.test_check_hover_single_return_path)
Ensure check_hover has only one return path per logical branch (prevents #263 regression). ... FAIL
test_magical_orb_uses_safe_sampling (test_critical_bug_fixes.TestRegressionPrevention.test_magical_orb_uses_safe_sampling)
Ensure magical orb code uses random.sample instead of list.remove (prevents #265 regression). ... ok
test_research_option_execution_integration (test_critical_bug_fixes.TestRegressionPrevention.test_research_option_execution_integration)
Integration test for research option execution with technical debt. ... ERROR
test_research_quality_technical_debt_fix (test_critical_bug_fixes.TestRegressionPrevention.test_research_quality_technical_debt_fix)
Test fix for critical TypeError in research quality system - proper method signatures. ... ERROR
test_filename_to_key_mapping (test_custom_sound_overrides.TestCustomSoundOverrides.test_filename_to_key_mapping)
Test that filenames are correctly mapped to keys ... ok
test_integration_with_sound_manager_init (test_custom_sound_overrides.TestCustomSoundOverrides.test_integration_with_sound_manager_init)
Test that custom sound loading is integrated into SoundManager.__init__ ... ok
test_load_sounds_audio_unavailable (test_custom_sound_overrides.TestCustomSoundOverrides.test_load_sounds_audio_unavailable)
Test loading sounds when audio is unavailable ... ok
test_load_sounds_empty_folder (test_custom_sound_overrides.TestCustomSoundOverrides.test_load_sounds_empty_folder)
Test loading sounds from empty folder ... ok
test_load_sounds_handles_pygame_errors (test_custom_sound_overrides.TestCustomSoundOverrides.test_load_sounds_handles_pygame_errors)
Test that loading handles pygame.error gracefully ... ok
test_load_sounds_missing_folder (test_custom_sound_overrides.TestCustomSoundOverrides.test_load_sounds_missing_folder)
Test loading sounds when folder doesn't exist ... ok
test_load_sounds_with_mock_files (test_custom_sound_overrides.TestCustomSoundOverrides.test_load_sounds_with_mock_files)
Test loading sounds with mocked pygame.mixer.Sound ... FAIL
test_recursive_loading (test_custom_sound_overrides.TestCustomSoundOverrides.test_recursive_loading)
Test that sounds are loaded recursively from subdirectories ... ERROR
test_sound_override_behavior (test_custom_sound_overrides.TestCustomSoundOverrides.test_sound_override_behavior)
Test that custom sounds override built-in sounds ... ok
test_known_event_keys_exist_in_sound_toggles (test_custom_sound_overrides.TestSoundOverrideKeys.test_known_event_keys_exist_in_sound_toggles)
Test that known event keys exist in the sound toggles ... ok
test_zabinga_key_exists (test_custom_sound_overrides.TestSoundOverrideKeys.test_zabinga_key_exists)
Test that zabinga key is handled (even if not in sound_toggles) ... ok
test_action_creation (test_data_models.TestActionDataclass.test_action_creation)
Test basic Action creation with required fields. ... ok
test_action_from_dict (test_data_models.TestActionDataclass.test_action_from_dict)
Test creating Action from legacy dict format. ... ok
test_action_to_dict (test_data_models.TestActionDataclass.test_action_to_dict)
Test converting Action to legacy dict format. ... ok
test_action_type_inference (test_data_models.TestActionDataclass.test_action_type_inference)
Test that action types are correctly inferred from name/description. ... ok
test_action_with_delegation (test_data_models.TestActionDataclass.test_action_with_delegation)
Test Action with delegation parameters. ... ok
test_employee_subtype_creation (test_data_models.TestEmployeeSubtypeDataclass.test_employee_subtype_creation)
Test basic EmployeeSubtype creation. ... ok
test_employee_subtype_from_dict (test_data_models.TestEmployeeSubtypeDataclass.test_employee_subtype_from_dict)
Test creating EmployeeSubtype from legacy dict format. ... ok
test_employee_subtype_to_dict (test_data_models.TestEmployeeSubtypeDataclass.test_employee_subtype_to_dict)
Test converting EmployeeSubtype to legacy dict format. ... ok
test_event_category_inference (test_data_models.TestEventDataclass.test_event_category_inference)
Test that event categories are correctly inferred. ... ok
test_event_creation (test_data_models.TestEventDataclass.test_event_creation)
Test basic Event creation. ... ok
test_event_to_dict (test_data_models.TestEventDataclass.test_event_to_dict)
Test converting Event to legacy dict format. ... ok
test_actions_conversion_roundtrip (test_data_models.TestLegacyAdapters.test_actions_conversion_roundtrip)
Test that Actions can be converted to dicts and back without loss. ... ok
test_employee_subtypes_conversion_roundtrip (test_data_models.TestLegacyAdapters.test_employee_subtypes_conversion_roundtrip)
Test that EmployeeSubtypes can be converted to dicts and back. ... ok
test_upgrades_conversion_roundtrip (test_data_models.TestLegacyAdapters.test_upgrades_conversion_roundtrip)
Test that Upgrades can be converted to dicts and back without loss. ... ok
test_upgrade_creation (test_data_models.TestUpgradeDataclass.test_upgrade_creation)
Test basic Upgrade creation. ... ok
test_upgrade_from_dict (test_data_models.TestUpgradeDataclass.test_upgrade_from_dict)
Test creating Upgrade from legacy dict format. ... ok
test_upgrade_to_dict (test_data_models.TestUpgradeDataclass.test_upgrade_to_dict)
Test converting Upgrade to legacy dict format. ... ok
test_upgrade_with_custom_effect (test_data_models.TestUpgradeDataclass.test_upgrade_with_custom_effect)
Test Upgrade with custom effect. ... ok
test_basic_reproducibility (test_deterministic_rng.TestDeterministicRNG.test_basic_reproducibility)
Test that same seed produces same random sequences. ... ok
test_context_isolation (test_deterministic_rng.TestDeterministicRNG.test_context_isolation)
Test that different contexts produce different sequences. ... ok
test_context_reproducibility (test_deterministic_rng.TestDeterministicRNG.test_context_reproducibility)
Test that same context produces reproducible results. ... ok
test_different_seeds_different_sequences (test_deterministic_rng.TestDeterministicRNG.test_different_seeds_different_sequences)
Test that different seeds produce different sequences. ... ok
test_get_state_info (test_deterministic_rng.TestDeterministicRNG.test_get_state_info)
Test state information retrieval. ... ok
test_random_methods (test_deterministic_rng.TestDeterministicRNG.test_random_methods)
Test all random generation methods work consistently. ... ok
test_choice_with_empty_list (test_deterministic_rng.TestDeterministicRNGEdgeCases.test_choice_with_empty_list)
Test choice method with edge cases. ... ok
test_empty_context (test_deterministic_rng.TestDeterministicRNGEdgeCases.test_empty_context)
Test behavior with empty context. ... ok
test_empty_seed (test_deterministic_rng.TestDeterministicRNGEdgeCases.test_empty_seed)
Test behavior with empty seed. ... ok
test_invalid_range_parameters (test_deterministic_rng.TestDeterministicRNGEdgeCases.test_invalid_range_parameters)
Test invalid parameters for range methods. ... ok
test_large_numbers (test_deterministic_rng.TestDeterministicRNGEdgeCases.test_large_numbers)
Test with large number ranges. ... ok
test_get_rng_without_init_raises_error (test_deterministic_rng.TestGlobalRNGSystem.test_get_rng_without_init_raises_error)
Test that accessing RNG before initialization raises error. ... ok
test_global_initialization (test_deterministic_rng.TestGlobalRNGSystem.test_global_initialization)
Test global RNG initialization. ... ok
test_global_reproducibility (test_deterministic_rng.TestGlobalRNGSystem.test_global_reproducibility)
Test global RNG produces reproducible results. ... ok
test_reset_functionality (test_deterministic_rng.TestGlobalRNGSystem.test_reset_functionality)
Test RNG reset functionality. ... ok
test_all_rng_methods_with_recording (test_deterministic_rng_enhanced.TestEnhancedDeterministicRNG.test_all_rng_methods_with_recording)
Test that all RNG methods properly record calls. ... ok
test_call_history_tracking (test_deterministic_rng_enhanced.TestEnhancedDeterministicRNG.test_call_history_tracking)
Test that all RNG calls are properly recorded. ... ok
test_challenge_export_functionality (test_deterministic_rng_enhanced.TestEnhancedDeterministicRNG.test_challenge_export_functionality)
Test challenge export for community sharing. ... ok
test_context_independence (test_deterministic_rng_enhanced.TestEnhancedDeterministicRNG.test_context_independence)
Test that different contexts produce independent sequences. ... ok
test_debug_info_completeness (test_deterministic_rng_enhanced.TestEnhancedDeterministicRNG.test_debug_info_completeness)
Test that debug info contains all expected fields. ... ok
test_deterministic_signature_consistency (test_deterministic_rng_enhanced.TestEnhancedDeterministicRNG.test_deterministic_signature_consistency)
Test that deterministic signatures are consistent for same scenarios. ... ok
test_memorable_seed_generation (test_deterministic_rng_enhanced.TestEnhancedDeterministicRNG.test_memorable_seed_generation)
Test that memorable seeds are generated consistently. ... ok
test_perfect_reproducibility (test_deterministic_rng_enhanced.TestEnhancedDeterministicRNG.test_perfect_reproducibility)
Test that identical seeds produce identical sequences. ... ok
test_verbose_debug_output (test_deterministic_rng_enhanced.TestEnhancedDeterministicRNG.test_verbose_debug_output)
Test verbose debugging functionality. ... ok
test_blocking_feedback_messages (test_dialog_state_manager.TestDialogStateManager.test_blocking_feedback_messages)
Test appropriate blocking feedback messages. ... ok
test_blocking_state_caching (test_dialog_state_manager.TestDialogStateManager.test_blocking_state_caching)
Test that blocking state is cached for performance. ... ok
test_context_manager_usage (test_dialog_state_manager.TestDialogStateManager.test_context_manager_usage)
Test using dialog manager as context manager. ... ok
test_context_manager_validation_on_exit (test_dialog_state_manager.TestDialogStateManager.test_context_manager_validation_on_exit)
Test context manager performs validation on exit. ... ok
test_dialog_type_coverage (test_dialog_state_manager.TestDialogStateManager.test_dialog_type_coverage)
Test that all dialog types are properly handled. ... ok
test_dismiss_all_dialogs (test_dialog_state_manager.TestDialogStateManager.test_dismiss_all_dialogs)
Test dismissing all active dialogs. ... ok
test_dismiss_fundraising_dialog (test_dialog_state_manager.TestDialogStateManager.test_dismiss_fundraising_dialog)
Test dismissing fundraising dialog. ... ok
test_dismiss_hiring_dialog (test_dialog_state_manager.TestDialogStateManager.test_dismiss_hiring_dialog)
Test dismissing hiring dialog. ... ok
test_dismiss_inactive_dialog (test_dialog_state_manager.TestDialogStateManager.test_dismiss_inactive_dialog)
Test dismissing a dialog that isn't active. ... ok
test_dismiss_intelligence_dialog (test_dialog_state_manager.TestDialogStateManager.test_dismiss_intelligence_dialog)
Test dismissing intelligence dialog. ... ok
test_dismiss_research_dialog (test_dialog_state_manager.TestDialogStateManager.test_dismiss_research_dialog)
Test dismissing research dialog. ... ok
test_dismiss_tutorial (test_dialog_state_manager.TestDialogStateManager.test_dismiss_tutorial)
Test dismissing tutorial. ... ok
test_emergency_cleanup (test_dialog_state_manager.TestDialogStateManager.test_emergency_cleanup)
Test emergency cleanup of stuck dialog states. ... ok
test_fundraising_dialog_detection (test_dialog_state_manager.TestDialogStateManager.test_fundraising_dialog_detection)
Test detection of active fundraising dialog. ... ok
test_get_active_dialogs_immutable (test_dialog_state_manager.TestDialogStateManager.test_get_active_dialogs_immutable)
Test that get_active_dialogs returns an immutable copy. ... ok
test_hiring_dialog_detection (test_dialog_state_manager.TestDialogStateManager.test_hiring_dialog_detection)
Test detection of active hiring dialog. ... ok
test_intelligence_dialog_detection (test_dialog_state_manager.TestDialogStateManager.test_intelligence_dialog_detection)
Test detection of active intelligence dialog. ... ok
test_multiple_dialogs_priority (test_dialog_state_manager.TestDialogStateManager.test_multiple_dialogs_priority)
Test dialog priority when multiple dialogs are active. ... ok
test_no_active_dialogs_initially (test_dialog_state_manager.TestDialogStateManager.test_no_active_dialogs_initially)
Test that no dialogs are active initially. ... ok
test_none_vs_false_handling (test_dialog_state_manager.TestDialogStateManager.test_none_vs_false_handling)
Test that None and False are both treated as inactive. ... ok
test_research_dialog_detection (test_dialog_state_manager.TestDialogStateManager.test_research_dialog_detection)
Test detection of active research dialog. ... ok
test_tutorial_feedback_message (test_dialog_state_manager.TestDialogStateManager.test_tutorial_feedback_message)
Test tutorial blocking feedback message. ... ok
test_tutorial_priority (test_dialog_state_manager.TestDialogStateManager.test_tutorial_priority)
Test that tutorial has highest priority. ... ok
test_validate_dialog_states_false_issue (test_dialog_state_manager.TestDialogStateManager.test_validate_dialog_states_false_issue)
Test state validation detects False values. ... ok
test_validate_dialog_states_no_issues (test_dialog_state_manager.TestDialogStateManager.test_validate_dialog_states_no_issues)
Test state validation with no issues. ... ok
test_dialog_dismiss_functions_exist (test_dialog_system_integration.TestDialogSystemIntegration.test_dialog_dismiss_functions_exist)
Test that all dialog dismiss functions exist and use DialogManager. ... ok
test_dialog_manager_integration (test_dialog_system_integration.TestDialogSystemIntegration.test_dialog_manager_integration)
Test DialogManager integration with all dialog types. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test-dialog-system_20250929_074218.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_dialog_option_structures (test_dialog_system_integration.TestDialogSystemIntegration.test_dialog_option_structures)
Test that dialog options have required fields. ... ok
test_dialog_selection_functions_exist (test_dialog_system_integration.TestDialogSystemIntegration.test_dialog_selection_functions_exist)
Test that dialog selection functions exist for option handling. ... ok
test_dialog_system_no_memory_leaks (test_dialog_system_integration.TestDialogSystemIntegration.test_dialog_system_no_memory_leaks)
Test that dialogs are properly cleaned up. ... ok
test_dialog_trigger_functions_exist (test_dialog_system_integration.TestDialogSystemIntegration.test_dialog_trigger_functions_exist)
Test that all dialog trigger functions exist and are callable. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test-dialog-system_20250929_074219.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_dialog_ui_rendering_returns_clickable_rects (test_dialog_system_integration.TestDialogSystemIntegration.test_dialog_ui_rendering_returns_clickable_rects)
Test that dialog UI functions return clickable rectangles. ... ok
test_intelligence_dialog_workflow (test_dialog_system_integration.TestDialogSystemIntegration.test_intelligence_dialog_workflow)
Test complete intelligence dialog workflow. ... ok
test_media_dialog_workflow (test_dialog_system_integration.TestDialogSystemIntegration.test_media_dialog_workflow)
Test complete media dialog workflow. ... ok
test_multiple_dialogs_exclusivity (test_dialog_system_integration.TestDialogSystemIntegration.test_multiple_dialogs_exclusivity)
Test that only one dialog can be pending at a time. ... ok
test_technical_debt_dialog_workflow (test_dialog_system_integration.TestDialogSystemIntegration.test_technical_debt_dialog_workflow)
Test complete technical debt dialog workflow. ... ok
test_dialog_rendering_with_unavailable_options (test_dialog_system_integration.TestDialogUIRendering.test_dialog_rendering_with_unavailable_options)
Test dialog rendering handles unavailable options correctly. ... ok
test_draw_intelligence_dialog_rendering (test_dialog_system_integration.TestDialogUIRendering.test_draw_intelligence_dialog_rendering)
Test intelligence dialog UI rendering. ... ok
test_draw_media_dialog_rendering (test_dialog_system_integration.TestDialogUIRendering.test_draw_media_dialog_rendering)
Test media dialog UI rendering. ... ok
test_draw_technical_debt_dialog_rendering (test_dialog_system_integration.TestDialogUIRendering.test_draw_technical_debt_dialog_rendering)
Test technical debt dialog UI rendering. ... ok
test_economic_system_initialization (test_economic_cycles.TestEconomicCycles.test_economic_system_initialization)
Test that economic system initializes correctly. ... ok
test_economic_timeline_progression (test_economic_cycles.TestEconomicCycles.test_economic_timeline_progression)
Test economic phase transitions over time. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test-economic-cycles_20250929_074220.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_fundraising_multiplier_effects (test_economic_cycles.TestEconomicCycles.test_fundraising_multiplier_effects)
Test that economic phases affect fundraising. ... ok
test_click_positions_calculated_correctly (test_end_game_menu.TestEndGameMenuClicks.test_click_positions_calculated_correctly)
Test that click handling doesn't crash with various positions. ... ok
test_end_game_menu_items_defined (test_end_game_menu.TestEndGameMenuFunctionality.test_end_game_menu_items_defined)
Test that end-game menu items are properly defined. ... FAIL
test_escape_key_returns_to_main_menu (test_end_game_menu.TestEndGameMenuFunctionality.test_escape_key_returns_to_main_menu)
Test that escape key returns to main menu. ... ok
test_keyboard_navigation_up_down (test_end_game_menu.TestEndGameMenuFunctionality.test_keyboard_navigation_up_down)
Test keyboard navigation in end-game menu. ... ok
test_main_menu_action (test_end_game_menu.TestEndGameMenuFunctionality.test_main_menu_action)
Test return to main menu functionality. ... FAIL
test_relaunch_game_action (test_end_game_menu.TestEndGameMenuFunctionality.test_relaunch_game_action)
Test relaunch game functionality. ... FAIL
test_settings_action (test_end_game_menu.TestEndGameMenuFunctionality.test_settings_action)
Test settings menu access. ... ok
test_settings_content_creation (test_end_game_menu.TestEndGameMenuFunctionality.test_settings_content_creation)
Test that settings content is created successfully. ... ok
test_settings_navigation_returns_to_end_game_menu (test_end_game_menu.TestEndGameMenuFunctionality.test_settings_navigation_returns_to_end_game_menu)
Test that exiting settings returns to end game menu, not main menu. ... ok
test_submit_bug_action (test_end_game_menu.TestEndGameMenuFunctionality.test_submit_bug_action)
Test submit bug functionality. ... FAIL
test_submit_feedback_action (test_end_game_menu.TestEndGameMenuFunctionality.test_submit_feedback_action)
Test submit feedback functionality. ... FAIL
test_view_high_scores_action (test_end_game_menu.TestEndGameMenuFunctionality.test_view_high_scores_action)
Test view high scores functionality. ... FAIL
test_bug_report_form_reset (test_end_game_menu.TestEndGameMenuIntegration.test_bug_report_form_reset)
Test that bug report form is properly reset. ... FAIL
test_settings_content_comprehensive (test_end_game_menu.TestEndGameMenuIntegration.test_settings_content_comprehensive)
Test that settings content covers all expected sections. ... ok
test_complete_researcher_lifecycle (test_enhanced_personnel.TestCompleteEnhancedPersonnelSystem.test_complete_researcher_lifecycle)
Test complete researcher lifecycle from hiring to events. ... ok
test_poaching_resistance_mechanics (test_enhanced_personnel.TestCompleteEnhancedPersonnelSystem.test_poaching_resistance_mechanics)
Test that loyalty affects poaching resistance. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test-complete_20250929_074220.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_specialization_balance (test_enhanced_personnel.TestCompleteEnhancedPersonnelSystem.test_specialization_balance)
Test that all specializations provide meaningful but balanced effects. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test-complete_20250929_074221.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_trait_system_balance (test_enhanced_personnel.TestCompleteEnhancedPersonnelSystem.test_trait_system_balance)
Test that trait system is balanced between positive and negative effects. ... ok
test_researcher_actions_available (test_enhanced_personnel.TestResearcherGameIntegration.test_researcher_actions_available)
Test that researcher management actions become available. ... ok
test_researcher_doom_effects (test_enhanced_personnel.TestResearcherGameIntegration.test_researcher_doom_effects)
Test that researchers affect doom calculations. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test-integration_20250929_074221.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_researcher_events_integration (test_enhanced_personnel.TestResearcherGameIntegration.test_researcher_events_integration)
Test that researcher events are properly integrated. ... ok
test_hiring_system (test_enhanced_personnel.TestResearcherSystem.test_hiring_system)
Test researcher hiring functionality. ... ok
test_performance_review (test_enhanced_personnel.TestResearcherSystem.test_performance_review)
Test performance review functionality. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test-researcher_20250929_074221.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_random_generation (test_enhanced_personnel.TestResearcherSystem.test_random_generation)
Test random researcher generation. ... ok
test_researcher_creation (test_enhanced_personnel.TestResearcherSystem.test_researcher_creation)
Test creating individual researchers. ... ok
test_researcher_effects_integration (test_enhanced_personnel.TestResearcherSystem.test_researcher_effects_integration)
Test that researcher effects integrate with game state. ... ok
test_researcher_traits_effects (test_enhanced_personnel.TestResearcherSystem.test_researcher_traits_effects)
Test that traits affect researcher productivity. ... ok
test_researcher_turnover (test_enhanced_personnel.TestResearcherSystem.test_researcher_turnover)
Test researcher advancement and burnout. ... ok
test_salary_management (test_enhanced_personnel.TestResearcherSystem.test_salary_management)
Test salary adjustment functionality. ... ok
test_serialization (test_enhanced_personnel.TestResearcherSystem.test_serialization)
Test researcher serialization and deserialization. ... ok
test_specialization_effects (test_enhanced_personnel.TestResearcherSystem.test_specialization_effects)
Test that specializations provide correct effects. ... ok
test_team_building (test_enhanced_personnel.TestResearcherSystem.test_team_building)
Test team building functionality. ... ok
test_beep_after_cooldown (test_error_tracker.TestErrorTracker.test_beep_after_cooldown)
Test that beep works again after cooldown period. ... ok
test_beep_cooldown (test_error_tracker.TestErrorTracker.test_beep_cooldown)
Test that beep cooldown prevents spam. ... ok
test_clear_errors (test_error_tracker.TestErrorTracker.test_clear_errors)
Test clearing all tracked errors. ... ok
test_error_tracker_initialization (test_error_tracker.TestErrorTracker.test_error_tracker_initialization)
Test that ErrorTracker initializes with correct defaults. ... ok
test_error_tracking_different_errors (test_error_tracker.TestErrorTracker.test_error_tracking_different_errors)
Test that different errors don't contribute to each other's count. ... ok
test_error_tracking_repeated_errors (test_error_tracker.TestErrorTracker.test_error_tracking_repeated_errors)
Test that 3 repeated errors trigger easter egg. ... ok
test_error_tracking_single_error (test_error_tracker.TestErrorTracker.test_error_tracking_single_error)
Test tracking a single error doesn't trigger easter egg. ... ok
test_no_message_callback (test_error_tracker.TestErrorTracker.test_no_message_callback)
Test that error tracking works without message callback. ... ok
test_no_sound_manager (test_error_tracker.TestErrorTracker.test_no_sound_manager)
Test that error tracking works without sound manager. ... ok
test_set_dependencies (test_error_tracker.TestErrorTracker.test_set_dependencies)
Test setting sound manager and message callback after initialization. ... ok
test_time_window_cleanup (test_error_tracker.TestErrorTracker.test_time_window_cleanup)
Test that old errors are cleaned up after time window. ... ok
test_scrollable_log_keyboard_handling (test_event_log_unlock.TestEventLogScrolling.test_scrollable_log_keyboard_handling)
Test that keyboard scrolling works when log is enabled. ... ok
test_event_log_history_preservation (test_event_log_unlock.TestEventLogUnlock.test_event_log_history_preservation)
Test that event log history is preserved after unlock. ... ok
test_event_log_initially_disabled (test_event_log_unlock.TestEventLogUnlock.test_event_log_initially_disabled)
Test that event log starts disabled. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_12345_20250929_074223.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_event_log_scroll_offset_functionality (test_event_log_unlock.TestEventLogUnlock.test_event_log_scroll_offset_functionality)
Test the scroll offset functionality. ... ok
test_event_log_unlock_event_exists (test_event_log_unlock.TestEventLogUnlock.test_event_log_unlock_event_exists)
Test that the event log unlock event is defined. ... ok
test_event_log_unlock_trigger_conditions (test_event_log_unlock.TestEventLogUnlock.test_event_log_unlock_trigger_conditions)
Test the trigger conditions for event log unlock. ... ok
test_scrollable_log_with_turn_progression (test_event_log_unlock.TestEventLogUnlock.test_scrollable_log_with_turn_progression)
Test that scrollable log works correctly with turn progression. ... ok
test_unlock_scrollable_event_log_function (test_event_log_unlock.TestEventLogUnlock.test_unlock_scrollable_event_log_function)
Test the unlock function directly. ... ok
test_add_deferred_event (test_events.TestDeferredEventQueue.test_add_deferred_event)
Test adding deferred events to queue. ... ok
test_add_non_deferred_event_fails (test_events.TestDeferredEventQueue.test_add_non_deferred_event_fails)
Test that non-deferred events cannot be added to queue. ... ok
test_clear_queue (test_events.TestDeferredEventQueue.test_clear_queue)
Test clearing the queue. ... ok
test_queue_initialization (test_events.TestDeferredEventQueue.test_queue_initialization)
Test that DeferredEventQueue initializes correctly. ... ok
test_remove_event (test_events.TestDeferredEventQueue.test_remove_event)
Test removing events from queue. ... ok
test_tick_all_events_no_expiration (test_events.TestDeferredEventQueue.test_tick_all_events_no_expiration)
Test ticking events that don't expire. ... ok
test_tick_all_events_with_expiration (test_events.TestDeferredEventQueue.test_tick_all_events_with_expiration)
Test ticking events that expire and are auto-executed. ... ok
test_ai_lab_incident_event (test_events.TestEnhancedEvents.test_ai_lab_incident_event)
Test the AI Lab Incident popup event. ... ok
test_create_enhanced_events (test_events.TestEnhancedEvents.test_create_enhanced_events)
Test that enhanced events are created correctly. ... ok
test_funding_opportunity_event (test_events.TestEnhancedEvents.test_funding_opportunity_event)
Test the Emergency Funding Opportunity deferred event. ... ok
test_deferred_display_text (test_events.TestEvent.test_deferred_display_text)
Test deferred event display text. ... ok
test_deferred_event_default_actions (test_events.TestEvent.test_deferred_event_default_actions)
Test that deferred events have correct default actions. ... ok
test_event_defer_functionality (test_events.TestEvent.test_event_defer_functionality)
Test event deferring functionality. ... ok
test_event_execute_effect_accept (test_events.TestEvent.test_event_execute_effect_accept)
Test executing event effect with ACCEPT action. ... ok
test_event_execute_effect_dismiss (test_events.TestEvent.test_event_execute_effect_dismiss)
Test executing event effect with DISMISS action. ... ok
test_event_execute_effect_reduce (test_events.TestEvent.test_event_execute_effect_reduce)
Test executing event effect with REDUCE action. ... ok
test_event_expiration (test_events.TestEvent.test_event_expiration)
Test event expiration logic. ... ok
test_event_from_dict (test_events.TestEvent.test_event_from_dict)
Test creating Event from dictionary (backward compatibility). ... ok
test_event_initialization (test_events.TestEvent.test_event_initialization)
Test that Event initializes with correct defaults. ... ok
test_event_reduce_functionality (test_events.TestEvent.test_event_reduce_functionality)
Test event reduce functionality. ... ok
test_event_to_dict (test_events.TestEvent.test_event_to_dict)
Test converting Event back to dictionary. ... ok
test_normal_event_default_actions (test_events.TestEvent.test_normal_event_default_actions)
Test that normal events have correct default actions. ... ok
test_popup_event_default_actions (test_events.TestEvent.test_popup_event_default_actions)
Test that popup events have correct default actions. ... ok
test_ai_incident_full_effect (test_events.TestEventActions.test_ai_incident_full_effect)
Test AI incident with full effect (ACCEPT action). ... ok
test_ai_incident_reduced_effect (test_events.TestEventActions.test_ai_incident_reduced_effect)
Test AI incident with reduced effect (REDUCE action). ... ok
test_event_dismiss_action (test_events.TestEventActions.test_event_dismiss_action)
Test dismissing an event. ... ok
test_funding_opportunity_full_effect (test_events.TestEventActions.test_funding_opportunity_full_effect)
Test funding opportunity with full effect. ... ok
test_close_button_collision_detection (test_first_time_help_content.TestFirstTimeHelpContent.test_close_button_collision_detection)
Test close button click detection logic. ... ok
test_help_content_validation_logic (test_first_time_help_content.TestFirstTimeHelpContent.test_help_content_validation_logic)
Test the validation logic used in main.py. ... ok
test_invalid_mechanic_handling (test_first_time_help_content.TestFirstTimeHelpContent.test_invalid_mechanic_handling)
Test that invalid mechanics are handled gracefully. ... ok
test_mechanic_help_content_structure (test_first_time_help_content.TestFirstTimeHelpContent.test_mechanic_help_content_structure)
Test that mechanic help content has the correct structure. ... ok
test_onboarding_system_initialization (test_first_time_help_content.TestFirstTimeHelpContent.test_onboarding_system_initialization)
Test that the onboarding system initializes correctly. ... ok
test_ui_draw_function_with_invalid_content (test_first_time_help_content.TestFirstTimeHelpContent.test_ui_draw_function_with_invalid_content)
Test that the UI draw function handles invalid content gracefully. ... ok
test_ui_draw_function_with_valid_content (test_first_time_help_content.TestFirstTimeHelpContent.test_ui_draw_function_with_valid_content)
Test that the UI draw function works with valid content. ... ok
test_daily_news_consistency (test_game_flow_improvements.TestDailyNews.test_daily_news_consistency)
Test that daily news is consistent for the same turn and seed. ... ok
test_daily_news_generation (test_game_flow_improvements.TestDailyNews.test_daily_news_generation)
Test that daily news is generated. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test_seed_20250929_074223.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_add_delayed_action (test_game_flow_improvements.TestDelayedActions.test_add_delayed_action)
Test adding a delayed action. ... ok
test_delayed_action_resolution (test_game_flow_improvements.TestDelayedActions.test_delayed_action_resolution)
Test that delayed actions resolve at the correct time. ... ok
test_end_turn_includes_improvements (test_game_flow_improvements.TestGameFlowIntegration.test_end_turn_includes_improvements)
Test that end_turn includes the new game flow features. ... FAIL
test_spend_tracking_initialization (test_game_flow_improvements.TestSpendTracking.test_spend_tracking_initialization)
Test that spend tracking fields are initialized. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test_seed_20250929_074224.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_spend_tracking_multiple_actions (test_game_flow_improvements.TestSpendTracking.test_spend_tracking_multiple_actions)
Test spend tracking triggers for multiple spending actions. ... ok
test_spend_tracking_single_action (test_game_flow_improvements.TestSpendTracking.test_spend_tracking_single_action)
Test that spend tracking doesn't trigger for single actions. ... ok
test_log_action (test_game_logging.TestGameLogger.test_log_action)
Test logging of player actions. ... ok
test_log_event (test_game_logging.TestGameLogger.test_log_event)
Test logging of game events. ... ok
test_log_filename_format (test_game_logging.TestGameLogger.test_log_filename_format)
Test that log filename follows the required format. ... ok
test_log_game_end (test_game_logging.TestGameLogger.test_log_game_end)
Test logging of game end. ... ok
test_log_turn_summary (test_game_logging.TestGameLogger.test_log_turn_summary)
Test logging of turn summaries. ... ok
test_log_upgrade (test_game_logging.TestGameLogger.test_log_upgrade)
Test logging of upgrade purchases. ... ok
test_logger_initialization (test_game_logging.TestGameLogger.test_logger_initialization)
Test that GameLogger initializes correctly. ... ok
test_write_log_file (test_game_logging.TestGameLogger.test_write_log_file)
Test writing log file to disk. ... ok
test_complete_game_session (test_game_logging.TestGameSessionSimulation.test_complete_game_session)
Simulate a complete game session and verify log file creation. ... FAIL
test_game_over_logging (test_game_logging.TestGameStateLogging.test_game_over_logging)
Test that game over conditions trigger final logging. ... ok
test_game_state_has_logger (test_game_logging.TestGameStateLogging.test_game_state_has_logger)
Test that GameState initializes with a logger. ... ok
test_turn_end_logging (test_game_logging.TestGameStateLogging.test_turn_end_logging)
Test that ending a turn creates appropriate log entries. ... ok
test_upgrade_purchase_logging (test_game_logging.TestGameStateLogging.test_upgrade_purchase_logging)
Test that upgrade purchases are logged. ... ok
test_event_log_clears_on_end_turn (test_game_state.TestEventLog.test_event_log_clears_on_end_turn)
Test that the event log is cleared at the start of each turn. ... ok
test_event_log_empty_at_turn_start_by_default (test_game_state.TestEventLog.test_event_log_empty_at_turn_start_by_default)
Test that the event log is empty at the start of each turn by default. ... ok
test_event_log_preserves_current_turn_messages_only (test_game_state.TestEventLog.test_event_log_preserves_current_turn_messages_only)
Test that only messages generated during the current turn are preserved. ... ok
test_event_log_shows_only_current_turn_events (test_game_state.TestEventLog.test_event_log_shows_only_current_turn_events)
Test that the event log shows only events from the current turn. ... FAIL
test_multiple_turn_event_log_isolation (test_game_state.TestEventLog.test_multiple_turn_event_log_isolation)
Test that event logs are properly isolated across multiple turns. ... ok
test_game_state_default_values (test_game_state.TestGameStateInitialization.test_game_state_default_values)
Test that a new GameState starts with the correct default values. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test_seed_20250929_074225.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_event_history_not_stored_when_disabled (test_game_state.TestScrollableEventLog.test_event_history_not_stored_when_disabled)
Test that event history is not stored when scrollable log is disabled. ... ok
test_event_history_storage_when_enabled (test_game_state.TestScrollableEventLog.test_event_history_storage_when_enabled)
Test that event history is stored when scrollable log is enabled. ... ok
test_multiple_turns_history_accumulation (test_game_state.TestScrollableEventLog.test_multiple_turns_history_accumulation)
Test that history accumulates across multiple turns when enabled. ... FAIL
test_scrollable_event_log_flag_set_by_event (test_game_state.TestScrollableEventLog.test_scrollable_event_log_flag_set_by_event)
Test that the scrollable event log flag is set when the event triggers. ... ok
test_scrollable_event_log_initially_disabled (test_game_state.TestScrollableEventLog.test_scrollable_event_log_initially_disabled)
Test that the scrollable event log starts disabled. ... ok
test_multiple_navigation_levels (test_help_navigation.TestHelpScreenNavigation.test_multiple_navigation_levels)
Test navigation stack with multiple levels ... ok
test_navigation_stack_functions (test_help_navigation.TestHelpScreenNavigation.test_navigation_stack_functions)
Test that navigation stack functions work correctly ... ok
test_cancel_button_clickable (test_hiring_dialog_fix.TestHiringDialogButtons.test_cancel_button_clickable)
Test that Cancel/Back button is functional. ... ok
test_employee_hiring_simulation (test_hiring_dialog_fix.TestHiringDialogButtons.test_employee_hiring_simulation)
Test full hiring flow to ensure buttons lead to successful actions. ... ok
test_escape_key_functionality (test_hiring_dialog_fix.TestHiringDialogButtons.test_escape_key_functionality)
Test that ESC key can dismiss hiring dialog. ... ok
test_hiring_buttons_clickable (test_hiring_dialog_fix.TestHiringDialogButtons.test_hiring_buttons_clickable)
Test that 'generalist', 'researcher', 'engineer' etc buttons are clickable. ... ok
test_click_outside_dialog_should_be_blocked (test_hiring_dialog_modal_behavior.TestHiringDialogModalBehavior.test_click_outside_dialog_should_be_blocked)
Test scenario where click outside dialog area should be blocked (this will initially fail). ... ok
test_dialog_rect_calculation (test_hiring_dialog_modal_behavior.TestHiringDialogModalBehavior.test_dialog_rect_calculation)
Test that we can calculate the actual dialog rect for click detection. ... ok
test_end_turn_button_area_overlapped_by_dialog (test_hiring_dialog_modal_behavior.TestHiringDialogModalBehavior.test_end_turn_button_area_overlapped_by_dialog)
Test that the end turn button area would be covered by the hiring dialog overlay. ... ok
test_end_turn_button_click_blocked_when_dialog_open (test_hiring_dialog_modal_behavior.TestHiringDialogModalBehavior.test_end_turn_button_click_blocked_when_dialog_open)
Test that clicking end turn button while hiring dialog is open should not end the turn. ... ok
test_hiring_dialog_creates_modal_overlay (test_hiring_dialog_modal_behavior.TestHiringDialogModalBehavior.test_hiring_dialog_creates_modal_overlay)
Test that hiring dialog creates a full-screen overlay. ... ok
test_hiring_dialog_dimensions_cover_significant_screen_area (test_hiring_dialog_modal_behavior.TestHiringDialogModalBehavior.test_hiring_dialog_dimensions_cover_significant_screen_area)
Test that the hiring dialog covers a significant portion of the screen. ... ok
test_all_safe_accessor_methods_error_handling (test_hotfix_batch.TestHotfixBatch.test_all_safe_accessor_methods_error_handling)
Test that all safe accessor methods handle errors gracefully. ... ok
test_gameclock_bounds_checking_fix (test_hotfix_batch.TestHotfixBatch.test_gameclock_bounds_checking_fix)
Test GameClock array bounds checking prevents IndexError. ... ok
test_gameclock_instance_method_bounds_checking (test_hotfix_batch.TestHotfixBatch.test_gameclock_instance_method_bounds_checking)
Test instance method also has bounds checking. ... ok
test_hiring_dialog_esc_functionality_exists (test_hotfix_batch.TestHotfixBatch.test_hiring_dialog_esc_functionality_exists)
Test that hiring dialog ESC functionality is properly implemented. ... ok
test_hiring_dialog_insufficient_funds_handling (test_hotfix_batch.TestHotfixBatch.test_hiring_dialog_insufficient_funds_handling)
Test that hiring dialog properly handles insufficient funds. ... ok
test_hotfix_integration_no_regressions (test_hotfix_batch.TestHotfixBatch.test_hotfix_integration_no_regressions)
Test that fixes don't introduce regressions in normal gameplay. ... ok
test_mac_technical_debt_fix_verified (test_hotfix_batch.TestHotfixBatch.test_mac_technical_debt_fix_verified)
Verify the Mac TypeError fix is working. ... ok
test_gameclock_indexerror_cannot_regress (test_hotfix_batch.TestHotfixRegressionPrevention.test_gameclock_indexerror_cannot_regress)
Ensure GameClock IndexError cannot regress. ... ok
test_mac_bug_cannot_regress (test_hotfix_batch.TestHotfixRegressionPrevention.test_mac_bug_cannot_regress)
Ensure Mac TypeError cannot regress by testing old problematic patterns. ... ok
test_action_shortcut_with_sound (test_input_event_manager.TestInputEventManager.test_action_shortcut_with_sound)
Test action shortcut plays sound for new selections. ... ok
test_action_shortcuts (test_input_event_manager.TestInputEventManager.test_action_shortcuts)
Test action shortcuts (1-9 keys). ... ok
test_clear_stuck_events_key (test_input_event_manager.TestInputEventManager.test_clear_stuck_events_key)
Test 'C' key for clearing stuck popup events. ... ok
test_dev_tools_key_in_dev_mode (test_input_event_manager.TestInputEventManager.test_dev_tools_key_in_dev_mode)
Test F11 dev tools key when in dev mode. ... ok
test_dev_tools_key_not_in_dev_mode (test_input_event_manager.TestInputEventManager.test_dev_tools_key_not_in_dev_mode)
Test F11 dev tools key when not in dev mode. ... ok
test_dialog_dismiss_keys (test_input_event_manager.TestInputEventManager.test_dialog_dismiss_keys)
Test dialog dismissal with ESC/arrow/backspace keys. ... ok
test_end_turn_blocked_by_dialog (test_input_event_manager.TestInputEventManager.test_end_turn_blocked_by_dialog)
Test end turn blocked by active dialog. ... ok
test_end_turn_blocked_by_popup_events (test_input_event_manager.TestInputEventManager.test_end_turn_blocked_by_popup_events)
Test end turn blocked by pending popup events. ... ok
test_end_turn_blocked_by_tutorial (test_input_event_manager.TestInputEventManager.test_end_turn_blocked_by_tutorial)
Test end turn blocked by active tutorial. ... ok
test_end_turn_key_success (test_input_event_manager.TestInputEventManager.test_end_turn_key_success)
Test successful end turn processing. ... ok
test_enter_as_alternative_end_turn (test_input_event_manager.TestInputEventManager.test_enter_as_alternative_end_turn)
Test ENTER as alternative to SPACE for end turn. ... ok
test_escape_key_progression (test_input_event_manager.TestInputEventManager.test_escape_key_progression)
Test escape key quit confirmation system. ... ok
test_escape_timeout_reset (test_input_event_manager.TestInputEventManager.test_escape_timeout_reset)
Test that escape count resets after timeout. ... ok
test_event_log_scrolling (test_input_event_manager.TestInputEventManager.test_event_log_scrolling)
Test arrow key scrolling for event log. ... ok
test_game_over_blocks_end_turn (test_input_event_manager.TestInputEventManager.test_game_over_blocks_end_turn)
Test that game over state blocks end turn. ... ok
test_help_key_always_available (test_input_event_manager.TestInputEventManager.test_help_key_always_available)
Test that help key (H) works regardless of modal state. ... ok
test_help_popup_handling (test_input_event_manager.TestInputEventManager.test_help_popup_handling)
Test first-time help popup keyboard handling. ... ok
test_invalid_game_state (test_input_event_manager.TestInputEventManager.test_invalid_game_state)
Test handling with invalid game state. ... ok
test_menu_key (test_input_event_manager.TestInputEventManager.test_menu_key)
Test menu key (M) for pause/main menu. ... ok
test_multiple_dialog_dismissal_priority (test_input_event_manager.TestInputEventManager.test_multiple_dialog_dismissal_priority)
Test that only one dialog is dismissed per key press. ... ok
test_quit_confirmation_with_enter (test_input_event_manager.TestInputEventManager.test_quit_confirmation_with_enter)
Test ENTER to confirm quit after multiple escapes. ... ok
test_screenshot_key (test_input_event_manager.TestInputEventManager.test_screenshot_key)
Test screenshot key ([) functionality. ... ok
test_tutorial_key_handling (test_input_event_manager.TestInputEventManager.test_tutorial_key_handling)
Test tutorial keyboard navigation. ... ok
test_auto_scroll_to_bottom_logic (test_issue_36_fixes.TestActivityLogScrollBehavior.test_auto_scroll_to_bottom_logic)
Test the auto-scroll logic in the UI drawing function. ... ok
test_click_limit_enforcement (test_issue_36_fixes.TestButtonClickLimits.test_click_limit_enforcement)
Test that actions with max_clicks_per_turn are limited properly. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_42_20250929_074227.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_click_tracking_only_for_limited_actions (test_issue_36_fixes.TestButtonClickLimits.test_click_tracking_only_for_limited_actions)
Test that click tracking only happens for actions with limits. ... ok
test_click_tracking_reset_on_turn_end (test_issue_36_fixes.TestButtonClickLimits.test_click_tracking_reset_on_turn_end)
Test that click tracking resets at end of turn. ... ok
test_unlimited_clicks_by_default (test_issue_36_fixes.TestButtonClickLimits.test_unlimited_clicks_by_default)
Test that actions without max_clicks_per_turn can be selected multiple times. ... ok
test_cost_scaling_integration (test_issue_36_fixes.TestEmployeeCostScaling.test_cost_scaling_integration)
Test that the new cost scaling is actually applied in end_turn. ... ok
test_multiple_employee_overhead (test_issue_36_fixes.TestEmployeeCostScaling.test_multiple_employee_overhead)
Test overhead costs for multiple employees. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_42_20250929_074228.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_no_cost_for_zero_employees (test_issue_36_fixes.TestEmployeeCostScaling.test_no_cost_for_zero_employees)
Test that no maintenance cost applies with zero employees. ... ok
test_single_employee_cost (test_issue_36_fixes.TestEmployeeCostScaling.test_single_employee_cost)
Test scaled up cost for single employee. ... ok
test_multiple_upgrade_rows_when_needed (test_issue_36_fixes.TestUIBoundaryChecking.test_multiple_upgrade_rows_when_needed)
Test that upgrade icons stack vertically when horizontal space is limited. ... ok
test_upgrade_icon_positioning_respects_boundaries (test_issue_36_fixes.TestUIBoundaryChecking.test_upgrade_icon_positioning_respects_boundaries)
Test that purchased upgrade icons don't overlap with info panel. ... ok
test_get_action_key_display (test_keybinding_manager.TestKeybindingConvenienceFunctions.test_get_action_key_display)
Test convenience function for action key display. ... ok
test_is_action_key_pressed (test_keybinding_manager.TestKeybindingConvenienceFunctions.test_is_action_key_pressed)
Test convenience function for action key checking. ... ok
test_action_number_keys (test_keybinding_manager.TestKeybindingManager.test_action_number_keys)
Test action number key helpers. ... ok
test_conflict_detection (test_keybinding_manager.TestKeybindingManager.test_conflict_detection)
Test detection of keybinding conflicts. ... ok
test_default_keybindings_loaded (test_keybinding_manager.TestKeybindingManager.test_default_keybindings_loaded)
Test that default keybindings are properly loaded. ... ok
test_invalid_action_binding (test_keybinding_manager.TestKeybindingManager.test_invalid_action_binding)
Test that binding invalid actions fails. ... ok
test_is_action_key (test_keybinding_manager.TestKeybindingManager.test_is_action_key)
Test checking if a key matches an action. ... ok
test_key_display_names (test_keybinding_manager.TestKeybindingManager.test_key_display_names)
Test human-readable key display names. ... ok
test_protected_keys (test_keybinding_manager.TestKeybindingManager.test_protected_keys)
Test that protected keys cannot be bound. ... ok
test_reset_to_defaults (test_keybinding_manager.TestKeybindingManager.test_reset_to_defaults)
Test resetting all keybindings to defaults. ... ok
test_save_and_load_keybindings (test_keybinding_manager.TestKeybindingManager.test_save_and_load_keybindings)
Test saving and loading custom keybindings. ... ok
test_set_keybinding (test_keybinding_manager.TestKeybindingManager.test_set_keybinding)
Test setting custom keybindings. ... ok
test_constants_match_functions (test_keyboard_shortcuts.TestKeyboardShortcuts.test_constants_match_functions)
Test that constant definitions match function returns. ... ok
test_format_shortcut_list (test_keyboard_shortcuts.TestKeyboardShortcuts.test_format_shortcut_list)
Test that format_shortcut_list formats shortcuts correctly. ... ok
test_get_all_shortcuts (test_keyboard_shortcuts.TestKeyboardShortcuts.test_get_all_shortcuts)
Test that get_all_shortcuts returns properly structured data. ... ok
test_in_game_shortcuts_not_empty (test_keyboard_shortcuts.TestKeyboardShortcuts.test_in_game_shortcuts_not_empty)
Test that in-game shortcuts are defined and not empty. ... ok
test_main_menu_shortcuts_not_empty (test_keyboard_shortcuts.TestKeyboardShortcuts.test_main_menu_shortcuts_not_empty)
Test that main menu shortcuts are defined and not empty. ... ok
test_shortcut_structure (test_keyboard_shortcuts.TestKeyboardShortcuts.test_shortcut_structure)
Test that shortcuts have the correct structure (key, description) tuples. ... ok
test_shortcuts_include_essential_controls (test_keyboard_shortcuts.TestKeyboardShortcuts.test_shortcuts_include_essential_controls)
Test that essential controls are included in shortcuts. ... ok
test_draw_main_menu_calls_shortcut_functions (test_keyboard_shortcuts_ui.TestKeyboardShortcutsUI.test_draw_main_menu_calls_shortcut_functions)
Test that draw_main_menu calls the keyboard shortcut functions. ... ok
test_main_menu_with_shortcuts_no_errors (test_keyboard_shortcuts_ui.TestKeyboardShortcutsUI.test_main_menu_with_shortcuts_no_errors)
Test that drawing main menu with shortcuts doesn't raise errors. ... ok
test_shortcuts_data_available_for_ui (test_keyboard_shortcuts_ui.TestKeyboardShortcutsUI.test_shortcuts_data_available_for_ui)
Test that shortcut data is available and properly structured for UI use. ... ok
test_leaderboard_entry_creation (test_leaderboard.TestLeaderboardDataStructures.test_leaderboard_entry_creation)
Test LeaderboardEntry creation and properties. ... ok
test_corrupted_leaderboard_file_handling (test_leaderboard.TestLeaderboardEdgeCases.test_corrupted_leaderboard_file_handling)
Test handling of corrupted leaderboard files. ... ok
test_empty_leaderboard_operations (test_leaderboard.TestLeaderboardEdgeCases.test_empty_leaderboard_operations)
Test operations on empty leaderboard. ... ok
test_score_submission_edge_cases (test_leaderboard.TestLeaderboardEdgeCases.test_score_submission_edge_cases)
Test score submission with edge case data. ... ok
test_can_submit_score_privacy_disabled (test_leaderboard.TestLeaderboardManager.test_can_submit_score_privacy_disabled)
Test score submission when privacy/leaderboard is disabled. ... ok
test_can_submit_score_privacy_enabled (test_leaderboard.TestLeaderboardManager.test_can_submit_score_privacy_enabled)
Test score submission when privacy is properly configured. ... ok
test_get_local_leaderboard_limit (test_leaderboard.TestLeaderboardManager.test_get_local_leaderboard_limit)
Test leaderboard limit functionality. ... ok
test_get_local_leaderboard_sorting (test_leaderboard.TestLeaderboardManager.test_get_local_leaderboard_sorting)
Test that local leaderboard returns scores in correct order. ... ok
test_leaderboard_entry_creation (test_leaderboard.TestLeaderboardManager.test_leaderboard_entry_creation)
Test LeaderboardEntry creation and properties. ... ok
test_leaderboard_manager_initialization (test_leaderboard.TestLeaderboardManager.test_leaderboard_manager_initialization)
Test LeaderboardManager initialization. ... ok
test_local_leaderboard_functionality (test_leaderboard.TestLeaderboardManager.test_local_leaderboard_functionality)
Test basic local leaderboard functionality. ... ok
test_local_score_storage (test_leaderboard.TestLeaderboardManager.test_local_score_storage)
Test local score storage functionality. ... ok
test_pending_submissions_basic_functionality (test_leaderboard.TestLeaderboardManager.test_pending_submissions_basic_functionality)
Test basic pending submissions functionality. ... ok
test_leaderboard_disablement (test_leaderboard.TestPrivacyManager.test_leaderboard_disablement)
Test leaderboard opt-out functionality. ... ok
test_leaderboard_enablement (test_leaderboard.TestPrivacyManager.test_leaderboard_enablement)
Test leaderboard opt-in functionality. ... ok
test_privacy_file_corruption_handling (test_leaderboard.TestPrivacyManager.test_privacy_file_corruption_handling)
Test handling of corrupted privacy files. ... ok
test_privacy_manager_initialization (test_leaderboard.TestPrivacyManager.test_privacy_manager_initialization)
Test PrivacyManager initialization. ... ok
test_privacy_settings_persistence (test_leaderboard.TestPrivacyManager.test_privacy_settings_persistence)
Test that privacy settings persist across instances. ... ok
test_pseudonym_management (test_leaderboard.TestPrivacyManager.test_pseudonym_management)
Test pseudonym setting and getting. ... ok
test_safe_pseudonym_validation (test_leaderboard.TestPrivacyManager.test_safe_pseudonym_validation)
Test pseudonym safety validation. ... ok
test_exception_handling_in_safe_accessors (test_leaderboard_type_safety.TestLeaderboardTypeSafety.test_exception_handling_in_safe_accessors)
Test that all exceptions are properly caught and handled. ... ok
test_safe_research_papers_access_with_invalid_string (test_leaderboard_type_safety.TestLeaderboardTypeSafety.test_safe_research_papers_access_with_invalid_string)
Test graceful handling of invalid string values. ... ok
test_safe_research_papers_access_with_missing_attribute (test_leaderboard_type_safety.TestLeaderboardTypeSafety.test_safe_research_papers_access_with_missing_attribute)
Test graceful handling when research_papers_published doesn't exist. ... ok
test_safe_research_papers_access_with_string_value (test_leaderboard_type_safety.TestLeaderboardTypeSafety.test_safe_research_papers_access_with_string_value)
Test conversion when research_papers_published is a string. ... ok
test_safe_research_papers_access_with_valid_attribute (test_leaderboard_type_safety.TestLeaderboardTypeSafety.test_safe_research_papers_access_with_valid_attribute)
Test extraction when research_papers_published exists. ... ok
test_safe_technical_debt_access_with_invalid_object (test_leaderboard_type_safety.TestLeaderboardTypeSafety.test_safe_technical_debt_access_with_invalid_object)
Test graceful handling when technical_debt object lacks accumulated_debt. ... ok
test_safe_technical_debt_access_with_missing_attribute (test_leaderboard_type_safety.TestLeaderboardTypeSafety.test_safe_technical_debt_access_with_missing_attribute)
Test graceful handling when technical_debt attribute is missing. ... ok
test_safe_technical_debt_access_with_non_numeric_string (test_leaderboard_type_safety.TestLeaderboardTypeSafety.test_safe_technical_debt_access_with_non_numeric_string)
Test graceful handling of non-numeric string values. ... ok
test_safe_technical_debt_access_with_none_value (test_leaderboard_type_safety.TestLeaderboardTypeSafety.test_safe_technical_debt_access_with_none_value)
Test graceful handling when technical_debt is None. ... ok
test_safe_technical_debt_access_with_string_value_mac_bug (test_leaderboard_type_safety.TestLeaderboardTypeSafety.test_safe_technical_debt_access_with_string_value_mac_bug)
Test the specific Mac bug scenario where accumulated_debt might be a string. ... ok
test_safe_technical_debt_access_with_valid_object (test_leaderboard_type_safety.TestLeaderboardTypeSafety.test_safe_technical_debt_access_with_valid_object)
Test that technical debt is correctly extracted from TechnicalDebt object. ... ok
test_session_creation_with_safe_accessors (test_leaderboard_type_safety.TestLeaderboardTypeSafety.test_session_creation_with_safe_accessors)
Test that session creation uses safe accessor methods properly. ... ok
test_verbose_method_naming_prevents_confusion (test_leaderboard_type_safety.TestLeaderboardTypeSafety.test_verbose_method_naming_prevents_confusion)
Test that verbose method names clearly indicate what they return. ... ok
test_technical_debt_accumulated_is_always_int (test_leaderboard_type_safety.TestTechnicalDebtObjectIntegrity.test_technical_debt_accumulated_is_always_int)
Ensure TechnicalDebt.accumulated_debt is always an integer. ... ok
test_technical_debt_operations_preserve_type (test_leaderboard_type_safety.TestTechnicalDebtObjectIntegrity.test_technical_debt_operations_preserve_type)
Test that all TechnicalDebt operations maintain integer types. ... ok
test_loading_screen_accessibility (test_loading_screen.TestLoadingScreen.test_loading_screen_accessibility)
Test loading screen accessibility features. ... ok
test_loading_screen_basic (test_loading_screen.TestLoadingScreen.test_loading_screen_basic)
Test basic loading screen display. ... ok
test_loading_screen_color_contrast (test_loading_screen.TestLoadingScreen.test_loading_screen_color_contrast)
Test loading screen has good color contrast for accessibility. ... ok
test_loading_screen_elements (test_loading_screen.TestLoadingScreen.test_loading_screen_elements)
Test that loading screen contains expected elements. ... ok
test_loading_screen_progress_bounds (test_loading_screen.TestLoadingScreen.test_loading_screen_progress_bounds)
Test loading screen with out-of-bounds progress values. ... ok
test_loading_screen_responsive_sizing (test_loading_screen.TestLoadingScreen.test_loading_screen_responsive_sizing)
Test loading screen on different screen sizes. ... ok
test_loading_screen_with_custom_font (test_loading_screen.TestLoadingScreen.test_loading_screen_with_custom_font)
Test loading screen with custom font. ... ok
test_loading_screen_with_progress (test_loading_screen.TestLoadingScreen.test_loading_screen_with_progress)
Test loading screen with different progress values. ... ok
test_loading_screen_with_status_text (test_loading_screen.TestLoadingScreen.test_loading_screen_with_status_text)
Test loading screen with custom status text. ... ok
test_fast_load_scenario (test_loading_screen.TestLoadingScreenIntegration.test_fast_load_scenario)
Test fast load scenario where loading completes quickly. ... ok
test_loading_phases_simulation (test_loading_screen.TestLoadingScreenIntegration.test_loading_phases_simulation)
Test simulated loading phases like in main.py. ... ok
test_loading_screen_role_status (test_loading_screen.TestLoadingScreenIntegration.test_loading_screen_role_status)
Test that loading screen provides status role equivalent. ... ok
test_full_discovery_to_purchase_flow (test_magical_orb_upgrade.TestMagicalOrbIntegration.test_full_discovery_to_purchase_flow)
Test the complete flow from discovering Palandir to purchasing the orb. ... ok
test_enhanced_intelligence_with_magical_orb (test_magical_orb_upgrade.TestMagicalOrbUpgrade.test_enhanced_intelligence_with_magical_orb)
Test that intelligence gathering is enhanced with the magical orb. ... ok
test_magical_orb_purchase_and_effects (test_magical_orb_upgrade.TestMagicalOrbUpgrade.test_magical_orb_purchase_and_effects)
Test purchasing the magical orb and its effects. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test_seed_20250929_074230.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_magical_orb_upgrade_exists (test_magical_orb_upgrade.TestMagicalOrbUpgrade.test_magical_orb_upgrade_exists)
Test that the Magical Orb of Seeing upgrade exists. ... ok
test_opponent_stats_enhanced_discovery (test_magical_orb_upgrade.TestMagicalOrbUpgrade.test_opponent_stats_enhanced_discovery)
Test that opponent stats are discovered more effectively with magical orb. ... ok
test_palandir_opponent_exists (test_magical_orb_upgrade.TestMagicalOrbUpgrade.test_palandir_opponent_exists)
Test that Palandir opponent is created in the game. ... ok
test_upgrade_hidden_before_palandir_discovery (test_magical_orb_upgrade.TestMagicalOrbUpgrade.test_upgrade_hidden_before_palandir_discovery)
Test that the upgrade is hidden before Palandir is discovered. ... ok
test_upgrade_rects_exclude_unavailable_upgrades (test_magical_orb_upgrade.TestMagicalOrbUpgrade.test_upgrade_rects_exclude_unavailable_upgrades)
Test that _get_upgrade_rects correctly filters unavailable upgrades. ... ok
test_upgrade_visible_after_palandir_discovery (test_magical_orb_upgrade.TestMagicalOrbUpgrade.test_upgrade_visible_after_palandir_discovery)
Test that the upgrade becomes visible after Palandir is discovered. ... ok
test_end_game_menu_positioning (test_menu_diagnostics.MenuSystemDiagnosticTests.test_end_game_menu_positioning)
Test end game menu with various game states and screen sizes ... pygame 2.6.1 (SDL 2.28.4, Python 3.13.3)
Hello from the pygame community. https://www.pygame.org/contribute.html
Starting P(Doom): Bureaucracy Strategy Game v0.9.0
================================================================================
[DEV MODE] Development mode enabled
[VERBOSE] Verbose logging enabled
STARTUP CONFIGURATION:
  Version: v0.9.0
  Full Version Info: {'version': '0.9.0', 'full_version': '0.9.0', 'display_version': 'v0.9.0', 'major': 0, 'minor': 9, 'patch': 0, 'prerelease': '', 'build': ''}
  Python Version: 3.13.3 (tags/v3.13.3:6280bb5, Apr  8 2025, 14:47:33) [MSC v.1943 64 bit (AMD64)]
  Pygame Version: 2.6.1
  Economic Model: Bootstrap AI Safety Nonprofit
  Starting Funds: $100k
  Staff Maintenance: $600 first, $800 additional/week
  Research Costs: $3k/week (reduced from $40k)
  Hiring Costs: $0 (no signing bonuses)
  Moore's Law: 2% compute cost reduction/week
  Audio: Enabled
  Window Scale: 0.8x
  Fullscreen: No
  Config Directory: configs
  Current Config: default
  Available Configs: default, default.template, high_stakes
================================================================================
Warning: Could not load config 'binary': Expecting value: line 1 column 1 (char 0)
Warning: Could not load config 'corrupted': Expecting value: line 1 column 16 (char 15)
Warning: Could not load config 'empty': Expecting value: line 1 column 1 (char 0)
Error: Could not save config 'test': Access denied
Warning: Could not load config 'nonexistent_config': [Errno 2] No such file or directory: 'C:\\Users\\gday\\AppData\\Local\\Temp\\tmpks4t5wwz\\configs\\nonexistent_config.json'
Warning: Could not load config 'bad1': Expecting value: line 1 column 1 (char 0)
Warning: Could not create config directory 'C:\Users\gday\AppData\Local\Temp\tmp5854z0sb\configs': Cannot create directories
Using temporary config directory: C:\Users\gday\AppData\Local\Temp\pdoom_configs_yvk3bu69
Warning: Could not load config 'default': Expecting value: line 1 column 1 (char 0)
Warning: Current config 'default' not found, falling back to default
Warning: Could not load config 'default': Expecting value: line 1 column 1 (char 0)
Warning: Could not load default config file, using in-memory defaults
Warning: Could not load config 'nonexistent': [Errno 2] No such file or directory: 'C:\\Users\\gday\\AppData\\Local\\Temp\\tmpref5udd2\\configs\\nonexistent.json'
Warning: Could not load config 'nonexistent': [Errno 2] No such file or directory: 'C:\\Users\\gday\\AppData\\Local\\Temp\\tmpcr0ts26y\\configs\\nonexistent.json'
Warning: Could not load config 'nonexistent': [Errno 2] No such file or directory: 'C:\\Users\\gday\\AppData\\Local\\Temp\\tmphy8nav0q\\configs\\nonexistent.json'
Warning: Cannot delete the default configuration
Error: Could not save config 'test': Access denied
Warning: Could not load config 'corrupted': Expecting value: line 1 column 1 (char 0)
Warning: Could not load config 'nonexistent': [Errno 2] No such file or directory: 'C:\\Users\\gday\\AppData\\Local\\Temp\\tmp4jqpkxgb\\configs\\nonexistent.json'
Created default configuration file
Game session ended. Final rank: 4
Game session ended. Final rank: 4

=== Testing End Game Menu Positioning ===
[OK] End game menu renders at 800x600, state: normal, item: 0
[OK] End game menu renders at 800x600, state: normal, item: 1
[OK] End game menu renders at 800x600, state: normal, item: 2
[OK] End game menu renders at 800x600, state: normal, item: 3
[OK] End game menu renders at 800x600, state: normal, item: 4
[OK] End game menu renders at 800x600, state: high_stats, item: 0
[OK] End game menu renders at 800x600, state: high_stats, item: 1
[OK] End game menu renders at 800x600, state: high_stats, item: 2
[OK] End game menu renders at 800x600, state: high_stats, item: 3
[OK] End game menu renders at 800x600, state: high_stats, item: 4
[OK] End game menu renders at 800x600, state: low_stats, item: 0
[OK] End game menu renders at 800x600, state: low_stats, item: 1
[OK] End game menu renders at 800x600, state: low_stats, item: 2
[OK] End game menu renders at 800x600, state: low_stats, item: 3
[OK] End game menu renders at 800x600, state: low_stats, item: 4
[OK] End game menu renders at 800x600, state: with_scenario, item: 0
[OK] End game menu renders at 800x600, state: with_scenario, item: 1
[OK] End game menu renders at 800x600, state: with_scenario, item: 2
[OK] End game menu renders at 800x600, state: with_scenario, item: 3
[OK] End game menu renders at 800x600, state: with_scenario, item: 4
[OK] End game menu renders at 1024x768, state: normal, item: 0
[OK] End game menu renders at 1024x768, state: normal, item: 1
[OK] End game menu renders at 1024x768, state: normal, item: 2
[OK] End game menu renders at 1024x768, state: normal, item: 3
[OK] End game menu renders at 1024x768, state: normal, item: 4
[OK] End game menu renders at 1024x768, state: high_stats, item: 0
[OK] End game menu renders at 1024x768, state: high_stats, item: 1
[OK] End game menu renders at 1024x768, state: high_stats, item: 2
[OK] End game menu renders at 1024x768, state: high_stats, item: 3
[OK] End game menu renders at 1024x768, state: high_stats, item: 4
[OK] End game menu renders at 1024x768, state: low_stats, item: 0
[OK] End game menu renders at 1024x768, state: low_stats, item: 1
[OK] End game menu renders at 1024x768, state: low_stats, item: 2
[OK] End game menu renders at 1024x768, state: low_stats, item: 3
[OK] End game menu renders at 1024x768, state: low_stats, item: 4
[OK] End game menu renders at 1024x768, state: with_scenario, item: 0
[OK] End game menu renders at 1024x768, state: with_scenario, item: 1
[OK] End game menu renders at 1024x768, state: with_scenario, item: 2
[OK] End game menu renders at 1024x768, state: with_scenario, item: 3
[OK] End game menu renders at 1024x768, state: with_scenario, item: 4
[OK] End game menu renders at 1280x720, state: normal, item: 0
[OK] End game menu renders at 1280x720, state: normal, item: 1
[OK] End game menu renders at 1280x720, state: normal, item: 2
[OK] End game menu renders at 1280x720, state: normal, item: 3
[OK] End game menu renders at 1280x720, state: normal, item: 4
[OK] End game menu renders at 1280x720, state: high_stats, item: 0
[OK] End game menu renders at 1280x720, state: high_stats, item: 1
[OK] End game menu renders at 1280x720, state: high_stats, item: 2
[OK] End game menu renders at 1280x720, state: high_stats, item: 3
[OK] End game menu renders at 1280x720, state: high_stats, item: 4
[OK] End game menu renders at 1280x720, state: low_stats, item: 0
[OK] End game menu renders at 1280x720, state: low_stats, item: 1
[OK] End game menu renders at 1280x720, state: low_stats, item: 2
[OK] End game menu renders at 1280x720, state: low_stats, item: 3
[OK] End game menu renders at 1280x720, state: low_stats, item: 4
[OK] End game menu renders at 1280x720, state: with_scenario, item: 0
[OK] End game menu renders at 1280x720, state: with_scenario, item: 1
[OK] End game menu renders at 1280x720, state: with_scenario, item: 2
[OK] End game menu renders at 1280x720, state: with_scenario, item: 3
[OK] End game menu renders at 1280x720, state: with_scenario, item: 4
[OK] End game menu renders at 1920x1080, state: normal, item: 0
[OK] End game menu renders at 1920x1080, state: normal, item: 1
[OK] End game menu renders at 1920x1080, state: normal, item: 2
[OK] End game menu renders at 1920x1080, state: normal, item: 3
[OK] End game menu renders at 1920x1080, state: normal, item: 4
[OK] End game menu renders at 1920x1080, state: high_stats, item: 0
[OK] End game menu renders at 1920x1080, state: high_stats, item: 1
[OK] End game menu renders at 1920x1080, state: high_stats, item: 2
[OK] End game menu renders at 1920x1080, state: high_stats, item: 3
[OK] End game menu renders at 1920x1080, state: high_stats, item: 4
[OK] End game menu renders at 1920x1080, state: low_stats, item: 0
[OK] End game menu renders at 1920x1080, state: low_stats, item: 1
[OK] End game menu renders at 1920x1080, state: low_stats, item: 2
[OK] End game menu renders at 1920x1080, state: low_stats, item: 3ok
test_end_game_scenarios_layout (test_menu_diagnostics.MenuSystemDiagnosticTests.test_end_game_scenarios_layout)
Test end game menu with different scenario types ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_scenario-test_20250929_074230.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_scenario-test_20250929_074232.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_hardcoded_position_detection (test_menu_diagnostics.MenuSystemDiagnosticTests.test_hardcoded_position_detection)
Detect potential hardcoded positioning by comparing layouts across sizes ... ok
test_main_menu_layout_consistency (test_menu_diagnostics.MenuSystemDiagnosticTests.test_main_menu_layout_consistency)
Test main menu layout across different screen sizes ... ok
test_menu_button_bounds_checking (test_menu_diagnostics.MenuSystemDiagnosticTests.test_menu_button_bounds_checking)
Test that menu buttons stay within screen boundaries ... ok
test_menu_edge_cases (test_menu_diagnostics.MenuSystemDiagnosticTests.test_menu_edge_cases)
Test menu behavior in edge case scenarios ... ok
test_menu_overflow_conditions (test_menu_diagnostics.MenuSystemDiagnosticTests.test_menu_overflow_conditions)
Test menu behavior when content might overflow screen bounds ... ok
test_menu_text_scaling (test_menu_diagnostics.MenuSystemDiagnosticTests.test_menu_text_scaling)
Test that menu text scales properly with screen size ... ok
test_custom_button_dimensions (test_menu_helpers.TestMenuHelpers.test_custom_button_dimensions)
Test collision detection with custom button dimensions. ... ok
test_menu_button_collision_hit (test_menu_helpers.TestMenuHelpers.test_menu_button_collision_hit)
Test menu button collision detection with valid hit. ... ok
test_menu_button_collision_miss (test_menu_helpers.TestMenuHelpers.test_menu_button_collision_miss)
Test menu button collision detection with no hit. ... ok
test_menu_button_collision_second_button (test_menu_helpers.TestMenuHelpers.test_menu_button_collision_second_button)
Test hitting second menu button. ... ok
test_menu_navigation_down (test_menu_helpers.TestMenuHelpers.test_menu_navigation_down)
Test keyboard navigation moving down. ... ok
test_menu_navigation_left_right (test_menu_helpers.TestMenuHelpers.test_menu_navigation_left_right)
Test left/right keys work same as up/down. ... ok
test_menu_navigation_up (test_menu_helpers.TestMenuHelpers.test_menu_navigation_up)
Test keyboard navigation moving up. ... ok
test_menu_navigation_with_callback (test_menu_helpers.TestMenuHelpers.test_menu_navigation_with_callback)
Test navigation with selection callback. ... ok
test_menu_navigation_wrap_around (test_menu_helpers.TestMenuHelpers.test_menu_navigation_wrap_around)
Test navigation wraps around at edges. ... ok
test_mouse_wheel_navigation_down (test_menu_helpers.TestMenuHelpers.test_mouse_wheel_navigation_down)
Test mouse wheel down navigation. ... ok
test_mouse_wheel_navigation_up (test_menu_helpers.TestMenuHelpers.test_mouse_wheel_navigation_up)
Test mouse wheel up navigation. ... ok
test_mouse_wheel_navigation_wrap (test_menu_helpers.TestMenuHelpers.test_mouse_wheel_navigation_wrap)
Test mouse wheel navigation wraps around. ... ok
test_mouse_wheel_no_movement (test_menu_helpers.TestMenuHelpers.test_mouse_wheel_no_movement)
Test mouse wheel with no movement. ... ok
test_load_markdown_file_error_handling (test_menu_system_refactoring.TestMenuSystemRefactoring.test_load_markdown_file_error_handling)
Test markdown file loading with non-existent file. ... ok
test_menu_click_handler (test_menu_system_refactoring.TestMenuSystemRefactoring.test_menu_click_handler)
Test menu click detection. ... ok
test_menu_keyboard_handler (test_menu_system_refactoring.TestMenuSystemRefactoring.test_menu_keyboard_handler)
Test keyboard navigation. ... ok
test_navigation_manager (test_menu_system_refactoring.TestMenuSystemRefactoring.test_navigation_manager)
Test navigation stack management. ... ok
test_weekly_seed_generation (test_menu_system_refactoring.TestMenuSystemRefactoring.test_weekly_seed_generation)
Test weekly seed generation. ... ok
test_accounting_software_upgrade_exists (test_milestone_events.TestAccountingSoftware.test_accounting_software_upgrade_exists)
Test that accounting software appears as an upgrade ... ok
test_cash_flow_tracking_with_accounting_software (test_milestone_events.TestAccountingSoftware.test_cash_flow_tracking_with_accounting_software)
Test that cash flow is tracked when accounting software is purchased ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test_seed_20250929_074235.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_spending_tracking_per_turn (test_milestone_events.TestAccountingSoftware.test_spending_tracking_per_turn)
Test that spending is tracked properly per turn ... ok
test_audit_risk_penalties (test_milestone_events.TestBoardMemberMilestone.test_audit_risk_penalties)
Test that audit risk applies proper penalties ... ok
test_board_member_blocked_by_accounting_software (test_milestone_events.TestBoardMemberMilestone.test_board_member_blocked_by_accounting_software)
Test that accounting software blocks board member trigger ... ok
test_board_member_trigger_on_high_spending (test_milestone_events.TestBoardMemberMilestone.test_board_member_trigger_on_high_spending)
Test that board members are installed on high spending without accounting software ... ok
test_board_search_success_and_failure (test_milestone_events.TestBoardMemberMilestone.test_board_search_success_and_failure)
Test board search action outcomes ... ok
test_search_action_unlocks_with_board_members (test_milestone_events.TestBoardMemberMilestone.test_search_action_unlocks_with_board_members)
Test that search action is unlocked when board members are installed ... ok
test_manager_employee_assignment (test_milestone_events.TestManagerMilestone.test_manager_employee_assignment)
Test that managers properly assign employees ... ok
test_manager_hiring_mechanics (test_milestone_events.TestManagerMilestone.test_manager_hiring_mechanics)
Test that hiring managers works correctly ... ok
test_manager_milestone_trigger_at_9_staff (test_milestone_events.TestManagerMilestone.test_manager_milestone_trigger_at_9_staff)
Test that manager action unlocks at 9+ staff ... ok
test_multiple_manager_clusters (test_milestone_events.TestManagerMilestone.test_multiple_manager_clusters)
Test that multiple managers can handle large teams ... ok
test_special_event_triggers_at_9_staff (test_milestone_events.TestManagerMilestone.test_special_event_triggers_at_9_staff)
Test that special event triggers when reaching 9 staff for the first time ... ok
test_manager_always_productive (test_milestone_events.TestStaticEffects.test_manager_always_productive)
Test that managers are always productive ... ok
test_unmanaged_employee_productivity_penalty (test_milestone_events.TestStaticEffects.test_unmanaged_employee_productivity_penalty)
Test that unmanaged employees beyond 9 are unproductive ... ok
test_hiring_dialog_allows_clicks_on_dialog_buttons (test_modal_dialog_integration.TestModalDialogClickBlocking.test_hiring_dialog_allows_clicks_on_dialog_buttons)
Test that clicks on dialog buttons still work. ... ok
test_hiring_dialog_blocks_clicks_inside_dialog_but_not_on_buttons (test_modal_dialog_integration.TestModalDialogClickBlocking.test_hiring_dialog_blocks_clicks_inside_dialog_but_not_on_buttons)
Test that clicks inside dialog area but not on buttons are blocked. ... ok
test_hiring_dialog_blocks_clicks_outside_dialog (test_modal_dialog_integration.TestModalDialogClickBlocking.test_hiring_dialog_blocks_clicks_outside_dialog)
Test that clicks outside the hiring dialog are blocked. ... ok
test_normal_click_handling_when_no_dialog (test_modal_dialog_integration.TestModalDialogClickBlocking.test_normal_click_handling_when_no_dialog)
Test that normal clicking works when no dialog is open. ... ok
test_overlay_manager_no_active_element (test_navigation_fixes.TestNavigationFixes.test_overlay_manager_no_active_element)
Test that overlay manager doesn't interfere when no element is active ... ok
test_overlay_manager_space_bar_clickable_elements (test_navigation_fixes.TestNavigationFixes.test_overlay_manager_space_bar_clickable_elements)
Test that overlay manager correctly handles space bar for clickable elements ... ok
test_overlay_manager_space_bar_handling (test_navigation_fixes.TestNavigationFixes.test_overlay_manager_space_bar_handling)
Test that overlay manager doesn't intercept space bar for non-clickable elements ... ok
test_default_config_sound_enabled (test_navigation_fixes.TestSoundDefaultConfiguration.test_default_config_sound_enabled)
Test that the default configuration has sound enabled ... ok
test_global_sound_manager_enabled_by_default (test_navigation_fixes.TestSoundDefaultConfiguration.test_global_sound_manager_enabled_by_default)
Test that global sound manager is enabled by default ... ok
test_back_button_positioning (test_navigation_stack.TestBackButton.test_back_button_positioning)
Test Back button positioning and sizing. ... ok
test_back_button_scaling (test_navigation_stack.TestBackButton.test_back_button_scaling)
Test Back button scales with screen size. ... ok
test_back_button_visibility (test_navigation_stack.TestBackButton.test_back_button_visibility)
Test Back button visibility based on navigation depth. ... ok
test_back_button_triggers_pop_navigation (test_navigation_stack.TestBackButtonClick.test_back_button_triggers_pop_navigation)
Test that clicking back button at depth 1 triggers pop_navigation_state. ... ok
test_should_show_back_button (test_navigation_stack.TestBackButtonHelper.test_should_show_back_button)
Test should_show_back_button logic. ... ok
test_multiple_navigation_levels (test_navigation_stack.TestNavigationStack.test_multiple_navigation_levels)
Test navigation through multiple levels. ... ok
test_navigation_stack_initialization (test_navigation_stack.TestNavigationStack.test_navigation_stack_initialization)
Test that navigation stack starts empty. ... ok
test_pop_empty_navigation_stack (test_navigation_stack.TestNavigationStack.test_pop_empty_navigation_stack)
Test popping from empty navigation stack. ... ok
test_pop_navigation_state (test_navigation_stack.TestNavigationStack.test_pop_navigation_state)
Test popping states from navigation stack. ... ok
test_push_navigation_state (test_navigation_stack.TestNavigationStack.test_push_navigation_state)
Test pushing states to navigation stack. ... ok
test_handler_functions_exist (test_new_player_experience.TestNewPlayerExperience.test_handler_functions_exist)
Test that handler functions are defined. ... ok
test_intro_message_generation (test_new_player_experience.TestNewPlayerExperience.test_intro_message_generation)
Test that intro message can be generated. ... ok
test_menu_items_updated (test_new_player_experience.TestNewPlayerExperience.test_menu_items_updated)
Test that menu items match current implementation. ... FAIL
test_state_manipulation (test_new_player_experience.TestNewPlayerExperience.test_state_manipulation)
Test that state variables can be manipulated. ... ok
test_state_variables_exist (test_new_player_experience.TestNewPlayerExperience.test_state_variables_exist)
Test that new player experience state variables are defined. ... ok
test_ui_drawing_function_exists (test_new_player_experience.TestNewPlayerExperience.test_ui_drawing_function_exists)
Test that UI drawing function is defined. ... ok
test_cat_adoption_event (test_office_cat.TestOfficeCat.test_cat_adoption_event)
Test that cat adoption event works correctly ... ok
test_cat_doom_stages (test_office_cat.TestOfficeCat.test_cat_doom_stages)
Test that cat doom stages work correctly ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test-cat-seed_20250929_074237.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_cat_petting_mechanics (test_office_cat.TestOfficeCat.test_cat_petting_mechanics)
Test that cat petting works correctly ... ok
test_cat_position_updates (test_office_cat.TestOfficeCat.test_cat_position_updates)
Test that cat position updates work correctly ... ok
test_cat_upkeep_costs (test_office_cat.TestOfficeCat.test_cat_upkeep_costs)
Test that cat upkeep costs are applied correctly ... ok
test_office_cat_initialization (test_office_cat.TestOfficeCat.test_office_cat_initialization)
Test that office cat system initializes correctly ... ok
test_onboarding_file_operations (test_onboarding.TestOnboardingIntegration.test_onboarding_file_operations)
Test onboarding file save/load operations. ... ok
test_mechanic_help (test_onboarding.TestOnboardingSystem.test_mechanic_help)
Test first-time mechanic help system. ... ok
test_mechanic_help_content (test_onboarding.TestOnboardingSystem.test_mechanic_help_content)
Test mechanic help content retrieval. ... ok
test_onboarding_initialization (test_onboarding.TestOnboardingSystem.test_onboarding_initialization)
Test that onboarding system initializes correctly. ... ok
test_should_show_tutorial (test_onboarding.TestOnboardingSystem.test_should_show_tutorial)
Test tutorial showing logic. ... ok
test_tooltip_system (test_onboarding.TestOnboardingSystem.test_tooltip_system)
Test tooltip management. ... WARNING:root:add_tooltip called with message: Test tooltip 1, priority: 1. This is a stub implementation.
WARNING:root:add_tooltip called with message: Test tooltip 2, priority: 3. This is a stub implementation.
WARNING:root:add_tooltip called with message: Test tooltip 3, priority: 2. This is a stub implementation.
ok
test_tutorial_content (test_onboarding.TestOnboardingSystem.test_tutorial_content)
Test tutorial content retrieval. ... WARNING:root:get_tutorial_content called for step: welcome. This is a stub implementation.
WARNING:root:get_tutorial_content called for step: complete. This is a stub implementation.
ok
test_tutorial_progression (test_onboarding.TestOnboardingSystem.test_tutorial_progression)
Test tutorial step progression. ... WARNING:root:advance_tutorial_step called for step: welcome. This is a stub implementation.
WARNING:root:get_tutorial_content called for step: welcome. This is a stub implementation.
WARNING:root:advance_tutorial_step called for step: resources. This is a stub implementation.
WARNING:root:get_tutorial_content called for step: resources. This is a stub implementation.
WARNING:root:advance_tutorial_step called for step: actions. This is a stub implementation.
WARNING:root:get_tutorial_content called for step: actions. This is a stub implementation.
WARNING:root:advance_tutorial_step called for step: action_points. This is a stub implementation.
WARNING:root:get_tutorial_content called for step: action_points. This is a stub implementation.
WARNING:root:advance_tutorial_step called for step: end_turn. This is a stub implementation.
WARNING:root:get_tutorial_content called for step: end_turn. This is a stub implementation.
WARNING:root:advance_tutorial_step called for step: events. This is a stub implementation.
WARNING:root:get_tutorial_content called for step: events. This is a stub implementation.
WARNING:root:advance_tutorial_step called for step: upgrades. This is a stub implementation.
WARNING:root:get_tutorial_content called for step: upgrades. This is a stub implementation.
WARNING:root:advance_tutorial_step called for step: complete. This is a stub implementation.
WARNING:root:get_tutorial_content called for step: complete. This is a stub implementation.
ok
test_creates_four_opponents (test_opponents.TestCreateDefaultOpponents.test_creates_four_opponents)
Test that create_default_opponents returns exactly 4 opponents. ... ok
test_opponents_have_unique_names (test_opponents.TestCreateDefaultOpponents.test_opponents_have_unique_names)
Test that default opponents have unique names. ... ok
test_opponents_have_varied_stats (test_opponents.TestCreateDefaultOpponents.test_opponents_have_varied_stats)
Test that default opponents have different stat distributions. ... ok
test_opponents_start_undiscovered (test_opponents.TestCreateDefaultOpponents.test_opponents_start_undiscovered)
Test that default opponents start undiscovered. ... ok
test_espionage_discovers_opponents (test_opponents.TestGameStateOpponentsIntegration.test_espionage_discovers_opponents)
Test that espionage can discover opponents. ... ok
test_gamestate_has_opponents (test_opponents.TestGameStateOpponentsIntegration.test_gamestate_has_opponents)
Test that GameState initializes with opponents. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_42_20250929_074237.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_opponent_victory_condition (test_opponents.TestGameStateOpponentsIntegration.test_opponent_victory_condition)
Test that game ends when opponent reaches 100% progress. ... ok
test_opponents_affect_doom (test_opponents.TestGameStateOpponentsIntegration.test_opponents_affect_doom)
Test that opponents contribute to doom over time. ... DEBUG:pdoom_42:Resource: doom 73 -> 77 (+4) [AI lab breakthrough event]
DEBUG:pdoom_42:Resource: money 100000 -> 100094 (+94) [_add(money, 94)]
DEBUG:pdoom_42:Resource: reputation 50 -> 50 (+0) [_add(reputation, 0)]
ok
test_opponents_start_undiscovered (test_opponents.TestGameStateOpponentsIntegration.test_opponents_start_undiscovered)
Test that opponents start undiscovered in game. ... ok
test_opponents_take_turns (test_opponents.TestGameStateOpponentsIntegration.test_opponents_take_turns)
Test that discovered opponents take actions during turn. ... ok
test_scout_opponent_action_availability (test_opponents.TestGameStateOpponentsIntegration.test_scout_opponent_action_availability)
Test that Scout Opponents action is restricted before turn 5. ... FAIL
test_scout_opponent_function (test_opponents.TestGameStateOpponentsIntegration.test_scout_opponent_function)
Test the scout opponent functionality. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_42_20250929_074238.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_discover_opponent (test_opponents.TestOpponent.test_discover_opponent)
Test opponent discovery functionality. ... ok
test_get_impact_on_doom (test_opponents.TestOpponent.test_get_impact_on_doom)
Test doom impact calculation. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test-opponents_20250929_074238.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_opponent_initialization (test_opponents.TestOpponent.test_opponent_initialization)
Test that opponents initialize with correct values. ... ok
test_scout_already_discovered_stat (test_opponents.TestOpponent.test_scout_already_discovered_stat)
Test scouting a stat that's already been discovered. ... ok
test_scout_invalid_stat (test_opponents.TestOpponent.test_scout_invalid_stat)
Test scouting an invalid stat name. ... ok
test_scout_stat_failure (test_opponents.TestOpponent.test_scout_stat_failure)
Test failed stat scouting. ... ok
test_scout_stat_success (test_opponents.TestOpponent.test_scout_stat_success)
Test successful stat scouting. ... FAIL
test_take_turn_discovered (test_opponents.TestOpponent.test_take_turn_discovered)
Test that discovered opponents take actions. ... ok
test_take_turn_undiscovered (test_opponents.TestOpponent.test_take_turn_undiscovered)
Test that undiscovered opponents don't generate messages. ... ok
test_opponent_makes_progress (test_opponents.TestOpponentAI.test_opponent_makes_progress)
Test that opponents make research progress over time. ... ok
test_opponent_spends_budget (test_opponents.TestOpponentAI.test_opponent_spends_budget)
Test that opponents spend their budget over time. ... ok
test_progress_caps_at_100 (test_opponents.TestOpponentAI.test_progress_caps_at_100)
Test that progress doesn't exceed 100. ... ok
test_full_scouting_cycle (test_opponents.TestOpponentIntegration.test_full_scouting_cycle)
Test a complete cycle of discovering and scouting an opponent. ... ok
test_opponent_lifecycle (test_opponents.TestOpponentIntegration.test_opponent_lifecycle)
Test a complete opponent lifecycle from creation to end game. ... ok
test_action_validation (test_overlay_manager.TestGameStateIntegration.test_action_validation)
Test action validation with error reporting. ... ok
test_error_tracking_integration (test_overlay_manager.TestGameStateIntegration.test_error_tracking_integration)
Test error tracking through GameState. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test_seed_20250929_074239.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_game_state_has_overlay_manager (test_overlay_manager.TestGameStateIntegration.test_game_state_has_overlay_manager)
Test that GameState includes overlay manager. ... ok
test_animation_updates (test_overlay_manager.TestOverlayManager.test_animation_updates)
Test animation system. ... ok
test_duplicate_element_registration (test_overlay_manager.TestOverlayManager.test_duplicate_element_registration)
Test that duplicate IDs are rejected. ... ok
test_element_registration (test_overlay_manager.TestOverlayManager.test_element_registration)
Test registering UI elements. ... ok
test_element_state_changes (test_overlay_manager.TestOverlayManager.test_element_state_changes)
Test changing element states (minimize, expand, etc.). ... ok
test_element_unregistration (test_overlay_manager.TestOverlayManager.test_element_unregistration)
Test removing UI elements. ... ok
test_error_tracking (test_overlay_manager.TestOverlayManager.test_error_tracking)
Test the error tracking system for easter egg. ... ok
test_overlay_manager_initialization (test_overlay_manager.TestOverlayManager.test_overlay_manager_initialization)
Test that overlay manager initializes correctly. ... ok
test_z_order_management (test_overlay_manager.TestOverlayManager.test_z_order_management)
Test z-order and bring to front functionality. ... ok
test_create_dialog (test_overlay_manager.TestUtilityFunctions.test_create_dialog)
Test dialog creation utility. ... ok
test_create_modal (test_overlay_manager.TestUtilityFunctions.test_create_modal)
Test modal creation utility. ... ok
test_create_tooltip (test_overlay_manager.TestUtilityFunctions.test_create_tooltip)
Test tooltip creation utility. ... ok
test_button_drawing (test_overlay_manager.TestVisualFeedback.test_button_drawing)
Test drawing buttons with different states. ... ok
test_font_scaling (test_overlay_manager.TestVisualFeedback.test_font_scaling)
Test font scaling for accessibility. ... ok
test_icon_button_drawing (test_overlay_manager.TestVisualFeedback.test_icon_button_drawing)
Test drawing icon buttons. ... ok
test_panel_drawing (test_overlay_manager.TestVisualFeedback.test_panel_drawing)
Test drawing panels with title bars. ... ok
test_visual_feedback_initialization (test_overlay_manager.TestVisualFeedback.test_visual_feedback_initialization)
Test that visual feedback system initializes correctly. ... ok
test_draw_popup_events_returns_button_rects (test_popup_buttons.TestPopupButtonDetection.test_draw_popup_events_returns_button_rects)
Test that draw_popup_events returns button rectangles. ... ok
test_popup_button_coordinates_calculation (test_popup_buttons.TestPopupButtonDetection.test_popup_button_coordinates_calculation)
Test that popup button coordinates are calculated correctly. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test_seed_20250929_074241.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_draw_popup_events_basic (test_popup_buttons.TestPopupButtons.test_draw_popup_events_basic)
Test that draw_popup_events can be called without errors. ... ok
test_handle_popup_event_action_accept (test_popup_buttons.TestPopupButtons.test_handle_popup_event_action_accept)
Test handling ACCEPT action on popup event. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test_seed_20250929_074242.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_handle_popup_event_action_defer (test_popup_buttons.TestPopupButtons.test_handle_popup_event_action_defer)
Test handling DEFER action on popup event. ... ok
test_handle_popup_event_action_dismiss (test_popup_buttons.TestPopupButtons.test_handle_popup_event_action_dismiss)
Test handling DISMISS action on popup event. ... ok
test_handle_popup_event_action_reduce (test_popup_buttons.TestPopupButtons.test_handle_popup_event_action_reduce)
Test handling REDUCE action on popup event. ... ok
test_popup_event_has_actions (test_popup_buttons.TestPopupButtons.test_popup_event_has_actions)
Test that popup event has the expected actions. ... ok
test_popup_event_present (test_popup_buttons.TestPopupButtons.test_popup_event_present)
Test that popup events are properly set up. ... ok
test_delete_all_data_no_logger (test_privacy_controls_ui.TestPrivacyControlsCore.test_delete_all_data_no_logger)
Test deleting data when no logger is available. ... ok
test_get_current_logging_level_no_logger (test_privacy_controls_ui.TestPrivacyControlsCore.test_get_current_logging_level_no_logger)
Test getting logging level when no logger is available. ... ok
test_logging_level_options (test_privacy_controls_ui.TestPrivacyControlsCore.test_logging_level_options)
Test that logging level options are correct. ... ok
test_privacy_controls_initialization (test_privacy_controls_ui.TestPrivacyControlsCore.test_privacy_controls_initialization)
Test that privacy controls initialize correctly. ... ok
test_set_logging_level_no_logger (test_privacy_controls_ui.TestPrivacyControlsCore.test_set_logging_level_no_logger)
Test setting logging level when no logger is available. ... ok
test_concurrent_operations (test_privacy_controls_ui.TestPrivacyControlsEdgeCases.test_concurrent_operations)
Test handling multiple operations simultaneously. ... FAIL
test_extreme_mouse_coordinates (test_privacy_controls_ui.TestPrivacyControlsEdgeCases.test_extreme_mouse_coordinates)
Test handling extreme mouse coordinates. ... ok
test_invalid_key_press (test_privacy_controls_ui.TestPrivacyControlsEdgeCases.test_invalid_key_press)
Test handling invalid key presses. ... ok
test_large_screen_dimensions (test_privacy_controls_ui.TestPrivacyControlsEdgeCases.test_large_screen_dimensions)
Test handling very large screen dimensions. ... ok
test_small_screen_dimensions (test_privacy_controls_ui.TestPrivacyControlsEdgeCases.test_small_screen_dimensions)
Test handling very small screen dimensions. ... ok
test_state_transitions (test_privacy_controls_ui.TestPrivacyControlsEdgeCases.test_state_transitions)
Test all valid state transitions. ... ok
test_integration_with_game_run_logger (test_privacy_controls_ui.TestPrivacyControlsIntegration.test_integration_with_game_run_logger)
Test integration between privacy controls and game run logger. ... ok
test_privacy_controls_import (test_privacy_controls_ui.TestPrivacyControlsIntegration.test_privacy_controls_import)
Test that privacy_controls can be imported by main application. ... ok
test_ui_components_compatibility (test_privacy_controls_ui.TestPrivacyControlsIntegration.test_ui_components_compatibility)
Test that privacy controls UI is compatible with visual feedback system. ... ok
test_keyboard_navigation_delete_confirm (test_privacy_controls_ui.TestPrivacyControlsInteraction.test_keyboard_navigation_delete_confirm)
Test keyboard navigation in delete confirmation dialog. ... ok
test_keyboard_navigation_main_screen (test_privacy_controls_ui.TestPrivacyControlsInteraction.test_keyboard_navigation_main_screen)
Test keyboard navigation on main screen. ... ok
test_mouse_click_delete_confirm (test_privacy_controls_ui.TestPrivacyControlsInteraction.test_mouse_click_delete_confirm)
Test mouse clicks on delete confirmation dialog. ... ok
test_mouse_click_main_screen (test_privacy_controls_ui.TestPrivacyControlsInteraction.test_mouse_click_main_screen)
Test mouse clicks on main screen. ... ok
test_reset_functionality (test_privacy_controls_ui.TestPrivacyControlsInteraction.test_reset_functionality)
Test reset functionality. ... ok
test_draw_delete_confirmation (test_privacy_controls_ui.TestPrivacyControlsUI.test_draw_delete_confirmation)
Test drawing the delete confirmation dialog. ... ok
test_draw_dispatcher (test_privacy_controls_ui.TestPrivacyControlsUI.test_draw_dispatcher)
Test main draw method dispatches correctly. ... ok
test_draw_main_screen (test_privacy_controls_ui.TestPrivacyControlsUI.test_draw_main_screen)
Test drawing the main privacy controls screen. ... ok
test_first_time_info_display (test_privacy_controls_ui.TestPrivacyControlsUI.test_first_time_info_display)
Test first-time information display. ... ok
test_get_current_logging_level_with_logger (test_privacy_controls_ui.TestPrivacyControlsWithLogger.test_get_current_logging_level_with_logger)
Test getting logging level from active logger. ... FAIL
test_logging_level_dismisses_first_time_info (test_privacy_controls_ui.TestPrivacyControlsWithLogger.test_logging_level_dismisses_first_time_info)
Test that setting a logging level dismisses first-time info. ... ok
test_set_logging_level_with_logger (test_privacy_controls_ui.TestPrivacyControlsWithLogger.test_set_logging_level_with_logger)
Test setting logging level with active logger. ... ok
test_employee_blob_structure (test_productive_actions.TestGameStateIntegration.test_employee_blob_structure)
Test that employee blobs have productive action fields. ... DEBUG:pdoom_12345:Resource: staff 0 -> 3 (+3) [_add(staff, 3)]
ok
test_productive_action_methods (test_productive_actions.TestGameStateIntegration.test_productive_action_methods)
Test productive action management methods. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_12345_20250929_074246.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
DEBUG:pdoom_12345:Resource: staff 0 -> 2 (+2) [_add(staff, 2)]
ok
test_productivity_update_with_actions (test_productive_actions.TestGameStateIntegration.test_productivity_update_with_actions)
Test that productivity update applies productive actions. ... DEBUG:pdoom_12345:Resource: staff 0 -> 3 (+3) [_add(staff, 3)]
DEBUG:pdoom_12345:Resource: compute 0 -> 20 (+20) [_add(compute, 20)]
DEBUG:pdoom_12345:Resource: reputation 50 -> 65 (+15) [_add(reputation, 15)]
DEBUG:pdoom_12345:Resource: research_progress 0 -> 3 (+3) [_add(research_progress, 3)]
ok
test_action_structure (test_productive_actions.TestProductiveActions.test_action_structure)
Test that all actions have required fields. ... ok
test_all_categories_defined (test_productive_actions.TestProductiveActions.test_all_categories_defined)
Test that all required employee categories have productive actions defined. ... ok
test_default_action_index (test_productive_actions.TestProductiveActions.test_default_action_index)
Test getting default action index. ... ok
test_employee_subtype_mapping (test_productive_actions.TestProductiveActions.test_employee_subtype_mapping)
Test that all employee subtypes map to productive action categories. ... ok
test_get_available_actions (test_productive_actions.TestProductiveActions.test_get_available_actions)
Test getting available actions for categories. ... ok
test_requirements_checking (test_productive_actions.TestProductiveActions.test_requirements_checking)
Test checking action requirements against game state. ... ok
test_company_name_set (test_public_opinion_system.TestGameStateIntegration.test_company_name_set)
Test that company name is set for media stories. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test-seed_20250929_074237.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_media_actions_available (test_public_opinion_system.TestGameStateIntegration.test_media_actions_available)
Test that media actions are available in the actions list. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test-seed_20250929_074246.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
FAIL
test_opinion_updates_on_turn_end (test_public_opinion_system.TestGameStateIntegration.test_opinion_updates_on_turn_end)
Test that public opinion updates when turn ends. ... FAIL
test_public_opinion_initialization (test_public_opinion_system.TestGameStateIntegration.test_public_opinion_initialization)
Test that public opinion is initialized in game state. ... ok
test_research_action_generates_story (test_public_opinion_system.TestGameStateIntegration.test_research_action_generates_story)
Test that research actions can generate media stories. ... DEBUG:pdoom_test-seed:Resource: money 100000 -> 99960 (-40) [_add(money, -40)]
ok
test_story_creation (test_public_opinion_system.TestMediaStory.test_story_creation)
Test creating a media story. ... ok
test_story_expiration (test_public_opinion_system.TestMediaStory.test_story_expiration)
Test story expiration logic. ... ok
test_story_validation (test_public_opinion_system.TestMediaStory.test_story_validation)
Test story creation validation. ... ok
test_create_story_from_capability_research (test_public_opinion_system.TestMediaStoryGeneration.test_create_story_from_capability_research)
Test creating media story from capability research action. ... ok
test_create_story_from_safety_research (test_public_opinion_system.TestMediaStoryGeneration.test_create_story_from_safety_research)
Test creating media story from safety research action. ... ok
test_no_story_for_unknown_action (test_public_opinion_system.TestMediaStoryGeneration.test_no_story_for_unknown_action)
Test that unknown actions don't generate stories. ... ok
test_competitor_story_generation (test_public_opinion_system.TestMediaSystem.test_competitor_story_generation)
Test generating stories about competitors. ... FAIL
test_exclusive_interview_action (test_public_opinion_system.TestMediaSystem.test_exclusive_interview_action)
Test executing exclusive interview action. ... ok
test_get_available_actions (test_public_opinion_system.TestMediaSystem.test_get_available_actions)
Test getting available media actions. ... ok
test_insufficient_funds (test_public_opinion_system.TestMediaSystem.test_insufficient_funds)
Test action execution with insufficient funds. ... ok
test_media_system_initialization (test_public_opinion_system.TestMediaSystem.test_media_system_initialization)
Test media system initializes correctly. ... ok
test_press_release_action (test_public_opinion_system.TestMediaSystem.test_press_release_action)
Test executing press release action. ... ok
test_random_event_generation (test_public_opinion_system.TestMediaSystem.test_random_event_generation)
Test generating random media events. ... FAIL
test_turn_update (test_public_opinion_system.TestMediaSystem.test_turn_update)
Test media system turn update. ... FAIL
test_get_set_opinion (test_public_opinion_system.TestPublicOpinion.test_get_set_opinion)
Test getting and setting opinion values. ... ok
test_media_stories (test_public_opinion_system.TestPublicOpinion.test_media_stories)
Test adding and managing media stories. ... ok
test_natural_decay (test_public_opinion_system.TestPublicOpinion.test_natural_decay)
Test that opinion values naturally decay toward neutral. ... ok
test_opinion_initialization (test_public_opinion_system.TestPublicOpinion.test_opinion_initialization)
Test that public opinion initializes with correct default values. ... ok
test_opinion_modifiers (test_public_opinion_system.TestPublicOpinion.test_opinion_modifiers)
Test adding and applying opinion modifiers. ... ok
test_serialization (test_public_opinion_system.TestPublicOpinion.test_serialization)
Test converting public opinion to/from dictionary. ... ok
test_trend_calculation (test_public_opinion_system.TestPublicOpinion.test_trend_calculation)
Test opinion trend calculation. ... ok
test_hiring_dialog_covers_all_removed_functionality (test_redundant_actions_removal.TestRedundantActionsRemoval.test_hiring_dialog_covers_all_removed_functionality)
Test that hiring dialog includes all employee types from removed actions. ... ok
test_hiring_dialog_escape_functionality (test_redundant_actions_removal.TestRedundantActionsRemoval.test_hiring_dialog_escape_functionality)
Test that ESC key properly dismisses hiring dialog as required by issue. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test-escape_20250929_074226.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_hiring_dialog_functionality_equivalent (test_redundant_actions_removal.TestRedundantActionsRemoval.test_hiring_dialog_functionality_equivalent)
Test that hiring through dialog provides same effects as removed direct actions. ... DEBUG:pdoom_test-functionality:Resource: staff 0 -> 1 (+1) [_add(staff, 1)]
DEBUG:pdoom_test-functionality:Resource: admin_staff 0 -> 1 (+1) [_add(admin_staff, 1)]
ok
test_no_redundant_direct_hire_actions (test_redundant_actions_removal.TestRedundantActionsRemoval.test_no_redundant_direct_hire_actions)
Test that redundant direct hire actions have been removed. ... ok
test_complete_research_project (test_research_quality.TestGameStateIntegration.test_complete_research_project)
Test completing research projects and debt changes. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test-integration_20250929_074227.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_create_research_project (test_research_quality.TestGameStateIntegration.test_create_research_project)
Test creating research projects. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test-integration_20250929_074247.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_debt_consequences (test_research_quality.TestGameStateIntegration.test_debt_consequences)
Test that debt consequences are checked. ... FAIL
test_debt_reduction_actions (test_research_quality.TestGameStateIntegration.test_debt_reduction_actions)
Test debt reduction action execution. ... DEBUG:pdoom_test-integration:Resource: money 1000 -> 900 (-100) [_add(money, -100)]
ok
test_debt_summary_for_ui (test_research_quality.TestGameStateIntegration.test_debt_summary_for_ui)
Test debt summary for UI includes calculated fields. ... ok
test_initial_research_quality_state (test_research_quality.TestGameStateIntegration.test_initial_research_quality_state)
Test that GameState initializes research quality correctly. ... ok
test_research_effectiveness_modifier (test_research_quality.TestGameStateIntegration.test_research_effectiveness_modifier)
Test that technical debt affects research effectiveness. ... ok
test_set_research_quality (test_research_quality.TestGameStateIntegration.test_set_research_quality)
Test setting research quality approach. ... ok
test_aggressive_opponent_behavior (test_research_quality.TestOpponentIntegration.test_aggressive_opponent_behavior)
Test aggressive opponent accumulates debt. ... ok
test_conservative_opponent_behavior (test_research_quality.TestOpponentIntegration.test_conservative_opponent_behavior)
Test conservative opponent manages debt well. ... ok
test_opponent_doom_impact_with_debt (test_research_quality.TestOpponentIntegration.test_opponent_doom_impact_with_debt)
Test that opponent technical debt affects doom contribution. ... ok
test_opponent_initial_debt_levels (test_research_quality.TestOpponentIntegration.test_opponent_initial_debt_levels)
Test that opponents start with different debt levels. ... ok
test_opponent_research_approaches (test_research_quality.TestOpponentIntegration.test_opponent_research_approaches)
Test that opponents use different research approaches. ... ok
test_opponent_risk_tolerances (test_research_quality.TestOpponentIntegration.test_opponent_risk_tolerances)
Test that opponents have different risk tolerances. ... ok
test_research_quality_modifier (test_research_quality.TestOpponentIntegration.test_research_quality_modifier)
Test that opponents' research quality affects their progress. ... ok
test_debt_reduction_actions_exist (test_research_quality.TestResearchActions.test_debt_reduction_actions_exist)
Test that debt reduction actions are properly configured. ... ok
test_research_actions_exist (test_research_quality.TestResearchActions.test_research_actions_exist)
Test that research actions are in the actions list. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test-actions_20250929_074247.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
FAIL
test_research_outcome_calculation (test_research_quality.TestResearchActions.test_research_outcome_calculation)
Test research outcome calculation with quality and debt. ... ok
test_modified_costs_and_duration (test_research_quality.TestResearchQuality.test_modified_costs_and_duration)
Test that quality modifiers affect project costs and duration. ... ok
test_quality_modifiers (test_research_quality.TestResearchQuality.test_quality_modifiers)
Test that quality modifiers match specification. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test-research-quality_20250929_074247.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_research_project_creation (test_research_quality.TestResearchQuality.test_research_project_creation)
Test research project creation and modification. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test-research-quality_20250929_074248.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_research_quality_enum (test_research_quality.TestResearchQuality.test_research_quality_enum)
Test that research quality enum values are correct. ... ok
test_debt_accumulation (test_research_quality.TestTechnicalDebt.test_debt_accumulation)
Test debt accumulation and distribution. ... ok
test_debt_initialization (test_research_quality.TestTechnicalDebt.test_debt_initialization)
Test that debt initializes correctly. ... ok
test_debt_penalties (test_research_quality.TestTechnicalDebt.test_debt_penalties)
Test debt penalty calculations. ... ok
test_debt_reduction (test_research_quality.TestTechnicalDebt.test_debt_reduction)
Test debt reduction functionality. ... ok
test_debt_summary (test_research_quality.TestTechnicalDebt.test_debt_summary)
Test debt summary for UI display. ... ok
test_complete_flow_integration (test_settings_flow.TestSettingsFlow.test_complete_flow_integration)
Test the complete flow from settings to game. ... ok
test_pre_game_settings_dummy_values (test_settings_flow.TestSettingsFlow.test_pre_game_settings_dummy_values)
Test that dummy values are set as specified. ... ok
test_pre_game_settings_state_exists (test_settings_flow.TestSettingsFlow.test_pre_game_settings_state_exists)
Test that pre-game settings state is properly defined. ... ok
test_seed_selection_flow (test_settings_flow.TestSettingsFlow.test_seed_selection_flow)
Test seed selection screen functionality. ... ok
test_seed_selection_mouse_clicks (test_settings_flow.TestSettingsFlow.test_seed_selection_mouse_clicks)
Test mouse click handling in seed selection. ... ok
test_settings_keyboard_navigation (test_settings_flow.TestSettingsFlow.test_settings_keyboard_navigation)
Test keyboard navigation in settings screen. ... ok
test_tutorial_choice_flow (test_settings_flow.TestSettingsFlow.test_tutorial_choice_flow)
Test tutorial choice screen functionality. ... ok
test_tutorial_choice_mouse_clicks (test_settings_flow.TestSettingsFlow.test_tutorial_choice_mouse_clicks)
Test mouse click handling in tutorial choice. ... ok
test_draw_pre_game_settings_no_crash (test_settings_flow.TestUIFunctions.test_draw_pre_game_settings_no_crash)
Test that draw_pre_game_settings doesn't crash. ... ok
test_draw_seed_selection_no_crash (test_settings_flow.TestUIFunctions.test_draw_seed_selection_no_crash)
Test that draw_seed_selection doesn't crash. ... ok
test_draw_tutorial_choice_no_crash (test_settings_flow.TestUIFunctions.test_draw_tutorial_choice_no_crash)
Test that draw_tutorial_choice doesn't crash. ... ok
test_ui_functions_importable (test_settings_flow.TestUIFunctions.test_ui_functions_importable)
Test that new UI functions can be imported. ... ok
test_game_state_sound_enabled_by_default (test_sound_issue_89.TestSoundIssue89.test_game_state_sound_enabled_by_default)
Test that GameState has sound enabled by default (Issue #89) ... ok
test_global_sound_manager_integration (test_sound_issue_89.TestSoundIssue89.test_global_sound_manager_integration)
Test that global sound manager can be imported from main ... ok
test_individual_sound_toggles_work (test_sound_issue_89.TestSoundIssue89.test_individual_sound_toggles_work)
Test that individual sound effects can be toggled ... ok
test_main_menu_ui_functions_exist (test_sound_issue_89.TestSoundIssue89.test_main_menu_ui_functions_exist)
Test that UI functions for main menu sound button exist ... ok
test_sound_manager_enabled_by_default (test_sound_issue_89.TestSoundIssue89.test_sound_manager_enabled_by_default)
Test that SoundManager is enabled by default (Issue #89) ... ok
test_sound_manager_set_enabled (test_sound_issue_89.TestSoundIssue89.test_sound_manager_set_enabled)
Test explicit sound enable/disable functionality ... ok
test_sound_manager_toggle_functionality (test_sound_issue_89.TestSoundIssue89.test_sound_manager_toggle_functionality)
Test that sound can be toggled on and off ... ok
test_sound_plays_without_error (test_sound_issue_89.TestSoundSystemIntegration.test_sound_plays_without_error)
Test that sound methods can be called without throwing errors ... ok
test_sync_sound_state_between_managers (test_sound_issue_89.TestSoundSystemIntegration.test_sync_sound_state_between_managers)
Test that sound state can be synced between global and game managers ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_12345_20250929_074249.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_stepwise_tutorial_start (test_stepwise_tutorial.TestStepwiseTutorial.test_stepwise_tutorial_start)
Test starting the stepwise tutorial. ... ok
test_tutorial_advancement (test_stepwise_tutorial.TestStepwiseTutorial.test_tutorial_advancement)
Test advancing through tutorial steps. ... ok
test_tutorial_back_navigation (test_stepwise_tutorial.TestStepwiseTutorial.test_tutorial_back_navigation)
Test going back in the tutorial. ... ok
test_tutorial_completion (test_stepwise_tutorial.TestStepwiseTutorial.test_tutorial_completion)
Test tutorial completion. ... ok
test_tutorial_data_retrieval (test_stepwise_tutorial.TestStepwiseTutorial.test_tutorial_data_retrieval)
Test getting current tutorial step data. ... ok
test_tutorial_sequence_structure (test_stepwise_tutorial.TestStepwiseTutorial.test_tutorial_sequence_structure)
Test that the tutorial sequence is properly structured. ... ok
test_ui_element_visibility (test_stepwise_tutorial.TestStepwiseTutorial.test_ui_element_visibility)
Test UI element visibility control. ... ok
test_tutorial_disabled_shows_all_elements (test_stepwise_tutorial.TestTutorialIntegration.test_tutorial_disabled_shows_all_elements)
Test that when tutorial is disabled, all UI elements are visible. ... ok
test_communication_protocols_action (test_technical_failures.TestTechnicalFailureCascadeActions.test_communication_protocols_action)
Test communication protocols upgrade action. ... DEBUG:pdoom_test-cascade-actions:Resource: money 500 -> 475 (-25) [_add(money, -25)]
DEBUG:pdoom_test-cascade-actions:Resource: reputation 50 -> 51 (+1) [_add(reputation, 1)]
ok
test_incident_response_action (test_technical_failures.TestTechnicalFailureCascadeActions.test_incident_response_action)
Test incident response training action. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test-cascade-actions_20250929_074250.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
DEBUG:pdoom_test-cascade-actions:Resource: money 500 -> 470 (-30) [_add(money, -30)]
DEBUG:pdoom_test-cascade-actions:Resource: reputation 50 -> 51 (+1) [_add(reputation, 1)]
ok
test_monitoring_systems_action (test_technical_failures.TestTechnicalFailureCascadeActions.test_monitoring_systems_action)
Test monitoring systems upgrade action. ... DEBUG:pdoom_test-cascade-actions:Resource: money 500 -> 460 (-40) [_add(money, -40)]
DEBUG:pdoom_test-cascade-actions:Resource: compute 0 -> 2 (+2) [_add(compute, 2)]
ok
test_safety_audit_action (test_technical_failures.TestTechnicalFailureCascadeActions.test_safety_audit_action)
Test comprehensive safety audit action. ... DEBUG:pdoom_test-cascade-actions:Resource: money 500 -> 440 (-60) [_add(money, -60)]
DEBUG:pdoom_test-cascade-actions:Resource: reputation 50 -> 52 (+2) [_add(reputation, 2)]
ok
test_safety_audit_insufficient_funds (test_technical_failures.TestTechnicalFailureCascadeActions.test_safety_audit_insufficient_funds)
Test safety audit with insufficient funds. ... ok
test_cascade_prevention_event (test_technical_failures.TestTechnicalFailureCascadeEvents.test_cascade_prevention_event)
Test cascade prevention event handler. ... DEBUG:pdoom_test-cascade-events:Resource: reputation 15 -> 17 (+2) [_add(reputation, 2)]
ok
test_cover_up_exposed_event (test_technical_failures.TestTechnicalFailureCascadeEvents.test_cover_up_exposed_event)
Test cover-up exposure event handler. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test-cascade-events_20250929_074250.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
DEBUG:pdoom_test-cascade-events:Resource: reputation 15 -> 8 (-7) [_add(reputation, -7)]
DEBUG:pdoom_test-cascade-events:Resource: money 200 -> 31 (-169) [_add(money, -169)]
ok
test_near_miss_averted_event (test_technical_failures.TestTechnicalFailureCascadeEvents.test_near_miss_averted_event)
Test near-miss averted event handler. ... DEBUG:pdoom_test-cascade-events:Resource: reputation 15 -> 16 (+1) [_add(reputation, 1)]
ok
test_transparency_dividend_event (test_technical_failures.TestTechnicalFailureCascadeEvents.test_transparency_dividend_event)
Test transparency dividend event handler. ... DEBUG:pdoom_test-cascade-events:Resource: reputation 15 -> 18 (+3) [_add(reputation, 3)]
ok
test_action_availability (test_technical_failures.TestTechnicalFailureCascadeIntegration.test_action_availability)
Test that cascade prevention actions are available. ... FAIL
test_cascade_system_persistence (test_technical_failures.TestTechnicalFailureCascadeIntegration.test_cascade_system_persistence)
Test that cascade system state persists correctly. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test-cascade-integration_20250929_074250.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_event_availability (test_technical_failures.TestTechnicalFailureCascadeIntegration.test_event_availability)
Test that cascade-related events are available. ... ok
test_integration_with_turn_processing (test_technical_failures.TestTechnicalFailureCascadeIntegration.test_integration_with_turn_processing)
Test that cascades are checked during turn processing. ... ok
test_actual_failure_handling (test_technical_failures.TestTechnicalFailureCascades.test_actual_failure_handling)
Test actual failure event handling. ... DEBUG:pdoom_test-cascade-system:Resource: money 200 -> 170 (-30) [_add(money, -30)]
DEBUG:pdoom_test-cascade-system:Resource: reputation 10 -> 8 (-2) [_add(reputation, -2)]
ok
test_cascade_containment_effectiveness (test_technical_failures.TestTechnicalFailureCascades.test_cascade_containment_effectiveness)
Test cascade containment based on response capabilities. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test-cascade-system_20250929_074251.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_cascade_initiation (test_technical_failures.TestTechnicalFailureCascades.test_cascade_initiation)
Test cascade initiation from initial failure. ... DEBUG:pdoom_test-cascade-system:Resource: compute 50 -> 14 (-36) [_add(compute, -36)]
DEBUG:pdoom_test-cascade-system:Resource: money 200 -> 140 (-60) [_add(money, -60)]
ok
test_cascade_progression (test_technical_failures.TestTechnicalFailureCascades.test_cascade_progression)
Test cascade progression over multiple turns. ... FAIL
test_cascade_summary (test_technical_failures.TestTechnicalFailureCascades.test_cascade_summary)
Test failure cascade summary for UI. ... ok
test_cascade_system_initialization (test_technical_failures.TestTechnicalFailureCascades.test_cascade_system_initialization)
Test that cascade system initializes correctly. ... ok
test_cover_up_risk_modifier (test_technical_failures.TestTechnicalFailureCascades.test_cover_up_risk_modifier)
Test risk modifier from cover-up debt. ... ok
test_failure_event_creation (test_technical_failures.TestTechnicalFailureCascades.test_failure_event_creation)
Test creation of detailed failure events. ... ok
test_failure_severity_calculation (test_technical_failures.TestTechnicalFailureCascades.test_failure_severity_calculation)
Test failure severity calculation based on game state. ... ok
test_failure_type_selection (test_technical_failures.TestTechnicalFailureCascades.test_failure_type_selection)
Test that failure types are selected appropriately based on game state. ... ok
test_insufficient_funds_upgrade (test_technical_failures.TestTechnicalFailureCascades.test_insufficient_funds_upgrade)
Test upgrade attempts with insufficient funds. ... ok
test_integration_with_technical_debt (test_technical_failures.TestTechnicalFailureCascades.test_integration_with_technical_debt)
Test integration with existing technical debt system. ... ok
test_near_miss_handling (test_technical_failures.TestTechnicalFailureCascades.test_near_miss_handling)
Test near-miss event handling. ... ok
test_prevention_system_upgrades (test_technical_failures.TestTechnicalFailureCascades.test_prevention_system_upgrades)
Test prevention system capability upgrades. ... DEBUG:pdoom_test-cascade-system:Resource: money 200 -> 170 (-30) [_add(money, -30)]
DEBUG:pdoom_test-cascade-system:Resource: money 170 -> 130 (-40) [_add(money, -40)]
DEBUG:pdoom_test-cascade-system:Resource: money 130 -> 105 (-25) [_add(money, -25)]
ok
test_resilience_bonus_calculation (test_technical_failures.TestTechnicalFailureCascades.test_resilience_bonus_calculation)
Test resilience bonus from lessons learned. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test-cascade-system_20250929_074252.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_transparency_reputation_bonus (test_technical_failures.TestTechnicalFailureCascades.test_transparency_reputation_bonus)
Test reputation bonus from transparent handling. ... ok
test_centralized_blocking_logic (test_turn6_spacebar_regression.TestArchitecturalImprovements.test_centralized_blocking_logic)
Test that blocking logic is centralized and consistent. ... ok
test_no_redundant_key_checking (test_turn6_spacebar_regression.TestArchitecturalImprovements.test_no_redundant_key_checking)
Test that redundant key checking pattern is avoided. ... ok
test_blocking_conditions_evaluation (test_turn6_spacebar_regression.TestTurn6SpacebarRegression.test_blocking_conditions_evaluation)
Test that blocking conditions evaluate correctly at Turn 6. ... DEBUG:pdoom_test-turn6-regression:Resource: doom 37 -> 39 (+2) [AI lab breakthrough event]
DEBUG:pdoom_test-turn6-regression:Resource: doom 48 -> 50 (+2) [AI lab breakthrough event]
ok
test_core_logic_works_at_turn_6 (test_turn6_spacebar_regression.TestTurn6SpacebarRegression.test_core_logic_works_at_turn_6)
Test that core end_turn() logic works correctly at Turn 6. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test-turn6-regression_20250929_074252.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
DEBUG:pdoom_test-turn6-regression:Resource: doom 37 -> 39 (+2) [AI lab breakthrough event]
DEBUG:pdoom_test-turn6-regression:Resource: doom 48 -> 50 (+2) [AI lab breakthrough event]
DEBUG:pdoom_test-turn6-regression:Resource: doom 57 -> 60 (+3) [AI lab breakthrough event]
ok
test_dialog_state_types (test_turn6_spacebar_regression.TestTurn6SpacebarRegression.test_dialog_state_types)
Test that dialog states have consistent types. ... DEBUG:pdoom_test-turn6-regression:Resource: doom 37 -> 39 (+2) [AI lab breakthrough event]
DEBUG:pdoom_test-turn6-regression:Resource: doom 48 -> 50 (+2) [AI lab breakthrough event]
ok
test_event_consumption_pattern (test_turn6_spacebar_regression.TestTurn6SpacebarRegression.test_event_consumption_pattern)
Test the event consumption pattern that was missing. ... DEBUG:pdoom_test-turn6-regression:Resource: doom 37 -> 39 (+2) [AI lab breakthrough event]
DEBUG:pdoom_test-turn6-regression:Resource: doom 48 -> 50 (+2) [AI lab breakthrough event]
ok
test_keybinding_system_consistency (test_turn6_spacebar_regression.TestTurn6SpacebarRegression.test_keybinding_system_consistency)
Test that keybinding system works consistently at Turn 6. ... DEBUG:pdoom_test-turn6-regression:Resource: doom 37 -> 39 (+2) [AI lab breakthrough event]
DEBUG:pdoom_test-turn6-regression:Resource: doom 48 -> 50 (+2) [AI lab breakthrough event]
ok
test_multiple_turn_progression (test_turn6_spacebar_regression.TestTurn6SpacebarRegression.test_multiple_turn_progression)
Test that spacebar continues to work after Turn 6. ... DEBUG:pdoom_test-turn6-regression:Resource: doom 37 -> 39 (+2) [AI lab breakthrough event]
DEBUG:pdoom_test-turn6-regression:Resource: doom 48 -> 50 (+2) [AI lab breakthrough event]
DEBUG:pdoom_test-turn6:Resource: money 100000 -> 100077 (+77) [_add(money, 77)]
DEBUG:pdoom_test-turn6:Resource: reputation 50 -> 52 (+2) [_add(reputation, 2)]
DEBUG:pdoom_test-turn6:Resource: doom 42 -> 46 (+4) [AI lab breakthrough event]
DEBUG:pdoom_test-turn6:Resource: money 100077 -> 100182 (+105) [_add(money, 105)]
DEBUG:pdoom_test-turn6:Resource: reputation 52 -> 54 (+2) [_add(reputation, 2)]
DEBUG:pdoom_test-turn7:Resource: doom 37 -> 40 (+3) [AI lab breakthrough event]
DEBUG:pdoom_test-turn7:Resource: doom 41 -> 44 (+3) [AI lab breakthrough event]
DEBUG:pdoom_test-turn7:Resource: doom 47 -> 50 (+3) [AI lab breakthrough event]
DEBUG:pdoom_test-turn7:Resource: doom 75 -> 79 (+4) [AI lab breakthrough event]
DEBUG:pdoom_test-turn7:Resource: doom 95 -> 98 (+3) [AI lab breakthrough event]
DEBUG:pdoom_test-turn8:Resource: doom 39 -> 42 (+3) [AI lab breakthrough event]
DEBUG:pdoom_test-turn8:Resource: doom 60 -> 64 (+4) [AI lab breakthrough event]
DEBUG:pdoom_test-turn8:Resource: money 100000 -> 100081 (+81) [_add(money, 81)]
DEBUG:pdoom_test-turn8:Resource: reputation 50 -> 52 (+2) [_add(reputation, 2)]
DEBUG:pdoom_test-turn8:Resource: doom 67 -> 71 (+4) [AI lab breakthrough event]
DEBUG:pdoom_test-turn8:Resource: doom 75 -> 77 (+2) [AI lab breakthrough event]
DEBUG:pdoom_test-turn8:Resource: money 100081 -> 100031 (-50) [_add(money, -50)]
DEBUG:pdoom_test-turn8:Resource: money 100031 -> 100017 (-14) [_add(money, -14)]
DEBUG:pdoom_test-turn8:Resource: doom 77 -> 76 (-1) [_add(doom, -1)]
ok
test_popup_events_condition (test_turn6_spacebar_regression.TestTurn6SpacebarRegression.test_popup_events_condition)
Test that popup events condition evaluates correctly. ... DEBUG:pdoom_test-turn6-regression:Resource: doom 37 -> 39 (+2) [AI lab breakthrough event]
DEBUG:pdoom_test-turn6-regression:Resource: doom 48 -> 50 (+2) [AI lab breakthrough event]
ok
test_board_member_system_tutorial_trigger (test_tutorial_system.TestTutorialMilestones.test_board_member_system_tutorial_trigger)
Test that board member system tutorial is triggered on milestone. ... ok
test_manager_system_tutorial_trigger (test_tutorial_system.TestTutorialMilestones.test_manager_system_tutorial_trigger)
Test that manager system tutorial is triggered when first manager is hired. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test_milestone_seed_20250929_074253.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_dismiss_tutorial_message (test_tutorial_system.TestTutorialSystem.test_dismiss_tutorial_message)
Test dismissing tutorial messages. ... ok
test_show_tutorial_message (test_tutorial_system.TestTutorialSystem.test_show_tutorial_message)
Test showing tutorial messages. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test_tutorial_seed_20250929_074253.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_tutorial_initialization (test_tutorial_system.TestTutorialSystem.test_tutorial_initialization)
Test that tutorial system initializes correctly for new players. ... ok
test_tutorial_message_not_shown_when_already_shown (test_tutorial_system.TestTutorialSystem.test_tutorial_message_not_shown_when_already_shown)
Test that tutorial messages are not shown again for the same milestone. ... ok
test_tutorial_message_not_shown_when_disabled (test_tutorial_system.TestTutorialSystem.test_tutorial_message_not_shown_when_disabled)
Test that tutorial messages are not shown when tutorial is disabled. ... ok
test_tutorial_settings_persistence (test_tutorial_system.TestTutorialSystem.test_tutorial_settings_persistence)
Test that tutorial settings are saved and loaded correctly. ... ok
test_button_click_detection (test_ui_layout_utils.TestUILayoutUtils.test_button_click_detection)
Test button click detection. ... ok
test_button_layout_properties (test_ui_layout_utils.TestUILayoutUtils.test_button_layout_properties)
Test ButtonLayout data class properties. ... ok
test_centered_button_calculation (test_ui_layout_utils.TestUILayoutUtils.test_centered_button_calculation)
Test centered button calculation. ... ok
test_convenience_functions (test_ui_layout_utils.TestUILayoutUtils.test_convenience_functions)
Test convenience layout functions. ... ok
test_different_layout_types (test_ui_layout_utils.TestUILayoutUtils.test_different_layout_types)
Test different menu layout configurations. ... ok
test_menu_button_calculation (test_ui_layout_utils.TestUILayoutUtils.test_menu_button_calculation)
Test standard menu button layout calculation. ... ok
test_responsive_layout (test_ui_layout_utils.TestUILayoutUtils.test_responsive_layout)
Test responsive layout calculations. ... ok
test_safe_margin_calculation (test_ui_layout_utils.TestUILayoutUtils.test_safe_margin_calculation)
Test safe margin calculation. ... ok
test_drag_constraints_basic (test_ui_overlap_prevention.TestOverlayDragConstraints.test_drag_constraints_basic)
Test basic drag constraint functionality. ... ok
test_different_screen_sizes (test_ui_overlap_prevention.TestUIOverlapPrevention.test_different_screen_sizes)
Test safe zone behavior with different screen sizes. ... ok
test_large_overlay_fallback_positioning (test_ui_overlap_prevention.TestUIOverlapPrevention.test_large_overlay_fallback_positioning)
Test that very large overlays fall back to centered positioning. ... ok
test_overlay_positioning_avoids_safe_zones (test_ui_overlap_prevention.TestUIOverlapPrevention.test_overlay_positioning_avoids_safe_zones)
Test that overlay positioning avoids intersecting with safe zones. ... ok
test_overlay_stays_within_screen_bounds (test_ui_overlap_prevention.TestUIOverlapPrevention.test_overlay_stays_within_screen_bounds)
Test that positioned overlays stay within screen boundaries. ... ok
test_safe_zones_cover_key_areas (test_ui_overlap_prevention.TestUIOverlapPrevention.test_safe_zones_cover_key_areas)
Test that safe zones cover key interactive areas. ... ok
test_safe_zones_defined (test_ui_overlap_prevention.TestUIOverlapPrevention.test_safe_zones_defined)
Test that safe zones are properly defined for common screen sizes. ... ok
test_extensible_transition_system (test_ui_transitions.TestUITransitionIntegration.test_extensible_transition_system)
Test that the transition system can handle different types of UI elements. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test_seed_20250929_074243.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_transition_triggered_on_upgrade_purchase (test_ui_transitions.TestUITransitionIntegration.test_transition_triggered_on_upgrade_purchase)
Test that purchasing an upgrade creates a transition. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test_seed_20250929_074255.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
DEBUG:pdoom_test_seed:Resource: money 1000 -> 800 (-200) [_add(money, -200)]
ok
test_create_upgrade_transition (test_ui_transitions.TestUITransitions.test_create_upgrade_transition)
Test that upgrade transitions are created correctly. ... ok
test_multiple_transitions (test_ui_transitions.TestUITransitions.test_multiple_transitions)
Test that multiple transitions can run simultaneously. ... ok
test_trail_fade_effect (test_ui_transitions.TestUITransitions.test_trail_fade_effect)
Test that trail points fade correctly. ... ok
test_transition_cleanup (test_ui_transitions.TestUITransitions.test_transition_cleanup)
Test that completed transitions are cleaned up properly. ... ok
test_transition_interpolation (test_ui_transitions.TestUITransitions.test_transition_interpolation)
Test that position interpolation works correctly. ... ok
test_transition_progress_advancement (test_ui_transitions.TestUITransitions.test_transition_progress_advancement)
Test that transitions advance correctly over time. ... ok
test_ui_transitions_initialized (test_ui_transitions.TestUITransitions.test_ui_transitions_initialized)
Test that UI transition system is properly initialized. ... ok
test_upgrade_icon_rect_calculation (test_ui_transitions.TestUITransitions.test_upgrade_icon_rect_calculation)
Test that upgrade icon rectangles are calculated correctly. ... ok
test_draw_overlay_defensive_logic (test_unbound_local_error_fix.TestUnboundLocalErrorFix.test_draw_overlay_defensive_logic)
Test that draw_overlay handles None values gracefully. ... ok
test_global_declarations_present (test_unbound_local_error_fix.TestUnboundLocalErrorFix.test_global_declarations_present)
Test that global declarations are present in main function. ... ok
test_main_function_can_reference_variables (test_unbound_local_error_fix.TestUnboundLocalErrorFix.test_main_function_can_reference_variables)
Test that variables can be referenced in main function logic. ... ok
test_options_menu_selection_no_crash (test_unbound_local_error_fix.TestUnboundLocalErrorFix.test_options_menu_selection_no_crash)
Test that selecting Options menu doesn't cause UnboundLocalError. ... ok
test_ui_overlay_variables_accessible (test_unbound_local_error_fix.TestUnboundLocalErrorFix.test_ui_overlay_variables_accessible)
Test that UI overlay variables can be accessed without UnboundLocalError. ... ok
test_game_over_state (test_unified_action_handler.TestEdgeCases.test_game_over_state)
Test that actions cannot be executed when game is over. ... ok
test_rapid_toggling (test_unified_action_handler.TestEdgeCases.test_rapid_toggling)
Test rapid selection and undo of the same action. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test_seed_20250929_074256.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_undo_most_recent_instance (test_unified_action_handler.TestEdgeCases.test_undo_most_recent_instance)
Test that undo removes the most recent instance of an action. ... FAIL
test_undoing_last_ap (test_unified_action_handler.TestEdgeCases.test_undoing_last_ap)
Test undoing when it's the last available action point. ... FAIL
test_no_sound_on_failure (test_unified_action_handler.TestSoundBehavior.test_no_sound_on_failure)
Test that play_sound is False for failed selections. ... ok
test_no_sound_on_undo (test_unified_action_handler.TestSoundBehavior.test_no_sound_on_undo)
Test that play_sound is False for undo operations. ... ok
test_sound_on_selection (test_unified_action_handler.TestSoundBehavior.test_sound_on_selection)
Test that play_sound is True for successful selections. ... ok
test_action_instance_tracking (test_unified_action_handler.TestUIButtonStates.test_action_instance_tracking)
Test that action instances are tracked correctly for UI. ... FAIL
test_selected_gameplay_action_instances_attribute (test_unified_action_handler.TestUIButtonStates.test_selected_gameplay_action_instances_attribute)
Test that selected_gameplay_action_instances attribute exists and is initialized. ... ok
test_action_instances_cleared_on_turn_end (test_unified_action_handler.TestUnifiedActionHandler.test_action_instances_cleared_on_turn_end)
Test that action instances are cleared at end of turn. ... DEBUG:pdoom_test_seed:Resource: money 100000 -> 99975 (-25) [_add(money, -25)]
ok
test_action_selection_insufficient_ap (test_unified_action_handler.TestUnifiedActionHandler.test_action_selection_insufficient_ap)
Test action selection when AP is insufficient. ... ok
test_action_selection_insufficient_money (test_unified_action_handler.TestUnifiedActionHandler.test_action_selection_insufficient_money)
Test action selection when money is insufficient. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test_seed_20250929_074257.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_action_selection_success (test_unified_action_handler.TestUnifiedActionHandler.test_action_selection_success)
Test successful action selection through unified handler. ... ok
test_action_undo_no_instance (test_unified_action_handler.TestUnifiedActionHandler.test_action_undo_no_instance)
Test undo when no instance of action exists. ... ok
test_action_undo_success (test_unified_action_handler.TestUnifiedActionHandler.test_action_undo_success)
Test successful action undo through unified handler. ... ok
test_delegation_in_unified_handler (test_unified_action_handler.TestUnifiedActionHandler.test_delegation_in_unified_handler)
Test that delegation works through unified handler. ... ok
test_invalid_action_index (test_unified_action_handler.TestUnifiedActionHandler.test_invalid_action_index)
Test handling of invalid action indices. ... ok
test_keyboard_shortcut_integration (test_unified_action_handler.TestUnifiedActionHandler.test_keyboard_shortcut_integration)
Test keyboard shortcuts use unified handler. ... ok
test_keyboard_shortcut_undo (test_unified_action_handler.TestUnifiedActionHandler.test_keyboard_shortcut_undo)
Test keyboard shortcut undo functionality. ... ok
test_multiple_action_instances (test_unified_action_handler.TestUnifiedActionHandler.test_multiple_action_instances)
Test selecting the same action multiple times. ... ok
test_upgrade_effects_initially_empty (test_upgrades.TestUpgradeInitialization.test_upgrade_effects_initially_empty)
Test that upgrade effects set starts empty. ... ok
test_upgrades_initially_not_purchased (test_upgrades.TestUpgradeInitialization.test_upgrades_initially_not_purchased)
Test that upgrades start as not purchased. ... C:\Users\gday\Documents\A Local Code\pdoom1\src\services\verbose_logging.py:123: ResourceWarning: unclosed file <_io.TextIOWrapper name='C:\\Users\\gday\\Documents\\A Local Code\\pdoom1\\logs\\game_test_seed_20250929_074258.log' mode='a' encoding='utf-8'>
  self.logger.handlers.clear()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_upgrades_loaded_correctly (test_upgrades.TestUpgradeInitialization.test_upgrades_loaded_correctly)
Test that upgrades are loaded from upgrades.py correctly. ... ok
test_can_purchase_upgrade_with_sufficient_money (test_upgrades.TestUpgradePurchasing.test_can_purchase_upgrade_with_sufficient_money)
Test that upgrades can be purchased if enough money is available. ... ok
test_cannot_purchase_already_purchased_upgrade (test_upgrades.TestUpgradePurchasing.test_cannot_purchase_already_purchased_upgrade)
Test that already purchased upgrades cannot be purchased again. ... ok
test_cannot_purchase_upgrade_with_insufficient_money (test_upgrades.TestUpgradePurchasing.test_cannot_purchase_upgrade_with_insufficient_money)
Test that upgrades cannot be purchased without enough money. ... ok
test_upgrade_effect_activation (test_upgrades.TestUpgradePurchasing.test_upgrade_effect_activation)
Test that purchased upgrades activate their effects correctly. ... ok
test_upgrade_success_messages (test_upgrades.TestUpgradePurchasing.test_upgrade_success_messages)
Test that correct success messages are generated for upgrade purchases. ... ok
test_get_logger_without_init_raises_error (test_verbose_logging.TestGlobalLoggingSystem.test_get_logger_without_init_raises_error)
Test that accessing logger before initialization raises error. ... ok
test_global_initialization (test_verbose_logging.TestGlobalLoggingSystem.test_global_initialization)
Test global logging initialization. ... ok
test_global_logger_functionality (test_verbose_logging.TestGlobalLoggingSystem.test_global_logger_functionality)
Test global logger works correctly. ... INFO:pdoom_global_func_test:Action: global_action ($50, 1AP) -> {'test': True}
ok
test_action_logging (test_verbose_logging.TestVerboseLogger.test_action_logging)
Test action logging functionality. ... INFO:pdoom_action_test:Action: test_action ($100, 1AP) -> {'success': True, 'resources_gained': 50}
ok
test_json_export (test_verbose_logging.TestVerboseLogger.test_json_export)
Test JSON export functionality. ... INFO:pdoom_json_test:Action: test_action ($100, 1AP) -> {'success': True}
ok
test_log_levels (test_verbose_logging.TestVerboseLogger.test_log_levels)
Test different log levels for human-readable output. ... INFO:pdoom_standard_test:Action: action ($10, 1AP) -> {}
INFO:pdoom_debug_test:Action: action ($10, 1AP) -> {}
DEBUG:pdoom_debug_test:RNG: randint({'min': 1, 'max': 100}) = 50 [ctx: test_context]
ok
test_logger_initialization (test_verbose_logging.TestVerboseLogger.test_logger_initialization)
Test logger initialization with different settings. ... ok
test_random_event_logging (test_verbose_logging.TestVerboseLogger.test_random_event_logging)
Test random event logging. ... ok
test_resource_change_logging (test_verbose_logging.TestVerboseLogger.test_resource_change_logging)
Test resource change logging. ... ok
test_concurrent_logging_safety (test_verbose_logging.TestVerboseLoggingEdgeCases.test_concurrent_logging_safety)
Test that logger handles rapid successive calls. ... INFO:pdoom_concurrent_test:Action: action_0 ($0, 1AP) -> {'iteration': 0}
INFO:pdoom_concurrent_test:Action: action_1 ($10, 1AP) -> {'iteration': 1}
INFO:pdoom_concurrent_test:Action: action_2 ($20, 1AP) -> {'iteration': 2}
INFO:pdoom_concurrent_test:Action: action_3 ($30, 1AP) -> {'iteration': 3}
INFO:pdoom_concurrent_test:Action: action_4 ($40, 1AP) -> {'iteration': 4}
INFO:pdoom_concurrent_test:Action: action_5 ($50, 1AP) -> {'iteration': 5}
INFO:pdoom_concurrent_test:Action: action_6 ($60, 1AP) -> {'iteration': 6}
INFO:pdoom_concurrent_test:Action: action_7 ($70, 1AP) -> {'iteration': 7}
INFO:pdoom_concurrent_test:Action: action_8 ($80, 1AP) -> {'iteration': 8}
INFO:pdoom_concurrent_test:Action: action_9 ($90, 1AP) -> {'iteration': 9}
INFO:pdoom_concurrent_test:Action: action_10 ($100, 1AP) -> {'iteration': 10}
INFO:pdoom_concurrent_test:Action: action_11 ($110, 1AP) -> {'iteration': 11}
INFO:pdoom_concurrent_test:Action: action_12 ($120, 1AP) -> {'iteration': 12}
INFO:pdoom_concurrent_test:Action: action_13 ($130, 1AP) -> {'iteration': 13}
INFO:pdoom_concurrent_test:Action: action_14 ($140, 1AP) -> {'iteration': 14}
INFO:pdoom_concurrent_test:Action: action_15 ($150, 1AP) -> {'iteration': 15}
INFO:pdoom_concurrent_test:Action: action_16 ($160, 1AP) -> {'iteration': 16}
INFO:pdoom_concurrent_test:Action: action_17 ($170, 1AP) -> {'iteration': 17}
INFO:pdoom_concurrent_test:Action: action_18 ($180, 1AP) -> {'iteration': 18}
INFO:pdoom_concurrent_test:Action: action_19 ($190, 1AP) -> {'iteration': 19}
INFO:pdoom_concurrent_test:Action: action_20 ($200, 1AP) -> {'iteration': 20}
INFO:pdoom_concurrent_test:Action: action_21 ($210, 1AP) -> {'iteration': 21}
INFO:pdoom_concurrent_test:Action: action_22 ($220, 1AP) -> {'iteration': 22}
INFO:pdoom_concurrent_test:Action: action_23 ($230, 1AP) -> {'iteration': 23}
INFO:pdoom_concurrent_test:Action: action_24 ($240, 1AP) -> {'iteration': 24}
INFO:pdoom_concurrent_test:Action: action_25 ($250, 1AP) -> {'iteration': 25}
INFO:pdoom_concurrent_test:Action: action_26 ($260, 1AP) -> {'iteration': 26}
INFO:pdoom_concurrent_test:Action: action_27 ($270, 1AP) -> {'iteration': 27}
INFO:pdoom_concurrent_test:Action: action_28 ($280, 1AP) -> {'iteration': 28}
INFO:pdoom_concurrent_test:Action: action_29 ($290, 1AP) -> {'iteration': 29}
INFO:pdoom_concurrent_test:Action: action_30 ($300, 1AP) -> {'iteration': 30}
INFO:pdoom_concurrent_test:Action: action_31 ($310, 1AP) -> {'iteration': 31}
INFO:pdoom_concurrent_test:Action: action_32 ($320, 1AP) -> {'iteration': 32}
INFO:pdoom_concurrent_test:Action: action_33 ($330, 1AP) -> {'iteration': 33}
INFO:pdoom_concurrent_test:Action: action_34 ($340, 1AP) -> {'iteration': 34}
INFO:pdoom_concurrent_test:Action: action_35 ($350, 1AP) -> {'iteration': 35}
INFO:pdoom_concurrent_test:Action: action_36 ($360, 1AP) -> {'iteration': 36}
INFO:pdoom_concurrent_test:Action: action_37 ($370, 1AP) -> {'iteration': 37}
INFO:pdoom_concurrent_test:Action: action_38 ($380, 1AP) -> {'iteration': 38}
INFO:pdoom_concurrent_test:Action: action_39 ($390, 1AP) -> {'iteration': 39}
INFO:pdoom_concurrent_test:Action: action_40 ($400, 1AP) -> {'iteration': 40}
INFO:pdoom_concurrent_test:Action: action_41 ($410, 1AP) -> {'iteration': 41}
INFO:pdoom_concurrent_test:Action: action_42 ($420, 1AP) -> {'iteration': 42}
INFO:pdoom_concurrent_test:Action: action_43 ($430, 1AP) -> {'iteration': 43}
INFO:pdoom_concurrent_test:Action: action_44 ($440, 1AP) -> {'iteration': 44}
INFO:pdoom_concurrent_test:Action: action_45 ($450, 1AP) -> {'iteration': 45}
INFO:pdoom_concurrent_test:Action: action_46 ($460, 1AP) -> {'iteration': 46}
INFO:pdoom_concurrent_test:Action: action_47 ($470, 1AP) -> {'iteration': 47}
INFO:pdoom_concurrent_test:Action: action_48 ($480, 1AP) -> {'iteration': 48}
INFO:pdoom_concurrent_test:Action: action_49 ($490, 1AP) -> {'iteration': 49}
INFO:pdoom_concurrent_test:Action: action_50 ($500, 1AP) -> {'iteration': 50}
INFO:pdoom_concurrent_test:Action: action_51 ($510, 1AP) -> {'iteration': 51}
INFO:pdoom_concurrent_test:Action: action_52 ($520, 1AP) -> {'iteration': 52}
INFO:pdoom_concurrent_test:Action: action_53 ($530, 1AP) -> {'iteration': 53}
INFO:pdoom_concurrent_test:Action: action_54 ($540, 1AP) -> {'iteration': 54}
INFO:pdoom_concurrent_test:Action: action_55 ($550, 1AP) -> {'iteration': 55}
INFO:pdoom_concurrent_test:Action: action_56 ($560, 1AP) -> {'iteration': 56}
INFO:pdoom_concurrent_test:Action: action_57 ($570, 1AP) -> {'iteration': 57}
INFO:pdoom_concurrent_test:Action: action_58 ($580, 1AP) -> {'iteration': 58}
INFO:pdoom_concurrent_test:Action: action_59 ($590, 1AP) -> {'iteration': 59}
INFO:pdoom_concurrent_test:Action: action_60 ($600, 1AP) -> {'iteration': 60}
INFO:pdoom_concurrent_test:Action: action_61 ($610, 1AP) -> {'iteration': 61}
INFO:pdoom_concurrent_test:Action: action_62 ($620, 1AP) -> {'iteration': 62}
INFO:pdoom_concurrent_test:Action: action_63 ($630, 1AP) -> {'iteration': 63}
INFO:pdoom_concurrent_test:Action: action_64 ($640, 1AP) -> {'iteration': 64}
INFO:pdoom_concurrent_test:Action: action_65 ($650, 1AP) -> {'iteration': 65}
INFO:pdoom_concurrent_test:Action: action_66 ($660, 1AP) -> {'iteration': 66}
INFO:pdoom_concurrent_test:Action: action_67 ($670, 1AP) -> {'iteration': 67}
INFO:pdoom_concurrent_test:Action: action_68 ($680, 1AP) -> {'iteration': 68}
INFO:pdoom_concurrent_test:Action: action_69 ($690, 1AP) -> {'iteration': 69}
INFO:pdoom_concurrent_test:Action: action_70 ($700, 1AP) -> {'iteration': 70}
INFO:pdoom_concurrent_test:Action: action_71 ($710, 1AP) -> {'iteration': 71}
INFO:pdoom_concurrent_test:Action: action_72 ($720, 1AP) -> {'iteration': 72}
INFO:pdoom_concurrent_test:Action: action_73 ($730, 1AP) -> {'iteration': 73}
INFO:pdoom_concurrent_test:Action: action_74 ($740, 1AP) -> {'iteration': 74}
INFO:pdoom_concurrent_test:Action: action_75 ($750, 1AP) -> {'iteration': 75}
INFO:pdoom_concurrent_test:Action: action_76 ($760, 1AP) -> {'iteration': 76}
INFO:pdoom_concurrent_test:Action: action_77 ($770, 1AP) -> {'iteration': 77}
INFO:pdoom_concurrent_test:Action: action_78 ($780, 1AP) -> {'iteration': 78}
INFO:pdoom_concurrent_test:Action: action_79 ($790, 1AP) -> {'iteration': 79}
INFO:pdoom_concurrent_test:Action: action_80 ($800, 1AP) -> {'iteration': 80}
INFO:pdoom_concurrent_test:Action: action_81 ($810, 1AP) -> {'iteration': 81}
INFO:pdoom_concurrent_test:Action: action_82 ($820, 1AP) -> {'iteration': 82}
INFO:pdoom_concurrent_test:Action: action_83 ($830, 1AP) -> {'iteration': 83}
INFO:pdoom_concurrent_test:Action: action_84 ($840, 1AP) -> {'iteration': 84}
INFO:pdoom_concurrent_test:Action: action_85 ($850, 1AP) -> {'iteration': 85}
INFO:pdoom_concurrent_test:Action: action_86 ($860, 1AP) -> {'iteration': 86}
INFO:pdoom_concurrent_test:Action: action_87 ($870, 1AP) -> {'iteration': 87}
INFO:pdoom_concurrent_test:Action: action_88 ($880, 1AP) -> {'iteration': 88}
INFO:pdoom_concurrent_test:Action: action_89 ($890, 1AP) -> {'iteration': 89}
INFO:pdoom_concurrent_test:Action: action_90 ($900, 1AP) -> {'iteration': 90}
INFO:pdoom_concurrent_test:Action: action_91 ($910, 1AP) -> {'iteration': 91}
INFO:pdoom_concurrent_test:Action: action_92 ($920, 1AP) -> {'iteration': 92}
INFO:pdoom_concurrent_test:Action: action_93 ($930, 1AP) -> {'iteration': 93}
INFO:pdoom_concurrent_test:Action: action_94 ($940, 1AP) -> {'iteration': 94}
INFO:pdoom_concurrent_test:Action: action_95 ($950, 1AP) -> {'iteration': 95}
INFO:pdoom_concurrent_test:Action: action_96 ($960, 1AP) -> {'iteration': 96}
INFO:pdoom_concurrent_test:Action: action_97 ($970, 1AP) -> {'iteration': 97}
INFO:pdoom_concurrent_test:Action: action_98 ($980, 1AP) -> {'iteration': 98}
INFO:pdoom_concurrent_test:Action: action_99 ($990, 1AP) -> {'iteration': 99}
ok
test_large_data_logging (test_verbose_logging.TestVerboseLoggingEdgeCases.test_large_data_logging)
Test logging with large data structures. ... INFO:pdoom_large_test:Action: large_action ($100, 1AP) -> {'key_0': 'value_0', 'key_1': 'value_1', 'key_2': 'value_2', 'key_3': 'value_3', 'key_4': 'value_4', 'key_5': 'value_5', 'key_6': 'value_6', 'key_7': 'value_7', 'key_8': 'value_8', 'key_9': 'value_9', 'key_10': 'value_10', 'key_11': 'value_11', 'key_12': 'value_12', 'key_13': 'value_13', 'key_14': 'value_14', 'key_15': 'value_15', 'key_16': 'value_16', 'key_17': 'value_17', 'key_18': 'value_18', 'key_19': 'value_19', 'key_20': 'value_20', 'key_21': 'value_21', 'key_22': 'value_22', 'key_23': 'value_23', 'key_24': 'value_24', 'key_25': 'value_25', 'key_26': 'value_26', 'key_27': 'value_27', 'key_28': 'value_28', 'key_29': 'value_29', 'key_30': 'value_30', 'key_31': 'value_31', 'key_32': 'value_32', 'key_33': 'value_33', 'key_34': 'value_34', 'key_35': 'value_35', 'key_36': 'value_36', 'key_37': 'value_37', 'key_38': 'value_38', 'key_39': 'value_39', 'key_40': 'value_40', 'key_41': 'value_41', 'key_42': 'value_42', 'key_43': 'value_43', 'key_44': 'value_44', 'key_45': 'value_45', 'key_46': 'value_46', 'key_47': 'value_47', 'key_48': 'value_48', 'key_49': 'value_49', 'key_50': 'value_50', 'key_51': 'value_51', 'key_52': 'value_52', 'key_53': 'value_53', 'key_54': 'value_54', 'key_55': 'value_55', 'key_56': 'value_56', 'key_57': 'value_57', 'key_58': 'value_58', 'key_59': 'value_59', 'key_60': 'value_60', 'key_61': 'value_61', 'key_62': 'value_62', 'key_63': 'value_63', 'key_64': 'value_64', 'key_65': 'value_65', 'key_66': 'value_66', 'key_67': 'value_67', 'key_68': 'value_68', 'key_69': 'value_69', 'key_70': 'value_70', 'key_71': 'value_71', 'key_72': 'value_72', 'key_73': 'value_73', 'key_74': 'value_74', 'key_75': 'value_75', 'key_76': 'value_76', 'key_77': 'value_77', 'key_78': 'value_78', 'key_79': 'value_79', 'key_80': 'value_80', 'key_81': 'value_81', 'key_82': 'value_82', 'key_83': 'value_83', 'key_84': 'value_84', 'key_85': 'value_85', 'key_86': 'value_86', 'key_87': 'value_87', 'key_88': 'value_88', 'key_89': 'value_89', 'key_90': 'value_90', 'key_91': 'value_91', 'key_92': 'value_92', 'key_93': 'value_93', 'key_94': 'value_94', 'key_95': 'value_95', 'key_96': 'value_96', 'key_97': 'value_97', 'key_98': 'value_98', 'key_99': 'value_99', 'key_100': 'value_100', 'key_101': 'value_101', 'key_102': 'value_102', 'key_103': 'value_103', 'key_104': 'value_104', 'key_105': 'value_105', 'key_106': 'value_106', 'key_107': 'value_107', 'key_108': 'value_108', 'key_109': 'value_109', 'key_110': 'value_110', 'key_111': 'value_111', 'key_112': 'value_112', 'key_113': 'value_113', 'key_114': 'value_114', 'key_115': 'value_115', 'key_116': 'value_116', 'key_117': 'value_117', 'key_118': 'value_118', 'key_119': 'value_119', 'key_120': 'value_120', 'key_121': 'value_121', 'key_122': 'value_122', 'key_123': 'value_123', 'key_124': 'value_124', 'key_125': 'value_125', 'key_126': 'value_126', 'key_127': 'value_127', 'key_128': 'value_128', 'key_129': 'value_129', 'key_130': 'value_130', 'key_131': 'value_131', 'key_132': 'value_132', 'key_133': 'value_133', 'key_134': 'value_134', 'key_135': 'value_135', 'key_136': 'value_136', 'key_137': 'value_137', 'key_138': 'value_138', 'key_139': 'value_139', 'key_140': 'value_140', 'key_141': 'value_141', 'key_142': 'value_142', 'key_143': 'value_143', 'key_144': 'value_144', 'key_145': 'value_145', 'key_146': 'value_146', 'key_147': 'value_147', 'key_148': 'value_148', 'key_149': 'value_149', 'key_150': 'value_150', 'key_151': 'value_151', 'key_152': 'value_152', 'key_153': 'value_153', 'key_154': 'value_154', 'key_155': 'value_155', 'key_156': 'value_156', 'key_157': 'value_157', 'key_158': 'value_158', 'key_159': 'value_159', 'key_160': 'value_160', 'key_161': 'value_161', 'key_162': 'value_162', 'key_163': 'value_163', 'key_164': 'value_164', 'key_165': 'value_165', 'key_166': 'value_166', 'key_167': 'value_167', 'key_168': 'value_168', 'key_169': 'value_169', 'key_170': 'value_170', 'key_171': 'value_171', 'key_172': 'value_172', 'key_173': 'value_173', 'key_174': 'value_174', 'key_175': 'value_175', 'key_176': 'value_176', 'key_177': 'value_177', 'key_178': 'value_178', 'key_179': 'value_179', 'key_180': 'value_180', 'key_181': 'value_181', 'key_182': 'value_182', 'key_183': 'value_183', 'key_184': 'value_184', 'key_185': 'value_185', 'key_186': 'value_186', 'key_187': 'value_187', 'key_188': 'value_188', 'key_189': 'value_189', 'key_190': 'value_190', 'key_191': 'value_191', 'key_192': 'value_192', 'key_193': 'value_193', 'key_194': 'value_194', 'key_195': 'value_195', 'key_196': 'value_196', 'key_197': 'value_197', 'key_198': 'value_198', 'key_199': 'value_199', 'key_200': 'value_200', 'key_201': 'value_201', 'key_202': 'value_202', 'key_203': 'value_203', 'key_204': 'value_204', 'key_205': 'value_205', 'key_206': 'value_206', 'key_207': 'value_207', 'key_208': 'value_208', 'key_209': 'value_209', 'key_210': 'value_210', 'key_211': 'value_211', 'key_212': 'value_212', 'key_213': 'value_213', 'key_214': 'value_214', 'key_215': 'value_215', 'key_216': 'value_216', 'key_217': 'value_217', 'key_218': 'value_218', 'key_219': 'value_219', 'key_220': 'value_220', 'key_221': 'value_221', 'key_222': 'value_222', 'key_223': 'value_223', 'key_224': 'value_224', 'key_225': 'value_225', 'key_226': 'value_226', 'key_227': 'value_227', 'key_228': 'value_228', 'key_229': 'value_229', 'key_230': 'value_230', 'key_231': 'value_231', 'key_232': 'value_232', 'key_233': 'value_233', 'key_234': 'value_234', 'key_235': 'value_235', 'key_236': 'value_236', 'key_237': 'value_237', 'key_238': 'value_238', 'key_239': 'value_239', 'key_240': 'value_240', 'key_241': 'value_241', 'key_242': 'value_242', 'key_243': 'value_243', 'key_244': 'value_244', 'key_245': 'value_245', 'key_246': 'value_246', 'key_247': 'value_247', 'key_248': 'value_248', 'key_249': 'value_249', 'key_250': 'value_250', 'key_251': 'value_251', 'key_252': 'value_252', 'key_253': 'value_253', 'key_254': 'value_254', 'key_255': 'value_255', 'key_256': 'value_256', 'key_257': 'value_257', 'key_258': 'value_258', 'key_259': 'value_259', 'key_260': 'value_260', 'key_261': 'value_261', 'key_262': 'value_262', 'key_263': 'value_263', 'key_264': 'value_264', 'key_265': 'value_265', 'key_266': 'value_266', 'key_267': 'value_267', 'key_268': 'value_268', 'key_269': 'value_269', 'key_270': 'value_270', 'key_271': 'value_271', 'key_272': 'value_272', 'key_273': 'value_273', 'key_274': 'value_274', 'key_275': 'value_275', 'key_276': 'value_276', 'key_277': 'value_277', 'key_278': 'value_278', 'key_279': 'value_279', 'key_280': 'value_280', 'key_281': 'value_281', 'key_282': 'value_282', 'key_283': 'value_283', 'key_284': 'value_284', 'key_285': 'value_285', 'key_286': 'value_286', 'key_287': 'value_287', 'key_288': 'value_288', 'key_289': 'value_289', 'key_290': 'value_290', 'key_291': 'value_291', 'key_292': 'value_292', 'key_293': 'value_293', 'key_294': 'value_294', 'key_295': 'value_295', 'key_296': 'value_296', 'key_297': 'value_297', 'key_298': 'value_298', 'key_299': 'value_299', 'key_300': 'value_300', 'key_301': 'value_301', 'key_302': 'value_302', 'key_303': 'value_303', 'key_304': 'value_304', 'key_305': 'value_305', 'key_306': 'value_306', 'key_307': 'value_307', 'key_308': 'value_308', 'key_309': 'value_309', 'key_310': 'value_310', 'key_311': 'value_311', 'key_312': 'value_312', 'key_313': 'value_313', 'key_314': 'value_314', 'key_315': 'value_315', 'key_316': 'value_316', 'key_317': 'value_317', 'key_318': 'value_318', 'key_319': 'value_319', 'key_320': 'value_320', 'key_321': 'value_321', 'key_322': 'value_322', 'key_323': 'value_323', 'key_324': 'value_324', 'key_325': 'value_325', 'key_326': 'value_326', 'key_327': 'value_327', 'key_328': 'value_328', 'key_329': 'value_329', 'key_330': 'value_330', 'key_331': 'value_331', 'key_332': 'value_332', 'key_333': 'value_333', 'key_334': 'value_334', 'key_335': 'value_335', 'key_336': 'value_336', 'key_337': 'value_337', 'key_338': 'value_338', 'key_339': 'value_339', 'key_340': 'value_340', 'key_341': 'value_341', 'key_342': 'value_342', 'key_343': 'value_343', 'key_344': 'value_344', 'key_345': 'value_345', 'key_346': 'value_346', 'key_347': 'value_347', 'key_348': 'value_348', 'key_349': 'value_349', 'key_350': 'value_350', 'key_351': 'value_351', 'key_352': 'value_352', 'key_353': 'value_353', 'key_354': 'value_354', 'key_355': 'value_355', 'key_356': 'value_356', 'key_357': 'value_357', 'key_358': 'value_358', 'key_359': 'value_359', 'key_360': 'value_360', 'key_361': 'value_361', 'key_362': 'value_362', 'key_363': 'value_363', 'key_364': 'value_364', 'key_365': 'value_365', 'key_366': 'value_366', 'key_367': 'value_367', 'key_368': 'value_368', 'key_369': 'value_369', 'key_370': 'value_370', 'key_371': 'value_371', 'key_372': 'value_372', 'key_373': 'value_373', 'key_374': 'value_374', 'key_375': 'value_375', 'key_376': 'value_376', 'key_377': 'value_377', 'key_378': 'value_378', 'key_379': 'value_379', 'key_380': 'value_380', 'key_381': 'value_381', 'key_382': 'value_382', 'key_383': 'value_383', 'key_384': 'value_384', 'key_385': 'value_385', 'key_386': 'value_386', 'key_387': 'value_387', 'key_388': 'value_388', 'key_389': 'value_389', 'key_390': 'value_390', 'key_391': 'value_391', 'key_392': 'value_392', 'key_393': 'value_393', 'key_394': 'value_394', 'key_395': 'value_395', 'key_396': 'value_396', 'key_397': 'value_397', 'key_398': 'value_398', 'key_399': 'value_399', 'key_400': 'value_400', 'key_401': 'value_401', 'key_402': 'value_402', 'key_403': 'value_403', 'key_404': 'value_404', 'key_405': 'value_405', 'key_406': 'value_406', 'key_407': 'value_407', 'key_408': 'value_408', 'key_409': 'value_409', 'key_410': 'value_410', 'key_411': 'value_411', 'key_412': 'value_412', 'key_413': 'value_413', 'key_414': 'value_414', 'key_415': 'value_415', 'key_416': 'value_416', 'key_417': 'value_417', 'key_418': 'value_418', 'key_419': 'value_419', 'key_420': 'value_420', 'key_421': 'value_421', 'key_422': 'value_422', 'key_423': 'value_423', 'key_424': 'value_424', 'key_425': 'value_425', 'key_426': 'value_426', 'key_427': 'value_427', 'key_428': 'value_428', 'key_429': 'value_429', 'key_430': 'value_430', 'key_431': 'value_431', 'key_432': 'value_432', 'key_433': 'value_433', 'key_434': 'value_434', 'key_435': 'value_435', 'key_436': 'value_436', 'key_437': 'value_437', 'key_438': 'value_438', 'key_439': 'value_439', 'key_440': 'value_440', 'key_441': 'value_441', 'key_442': 'value_442', 'key_443': 'value_443', 'key_444': 'value_444', 'key_445': 'value_445', 'key_446': 'value_446', 'key_447': 'value_447', 'key_448': 'value_448', 'key_449': 'value_449', 'key_450': 'value_450', 'key_451': 'value_451', 'key_452': 'value_452', 'key_453': 'value_453', 'key_454': 'value_454', 'key_455': 'value_455', 'key_456': 'value_456', 'key_457': 'value_457', 'key_458': 'value_458', 'key_459': 'value_459', 'key_460': 'value_460', 'key_461': 'value_461', 'key_462': 'value_462', 'key_463': 'value_463', 'key_464': 'value_464', 'key_465': 'value_465', 'key_466': 'value_466', 'key_467': 'value_467', 'key_468': 'value_468', 'key_469': 'value_469', 'key_470': 'value_470', 'key_471': 'value_471', 'key_472': 'value_472', 'key_473': 'value_473', 'key_474': 'value_474', 'key_475': 'value_475', 'key_476': 'value_476', 'key_477': 'value_477', 'key_478': 'value_478', 'key_479': 'value_479', 'key_480': 'value_480', 'key_481': 'value_481', 'key_482': 'value_482', 'key_483': 'value_483', 'key_484': 'value_484', 'key_485': 'value_485', 'key_486': 'value_486', 'key_487': 'value_487', 'key_488': 'value_488', 'key_489': 'value_489', 'key_490': 'value_490', 'key_491': 'value_491', 'key_492': 'value_492', 'key_493': 'value_493', 'key_494': 'value_494', 'key_495': 'value_495', 'key_496': 'value_496', 'key_497': 'value_497', 'key_498': 'value_498', 'key_499': 'value_499', 'key_500': 'value_500', 'key_501': 'value_501', 'key_502': 'value_502', 'key_503': 'value_503', 'key_504': 'value_504', 'key_505': 'value_505', 'key_506': 'value_506', 'key_507': 'value_507', 'key_508': 'value_508', 'key_509': 'value_509', 'key_510': 'value_510', 'key_511': 'value_511', 'key_512': 'value_512', 'key_513': 'value_513', 'key_514': 'value_514', 'key_515': 'value_515', 'key_516': 'value_516', 'key_517': 'value_517', 'key_518': 'value_518', 'key_519': 'value_519', 'key_520': 'value_520', 'key_521': 'value_521', 'key_522': 'value_522', 'key_523': 'value_523', 'key_524': 'value_524', 'key_525': 'value_525', 'key_526': 'value_526', 'key_527': 'value_527', 'key_528': 'value_528', 'key_529': 'value_529', 'key_530': 'value_530', 'key_531': 'value_531', 'key_532': 'value_532', 'key_533': 'value_533', 'key_534': 'value_534', 'key_535': 'value_535', 'key_536': 'value_536', 'key_537': 'value_537', 'key_538': 'value_538', 'key_539': 'value_539', 'key_540': 'value_540', 'key_541': 'value_541', 'key_542': 'value_542', 'key_543': 'value_543', 'key_544': 'value_544', 'key_545': 'value_545', 'key_546': 'value_546', 'key_547': 'value_547', 'key_548': 'value_548', 'key_549': 'value_549', 'key_550': 'value_550', 'key_551': 'value_551', 'key_552': 'value_552', 'key_553': 'value_553', 'key_554': 'value_554', 'key_555': 'value_555', 'key_556': 'value_556', 'key_557': 'value_557', 'key_558': 'value_558', 'key_559': 'value_559', 'key_560': 'value_560', 'key_561': 'value_561', 'key_562': 'value_562', 'key_563': 'value_563', 'key_564': 'value_564', 'key_565': 'value_565', 'key_566': 'value_566', 'key_567': 'value_567', 'key_568': 'value_568', 'key_569': 'value_569', 'key_570': 'value_570', 'key_571': 'value_571', 'key_572': 'value_572', 'key_573': 'value_573', 'key_574': 'value_574', 'key_575': 'value_575', 'key_576': 'value_576', 'key_577': 'value_577', 'key_578': 'value_578', 'key_579': 'value_579', 'key_580': 'value_580', 'key_581': 'value_581', 'key_582': 'value_582', 'key_583': 'value_583', 'key_584': 'value_584', 'key_585': 'value_585', 'key_586': 'value_586', 'key_587': 'value_587', 'key_588': 'value_588', 'key_589': 'value_589', 'key_590': 'value_590', 'key_591': 'value_591', 'key_592': 'value_592', 'key_593': 'value_593', 'key_594': 'value_594', 'key_595': 'value_595', 'key_596': 'value_596', 'key_597': 'value_597', 'key_598': 'value_598', 'key_599': 'value_599', 'key_600': 'value_600', 'key_601': 'value_601', 'key_602': 'value_602', 'key_603': 'value_603', 'key_604': 'value_604', 'key_605': 'value_605', 'key_606': 'value_606', 'key_607': 'value_607', 'key_608': 'value_608', 'key_609': 'value_609', 'key_610': 'value_610', 'key_611': 'value_611', 'key_612': 'value_612', 'key_613': 'value_613', 'key_614': 'value_614', 'key_615': 'value_615', 'key_616': 'value_616', 'key_617': 'value_617', 'key_618': 'value_618', 'key_619': 'value_619', 'key_620': 'value_620', 'key_621': 'value_621', 'key_622': 'value_622', 'key_623': 'value_623', 'key_624': 'value_624', 'key_625': 'value_625', 'key_626': 'value_626', 'key_627': 'value_627', 'key_628': 'value_628', 'key_629': 'value_629', 'key_630': 'value_630', 'key_631': 'value_631', 'key_632': 'value_632', 'key_633': 'value_633', 'key_634': 'value_634', 'key_635': 'value_635', 'key_636': 'value_636', 'key_637': 'value_637', 'key_638': 'value_638', 'key_639': 'value_639', 'key_640': 'value_640', 'key_641': 'value_641', 'key_642': 'value_642', 'key_643': 'value_643', 'key_644': 'value_644', 'key_645': 'value_645', 'key_646': 'value_646', 'key_647': 'value_647', 'key_648': 'value_648', 'key_649': 'value_649', 'key_650': 'value_650', 'key_651': 'value_651', 'key_652': 'value_652', 'key_653': 'value_653', 'key_654': 'value_654', 'key_655': 'value_655', 'key_656': 'value_656', 'key_657': 'value_657', 'key_658': 'value_658', 'key_659': 'value_659', 'key_660': 'value_660', 'key_661': 'value_661', 'key_662': 'value_662', 'key_663': 'value_663', 'key_664': 'value_664', 'key_665': 'value_665', 'key_666': 'value_666', 'key_667': 'value_667', 'key_668': 'value_668', 'key_669': 'value_669', 'key_670': 'value_670', 'key_671': 'value_671', 'key_672': 'value_672', 'key_673': 'value_673', 'key_674': 'value_674', 'key_675': 'value_675', 'key_676': 'value_676', 'key_677': 'value_677', 'key_678': 'value_678', 'key_679': 'value_679', 'key_680': 'value_680', 'key_681': 'value_681', 'key_682': 'value_682', 'key_683': 'value_683', 'key_684': 'value_684', 'key_685': 'value_685', 'key_686': 'value_686', 'key_687': 'value_687', 'key_688': 'value_688', 'key_689': 'value_689', 'key_690': 'value_690', 'key_691': 'value_691', 'key_692': 'value_692', 'key_693': 'value_693', 'key_694': 'value_694', 'key_695': 'value_695', 'key_696': 'value_696', 'key_697': 'value_697', 'key_698': 'value_698', 'key_699': 'value_699', 'key_700': 'value_700', 'key_701': 'value_701', 'key_702': 'value_702', 'key_703': 'value_703', 'key_704': 'value_704', 'key_705': 'value_705', 'key_706': 'value_706', 'key_707': 'value_707', 'key_708': 'value_708', 'key_709': 'value_709', 'key_710': 'value_710', 'key_711': 'value_711', 'key_712': 'value_712', 'key_713': 'value_713', 'key_714': 'value_714', 'key_715': 'value_715', 'key_716': 'value_716', 'key_717': 'value_717', 'key_718': 'value_718', 'key_719': 'value_719', 'key_720': 'value_720', 'key_721': 'value_721', 'key_722': 'value_722', 'key_723': 'value_723', 'key_724': 'value_724', 'key_725': 'value_725', 'key_726': 'value_726', 'key_727': 'value_727', 'key_728': 'value_728', 'key_729': 'value_729', 'key_730': 'value_730', 'key_731': 'value_731', 'key_732': 'value_732', 'key_733': 'value_733', 'key_734': 'value_734', 'key_735': 'value_735', 'key_736': 'value_736', 'key_737': 'value_737', 'key_738': 'value_738', 'key_739': 'value_739', 'key_740': 'value_740', 'key_741': 'value_741', 'key_742': 'value_742', 'key_743': 'value_743', 'key_744': 'value_744', 'key_745': 'value_745', 'key_746': 'value_746', 'key_747': 'value_747', 'key_748': 'value_748', 'key_749': 'value_749', 'key_750': 'value_750', 'key_751': 'value_751', 'key_752': 'value_752', 'key_753': 'value_753', 'key_754': 'value_754', 'key_755': 'value_755', 'key_756': 'value_756', 'key_757': 'value_757', 'key_758': 'value_758', 'key_759': 'value_759', 'key_760': 'value_760', 'key_761': 'value_761', 'key_762': 'value_762', 'key_763': 'value_763', 'key_764': 'value_764', 'key_765': 'value_765', 'key_766': 'value_766', 'key_767': 'value_767', 'key_768': 'value_768', 'key_769': 'value_769', 'key_770': 'value_770', 'key_771': 'value_771', 'key_772': 'value_772', 'key_773': 'value_773', 'key_774': 'value_774', 'key_775': 'value_775', 'key_776': 'value_776', 'key_777': 'value_777', 'key_778': 'value_778', 'key_779': 'value_779', 'key_780': 'value_780', 'key_781': 'value_781', 'key_782': 'value_782', 'key_783': 'value_783', 'key_784': 'value_784', 'key_785': 'value_785', 'key_786': 'value_786', 'key_787': 'value_787', 'key_788': 'value_788', 'key_789': 'value_789', 'key_790': 'value_790', 'key_791': 'value_791', 'key_792': 'value_792', 'key_793': 'value_793', 'key_794': 'value_794', 'key_795': 'value_795', 'key_796': 'value_796', 'key_797': 'value_797', 'key_798': 'value_798', 'key_799': 'value_799', 'key_800': 'value_800', 'key_801': 'value_801', 'key_802': 'value_802', 'key_803': 'value_803', 'key_804': 'value_804', 'key_805': 'value_805', 'key_806': 'value_806', 'key_807': 'value_807', 'key_808': 'value_808', 'key_809': 'value_809', 'key_810': 'value_810', 'key_811': 'value_811', 'key_812': 'value_812', 'key_813': 'value_813', 'key_814': 'value_814', 'key_815': 'value_815', 'key_816': 'value_816', 'key_817': 'value_817', 'key_818': 'value_818', 'key_819': 'value_819', 'key_820': 'value_820', 'key_821': 'value_821', 'key_822': 'value_822', 'key_823': 'value_823', 'key_824': 'value_824', 'key_825': 'value_825', 'key_826': 'value_826', 'key_827': 'value_827', 'key_828': 'value_828', 'key_829': 'value_829', 'key_830': 'value_830', 'key_831': 'value_831', 'key_832': 'value_832', 'key_833': 'value_833', 'key_834': 'value_834', 'key_835': 'value_835', 'key_836': 'value_836', 'key_837': 'value_837', 'key_838': 'value_838', 'key_839': 'value_839', 'key_840': 'value_840', 'key_841': 'value_841', 'key_842': 'value_842', 'key_843': 'value_843', 'key_844': 'value_844', 'key_845': 'value_845', 'key_846': 'value_846', 'key_847': 'value_847', 'key_848': 'value_848', 'key_849': 'value_849', 'key_850': 'value_850', 'key_851': 'value_851', 'key_852': 'value_852', 'key_853': 'value_853', 'key_854': 'value_854', 'key_855': 'value_855', 'key_856': 'value_856', 'key_857': 'value_857', 'key_858': 'value_858', 'key_859': 'value_859', 'key_860': 'value_860', 'key_861': 'value_861', 'key_862': 'value_862', 'key_863': 'value_863', 'key_864': 'value_864', 'key_865': 'value_865', 'key_866': 'value_866', 'key_867': 'value_867', 'key_868': 'value_868', 'key_869': 'value_869', 'key_870': 'value_870', 'key_871': 'value_871', 'key_872': 'value_872', 'key_873': 'value_873', 'key_874': 'value_874', 'key_875': 'value_875', 'key_876': 'value_876', 'key_877': 'value_877', 'key_878': 'value_878', 'key_879': 'value_879', 'key_880': 'value_880', 'key_881': 'value_881', 'key_882': 'value_882', 'key_883': 'value_883', 'key_884': 'value_884', 'key_885': 'value_885', 'key_886': 'value_886', 'key_887': 'value_887', 'key_888': 'value_888', 'key_889': 'value_889', 'key_890': 'value_890', 'key_891': 'value_891', 'key_892': 'value_892', 'key_893': 'value_893', 'key_894': 'value_894', 'key_895': 'value_895', 'key_896': 'value_896', 'key_897': 'value_897', 'key_898': 'value_898', 'key_899': 'value_899', 'key_900': 'value_900', 'key_901': 'value_901', 'key_902': 'value_902', 'key_903': 'value_903', 'key_904': 'value_904', 'key_905': 'value_905', 'key_906': 'value_906', 'key_907': 'value_907', 'key_908': 'value_908', 'key_909': 'value_909', 'key_910': 'value_910', 'key_911': 'value_911', 'key_912': 'value_912', 'key_913': 'value_913', 'key_914': 'value_914', 'key_915': 'value_915', 'key_916': 'value_916', 'key_917': 'value_917', 'key_918': 'value_918', 'key_919': 'value_919', 'key_920': 'value_920', 'key_921': 'value_921', 'key_922': 'value_922', 'key_923': 'value_923', 'key_924': 'value_924', 'key_925': 'value_925', 'key_926': 'value_926', 'key_927': 'value_927', 'key_928': 'value_928', 'key_929': 'value_929', 'key_930': 'value_930', 'key_931': 'value_931', 'key_932': 'value_932', 'key_933': 'value_933', 'key_934': 'value_934', 'key_935': 'value_935', 'key_936': 'value_936', 'key_937': 'value_937', 'key_938': 'value_938', 'key_939': 'value_939', 'key_940': 'value_940', 'key_941': 'value_941', 'key_942': 'value_942', 'key_943': 'value_943', 'key_944': 'value_944', 'key_945': 'value_945', 'key_946': 'value_946', 'key_947': 'value_947', 'key_948': 'value_948', 'key_949': 'value_949', 'key_950': 'value_950', 'key_951': 'value_951', 'key_952': 'value_952', 'key_953': 'value_953', 'key_954': 'value_954', 'key_955': 'value_955', 'key_956': 'value_956', 'key_957': 'value_957', 'key_958': 'value_958', 'key_959': 'value_959', 'key_960': 'value_960', 'key_961': 'value_961', 'key_962': 'value_962', 'key_963': 'value_963', 'key_964': 'value_964', 'key_965': 'value_965', 'key_966': 'value_966', 'key_967': 'value_967', 'key_968': 'value_968', 'key_969': 'value_969', 'key_970': 'value_970', 'key_971': 'value_971', 'key_972': 'value_972', 'key_973': 'value_973', 'key_974': 'value_974', 'key_975': 'value_975', 'key_976': 'value_976', 'key_977': 'value_977', 'key_978': 'value_978', 'key_979': 'value_979', 'key_980': 'value_980', 'key_981': 'value_981', 'key_982': 'value_982', 'key_983': 'value_983', 'key_984': 'value_984', 'key_985': 'value_985', 'key_986': 'value_986', 'key_987': 'value_987', 'key_988': 'value_988', 'key_989': 'value_989', 'key_990': 'value_990', 'key_991': 'value_991', 'key_992': 'value_992', 'key_993': 'value_993', 'key_994': 'value_994', 'key_995': 'value_995', 'key_996': 'value_996', 'key_997': 'value_997', 'key_998': 'value_998', 'key_999': 'value_999'}
ok
test_logging_with_none_values (test_verbose_logging.TestVerboseLoggingEdgeCases.test_logging_with_none_values)
Test logging with None/empty values. ... INFO:pdoom_none_test:Action: test ($0, 0AP) -> None
ok
test_memory_efficiency (test_verbose_logging.TestVerboseLoggingEdgeCases.test_memory_efficiency)
Test that logger stores data as expected. ... ok
test_special_characters_in_data (test_verbose_logging.TestVerboseLoggingEdgeCases.test_special_characters_in_data)
Test logging with special characters. ... INFO:pdoom_special_test:Action: special_action ($100, 1AP) -> {'unicode': '????', 'special': '!@#$%^&*()', 'newlines': 'line1\nline2\nline3', 'quotes': 'This has 'quotes' in it'}
ok
test_changelog_mentions_correct_version (test_version.TestVersionConsistency.test_changelog_mentions_correct_version)
Test that CHANGELOG.md mentions the current version. ... FAIL
test_release_workflow_version_validation (test_version.TestVersionConsistency.test_release_workflow_version_validation)
Test that release workflow has version validation. ... ok
test_version_in_main_window_title (test_version.TestVersionConsistency.test_version_in_main_window_title)
Test that main.py uses the correct version in window title. ... ok
test_game_logger_custom_version (test_version.TestVersionIntegration.test_game_logger_custom_version)
Test that GameLogger accepts custom version. ... ok
test_game_logger_uses_current_version (test_version.TestVersionIntegration.test_game_logger_uses_current_version)
Test that GameLogger defaults to current version. ... ok
test_game_state_logger_integration (test_version.TestVersionIntegration.test_game_state_logger_integration)
Test that GameState's logger uses correct version. ... ok
test_version_components_match (test_version.TestVersionSemantics.test_version_components_match)
Test that version string matches component constants. ... ok
test_version_is_semantic (test_version.TestVersionSemantics.test_version_is_semantic)
Test that version follows SemVer format. ... ok
test_get_display_version (test_version.TestVersionSystem.test_get_display_version)
Test get_display_version() function. ... ok
test_get_version (test_version.TestVersionSystem.test_get_version)
Test get_version() function. ... ok
test_get_version_info (test_version.TestVersionSystem.test_get_version_info)
Test get_version_info() function returns complete info. ... ok
test_version_constants (test_version.TestVersionSystem.test_version_constants)
Test that version constants are properly defined. ... ok
test_version_fallback_on_import_error (test_version_display.TestVersionDisplay.test_version_fallback_on_import_error)
Test fallback to 'dev' when version import fails. ... ok
test_version_footer_display (test_version_display.TestVersionDisplay.test_version_footer_display)
Test version display in footer. ... ok
test_version_footer_with_mock_version (test_version_display.TestVersionDisplay.test_version_footer_with_mock_version)
Test version footer with mocked version. ... ok
test_version_header_display (test_version_display.TestVersionDisplay.test_version_header_display)
Test version display in header. ... ok
test_version_header_with_mock_version (test_version_display.TestVersionDisplay.test_version_header_with_mock_version)
Test version header with mocked version. ... ok
test_version_positioning_footer (test_version_display.TestVersionDisplay.test_version_positioning_footer)
Test version positioning in different screen sizes. ... ok
test_version_positioning_header (test_version_display.TestVersionDisplay.test_version_positioning_header)
Test version positioning in header for different screen sizes. ... ok
test_version_responsive_sizing (test_version_display.TestVersionDisplay.test_version_responsive_sizing)
Test that version text scales with screen size. ... ok
test_version_with_custom_font (test_version_display.TestVersionDisplay.test_version_with_custom_font)
Test version display with custom font. ... ok
test_version_in_game_ui (test_version_display.TestVersionIntegration.test_version_in_game_ui)
Test that version can be displayed in game UI context. ... ok
test_version_in_main_menu (test_version_display.TestVersionIntegration.test_version_in_main_menu)
Test that version can be displayed in main menu context. ... ok

======================================================================
ERROR: test_execute_gameplay_action_by_keyboard_action_not_available (test_action_points.TestKeyboardShortcuts.test_execute_gameplay_action_by_keyboard_action_not_available)
Test keyboard shortcuts handle unavailable actions correctly.
----------------------------------------------------------------------
Traceback (most recent call last):
  File 'C:\Users\gday\Documents\A Local Code\pdoom1\tests\test_action_points.py', line 575, in test_execute_gameplay_action_by_keyboard_action_not_available
    scout_idx = next(i for i, action in enumerate(self.game_state.actions)
                    if action['name'] == 'Scout Opponents')        # Should fail on turn 0
StopIteration

======================================================================
ERROR: test_command_strings (unittest.loader._FailedTest.test_command_strings)
----------------------------------------------------------------------
ImportError: Failed to import test module: test_command_strings
Traceback (most recent call last):
  File 'C:\Users\gday\AppData\Local\Programs\Python\Python313\Lib\unittest\loader.py', line 396, in _find_test_path
    module = self._get_module_from_name(name)
  File 'C:\Users\gday\AppData\Local\Programs\Python\Python313\Lib\unittest\loader.py', line 339, in _get_module_from_name
    __import__(name)
    ~~~~~~~~~~^^^^^^
  File 'C:\Users\gday\Documents\A Local Code\pdoom1\tests\test_command_strings.py', line 16, in <module>
    from testing.command_string_controller import CommandStringParser, CommandStringController
ModuleNotFoundError: No module named 'testing'


======================================================================
ERROR: test_magical_orb_list_modification_fix_265 (test_critical_bug_fixes.TestCriticalBugFixes.test_magical_orb_list_modification_fix_265)
Test fix for issue #265: safe list sampling instead of modification during iteration.
----------------------------------------------------------------------
Traceback (most recent call last):
  File 'C:\Users\gday\Documents\A Local Code\pdoom1\tests\test_critical_bug_fixes.py', line 104, in test_magical_orb_list_modification_fix_265
    action = next(a for a in self.game_state.actions if a['name'] == 'Scout Opponents')
StopIteration

======================================================================
ERROR: test_magical_orb_scouting_with_multiple_iterations (test_critical_bug_fixes.TestCriticalBugFixes.test_magical_orb_scouting_with_multiple_iterations)
Test that magical orb scouting works correctly with multiple stat sampling.
----------------------------------------------------------------------
Traceback (most recent call last):
  File 'C:\Users\gday\Documents\A Local Code\pdoom1\tests\test_critical_bug_fixes.py', line 140, in test_magical_orb_scouting_with_multiple_iterations
    action = next(a for a in self.game_state.actions if a['name'] == 'Scout Opponents')
StopIteration

======================================================================
ERROR: test_research_option_execution_integration (test_critical_bug_fixes.TestRegressionPrevention.test_research_option_execution_integration)
Integration test for research option execution with technical debt.
----------------------------------------------------------------------
Traceback (most recent call last):
  File 'C:\Users\gday\Documents\A Local Code\pdoom1\tests\test_critical_bug_fixes.py', line 340, in test_research_option_execution_integration
    self.game_state.technical_debt = TechnicalDebt()
    ^^^^^^^^^^^^^^^
AttributeError: 'TestRegressionPrevention' object has no attribute 'game_state'

======================================================================
ERROR: test_research_quality_technical_debt_fix (test_critical_bug_fixes.TestRegressionPrevention.test_research_quality_technical_debt_fix)
Test fix for critical TypeError in research quality system - proper method signatures.
----------------------------------------------------------------------
Traceback (most recent call last):
  File 'C:\Users\gday\Documents\A Local Code\pdoom1\tests\test_critical_bug_fixes.py', line 303, in test_research_quality_technical_debt_fix
    self.game_state.technical_debt = TechnicalDebt()
    ^^^^^^^^^^^^^^^
AttributeError: 'TestRegressionPrevention' object has no attribute 'game_state'

======================================================================
ERROR: test_recursive_loading (test_custom_sound_overrides.TestCustomSoundOverrides.test_recursive_loading)
Test that sounds are loaded recursively from subdirectories
----------------------------------------------------------------------
Traceback (most recent call last):
  File 'C:\Users\gday\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py', line 1426, in patched
    return func(*newargs, **newkeywargs)
  File 'C:\Users\gday\Documents\A Local Code\pdoom1\tests\test_custom_sound_overrides.py', line 125, in test_recursive_loading
    file_paths = [str(call[0][0]) for call in call_args]
                      ~~~~~~~^^^
IndexError: tuple index out of range

======================================================================
FAIL: test_specialized_staff_hiring_via_dialog (test_action_points.TestActionPointsStaffScaling.test_specialized_staff_hiring_via_dialog)
Test that specialized staff can be hired through the hiring dialog.
----------------------------------------------------------------------
Traceback (most recent call last):
  File 'C:\Users\gday\Documents\A Local Code\pdoom1\tests\test_action_points.py', line 366, in test_specialized_staff_hiring_via_dialog
    self.assertEqual(admin_type['data']['cost'], 85)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: 0 != 85

======================================================================
FAIL: test_calculate_blob_position_center_spiral (test_action_points.TestBlobPositioning.test_calculate_blob_position_center_spiral)
Test that blobs are positioned in center-based spiral pattern.
----------------------------------------------------------------------
Traceback (most recent call last):
  File 'C:\Users\gday\Documents\A Local Code\pdoom1\tests\test_action_points.py', line 694, in test_calculate_blob_position_center_spiral
    self.assertEqual(x0, center_x)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^
AssertionError: 594 != 600

======================================================================
FAIL: test_scout_action_uses_new_rule_system (test_action_rules.TestActionRulesIntegration.test_scout_action_uses_new_rule_system)
Test that the scout action uses the new rule system
----------------------------------------------------------------------
Traceback (most recent call last):
  File 'C:\Users\gday\Documents\A Local Code\pdoom1\tests\test_action_rules.py', line 300, in test_scout_action_uses_new_rule_system
    self.assertIsNotNone(scout_action, 'Scout Opponents action should exist')
    ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: unexpectedly None : Scout Opponents action should exist

======================================================================
FAIL: test_documentation_files_ascii_only (test_ascii_compliance.TestASCIICompliance.test_documentation_files_ascii_only) (file='MASTER_CLEANUP_REFERENCE.md')
Check documentation files for ASCII compliance.
----------------------------------------------------------------------
Traceback (most recent call last):
  File 'C:\Users\gday\Documents\A Local Code\pdoom1\tests\test_ascii_compliance.py', line 103, in test_documentation_files_ascii_only
    content.decode('ascii')
    ~~~~~~~~~~~~~~^^^^^^^^^
UnicodeDecodeError: 'ascii' codec can't decode byte 0xe2 in position 1467: ordinal not in range(128)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File 'C:\Users\gday\Documents\A Local Code\pdoom1\tests\test_ascii_compliance.py', line 105, in test_documentation_files_ascii_only
    self.fail(f'Non-ASCII character found in {file_path} at position {e.start}: {e.reason}')
    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: Non-ASCII character found in MASTER_CLEANUP_REFERENCE.md at position 1467: ordinal not in range(128)

======================================================================
FAIL: test_check_hover_no_duplicate_returns_fix_263 (test_critical_bug_fixes.TestCriticalBugFixes.test_check_hover_no_duplicate_returns_fix_263)
Test fix for issue #263: duplicate return statements in check_hover.
----------------------------------------------------------------------
Traceback (most recent call last):
  File 'C:\Users\gday\Documents\A Local Code\pdoom1\tests\test_critical_bug_fixes.py', line 49, in test_check_hover_no_duplicate_returns_fix_263
    mock_logger.log.assert_called_once()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File 'C:\Users\gday\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py', line 958, in assert_called_once
    raise AssertionError(msg)
AssertionError: Expected 'log' to have been called once. Called 0 times.

======================================================================
FAIL: test_check_hover_single_return_path (test_critical_bug_fixes.TestRegressionPrevention.test_check_hover_single_return_path)
Ensure check_hover has only one return path per logical branch (prevents #263 regression).
----------------------------------------------------------------------
Traceback (most recent call last):
  File 'C:\Users\gday\Documents\A Local Code\pdoom1\tests\test_critical_bug_fixes.py', line 275, in test_check_hover_single_return_path
    self.assertGreater(exception_pos, main_return_pos,
    ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      'Exception handler should come after main return statement')
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: -1 not greater than -1 : Exception handler should come after main return statement

======================================================================
FAIL: test_load_sounds_with_mock_files (test_custom_sound_overrides.TestCustomSoundOverrides.test_load_sounds_with_mock_files)
Test loading sounds with mocked pygame.mixer.Sound
----------------------------------------------------------------------
Traceback (most recent call last):
  File 'C:\Users\gday\AppData\Local\Programs\Python\Python313\Lib\unittest\mock.py', line 1426, in patched
    return func(*newargs, **newkeywargs)
  File 'C:\Users\gday\Documents\A Local Code\pdoom1\tests\test_custom_sound_overrides.py', line 95, in test_load_sounds_with_mock_files
    self.assertEqual(mock_sound_class.call_count, 2)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: 19 != 2

======================================================================
FAIL: test_end_game_menu_items_defined (test_end_game_menu.TestEndGameMenuFunctionality.test_end_game_menu_items_defined)
Test that end-game menu items are properly defined.
----------------------------------------------------------------------
Traceback (most recent call last):
  File 'C:\Users\gday\Documents\A Local Code\pdoom1\tests\test_end_game_menu.py', line 49, in test_end_game_menu_items_defined
    self.assertEqual(end_game_menu_items, expected_items)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: Lists differ: ['Play Again', 'View Full Leaderboard', 'Su[35 chars]enu'] != ['View Full Leaderboard', 'Play Again', 'Ma[35 chars]ack']

First differing element 0:
'Play Again'
'View Full Leaderboard'

- ['Play Again',
-  'View Full Leaderboard',
? ^

+ ['View Full Leaderboard',
? ^

-  'Submit Feedback',
+  'Play Again',
+  'Main Menu',
   'Settings',
-  'Main Menu']
+  'Submit Feedback']

======================================================================
FAIL: test_main_menu_action (test_end_game_menu.TestEndGameMenuFunctionality.test_main_menu_action)
Test return to main menu functionality.
----------------------------------------------------------------------
Traceback (most recent call last):
  File 'C:\Users\gday\Documents\A Local Code\pdoom1\tests\test_end_game_menu.py', line 101, in test_main_menu_action
    self.assertEqual(self.main_module.current_state, 'main_menu')
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: 'bug_report' != 'main_menu'
- bug_report
+ main_menu


======================================================================
FAIL: test_relaunch_game_action (test_end_game_menu.TestEndGameMenuFunctionality.test_relaunch_game_action)
Test relaunch game functionality.
----------------------------------------------------------------------
Traceback (most recent call last):
  File 'C:\Users\gday\Documents\A Local Code\pdoom1\tests\test_end_game_menu.py', line 95, in test_relaunch_game_action
    self.assertEqual(self.main_module.current_state, 'game')
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: 'high_score' != 'game'
- high_score
+ game


======================================================================
FAIL: test_submit_bug_action (test_end_game_menu.TestEndGameMenuFunctionality.test_submit_bug_action)
Test submit bug functionality.
----------------------------------------------------------------------
Traceback (most recent call last):
  File 'C:\Users\gday\Documents\A Local Code\pdoom1\tests\test_end_game_menu.py', line 124, in test_submit_bug_action
    self.assertEqual(self.main_module.current_state, 'bug_report')
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: 'end_game_menu' != 'bug_report'
- end_game_menu
+ bug_report


======================================================================
FAIL: test_submit_feedback_action (test_end_game_menu.TestEndGameMenuFunctionality.test_submit_feedback_action)
Test submit feedback functionality.
----------------------------------------------------------------------
Traceback (most recent call last):
  File 'C:\Users\gday\Documents\A Local Code\pdoom1\tests\test_end_game_menu.py', line 116, in test_submit_feedback_action
    self.assertEqual(self.main_module.current_state, 'bug_report')
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: 'main_menu' != 'bug_report'
- main_menu
+ bug_report


======================================================================
FAIL: test_view_high_scores_action (test_end_game_menu.TestEndGameMenuFunctionality.test_view_high_scores_action)
Test view high scores functionality.
----------------------------------------------------------------------
Traceback (most recent call last):
  File 'C:\Users\gday\Documents\A Local Code\pdoom1\tests\test_end_game_menu.py', line 89, in test_view_high_scores_action
    self.assertEqual(self.main_module.current_state, 'high_score')
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: 'game' != 'high_score'
- game
+ high_score


======================================================================
FAIL: test_bug_report_form_reset (test_end_game_menu.TestEndGameMenuIntegration.test_bug_report_form_reset)
Test that bug report form is properly reset.
----------------------------------------------------------------------
Traceback (most recent call last):
  File 'C:\Users\gday\Documents\A Local Code\pdoom1\tests\test_end_game_menu.py', line 215, in test_bug_report_form_reset
    self.assertEqual(main.bug_report_data['type_index'], 2)  # feedback type
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: 1 != 2

======================================================================
FAIL: test_end_turn_includes_improvements (test_game_flow_improvements.TestGameFlowIntegration.test_end_turn_includes_improvements)
Test that end_turn includes the new game flow features.
----------------------------------------------------------------------
Traceback (most recent call last):
  File 'C:\Users\gday\Documents\A Local Code\pdoom1\tests\test_game_flow_improvements.py', line 167, in test_end_turn_includes_improvements
    self.assertTrue(has_news, 'Daily news should be added to messages')
    ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: False is not true : Daily news should be added to messages

======================================================================
FAIL: test_complete_game_session (test_game_logging.TestGameSessionSimulation.test_complete_game_session)
Simulate a complete game session and verify log file creation.
----------------------------------------------------------------------
Traceback (most recent call last):
  File 'C:\Users\gday\Documents\A Local Code\pdoom1\tests\test_game_logging.py', line 269, in test_complete_game_session
    self.assertEqual(len(log_files), 1)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^
AssertionError: 0 != 1

======================================================================
FAIL: test_event_log_shows_only_current_turn_events (test_game_state.TestEventLog.test_event_log_shows_only_current_turn_events)
Test that the event log shows only events from the current turn.
----------------------------------------------------------------------
Traceback (most recent call last):
  File 'C:\Users\gday\Documents\A Local Code\pdoom1\tests\test_game_state.py', line 103, in test_event_log_shows_only_current_turn_events
    self.assertTrue(staff_message_found,
    ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^
                   'Should have a message about staff when unable to pay maintenance')
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: False is not true : Should have a message about staff when unable to pay maintenance

======================================================================
FAIL: test_multiple_turns_history_accumulation (test_game_state.TestScrollableEventLog.test_multiple_turns_history_accumulation)
Test that history accumulates across multiple turns when enabled.
----------------------------------------------------------------------
Traceback (most recent call last):
  File 'C:\Users\gday\Documents\A Local Code\pdoom1\tests\test_game_state.py', line 349, in test_multiple_turns_history_accumulation
    self.assertEqual(len(turn_headers), 3, 'Should have 3 turn headers')
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: 6 != 3 : Should have 3 turn headers

======================================================================
FAIL: test_menu_items_updated (test_new_player_experience.TestNewPlayerExperience.test_menu_items_updated)
Test that menu items match current implementation.
----------------------------------------------------------------------
Traceback (most recent call last):
  File 'C:\Users\gday\Documents\A Local Code\pdoom1\tests\test_new_player_experience.py', line 21, in test_menu_items_updated
    self.assertEqual(actual_menu_items, expected_menu_items,
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    f'Expected {expected_menu_items}, got {actual_menu_items}')
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: Lists differ: ['Lau[29 chars] Seed', 'Player Guide', 'View Leaderboard', 'Settings', 'Exit'] != ['Lau[29 chars] Seed', 'Settings', 'Player Guide', 'View Leaderboard', 'Exit']

First differing element 2:
'Player Guide'
'Settings'

  ['Launch Lab',
   'Launch with Custom Seed',
+  'Settings',
   'Player Guide',
   'View Leaderboard',
-  'Settings',
   'Exit'] : Expected ['Launch Lab', 'Launch with Custom Seed', 'Settings', 'Player Guide', 'View Leaderboard', 'Exit'], got ['Launch Lab', 'Launch with Custom Seed', 'Player Guide', 'View Leaderboard', 'Settings', 'Exit']

======================================================================
FAIL: test_scout_opponent_action_availability (test_opponents.TestGameStateOpponentsIntegration.test_scout_opponent_action_availability)
Test that Scout Opponents action is restricted before turn 5.
----------------------------------------------------------------------
Traceback (most recent call last):
  File 'C:\Users\gday\Documents\A Local Code\pdoom1\tests\test_opponents.py', line 333, in test_scout_opponent_action_availability
    self.assertIsNotNone(scout_action)
    ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^
AssertionError: unexpectedly None

======================================================================
FAIL: test_scout_stat_success (test_opponents.TestOpponent.test_scout_stat_success)
Test successful stat scouting.
----------------------------------------------------------------------
Traceback (most recent call last):
  File 'C:\Users\gday\Documents\A Local Code\pdoom1\tests\test_opponents.py', line 60, in test_scout_stat_success
    self.assertTrue(success)
    ~~~~~~~~~~~~~~~^^^^^^^^^
AssertionError: False is not true

======================================================================
FAIL: test_concurrent_operations (test_privacy_controls_ui.TestPrivacyControlsEdgeCases.test_concurrent_operations)
Test handling multiple operations simultaneously.
----------------------------------------------------------------------
Traceback (most recent call last):
  File 'C:\Users\gday\Documents\A Local Code\pdoom1\tests\test_privacy_controls_ui.py', line 294, in test_concurrent_operations
    self.assertFalse(self.pc.show_first_time_info)  # Should be dismissed
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: True is not false

======================================================================
FAIL: test_get_current_logging_level_with_logger (test_privacy_controls_ui.TestPrivacyControlsWithLogger.test_get_current_logging_level_with_logger)
Test getting logging level from active logger.
----------------------------------------------------------------------
Traceback (most recent call last):
  File 'C:\Users\gday\Documents\A Local Code\pdoom1\tests\test_privacy_controls_ui.py', line 94, in test_get_current_logging_level_with_logger
    self.assertIsInstance(level, int)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
AssertionError: <LoggingLevel.STANDARD: 'standard'> is not an instance of <class 'int'>

======================================================================
FAIL: test_media_actions_available (test_public_opinion_system.TestGameStateIntegration.test_media_actions_available)
Test that media actions are available in the actions list.
----------------------------------------------------------------------
Traceback (most recent call last):
  File 'C:\Users\gday\Documents\A Local Code\pdoom1\tests\test_public_opinion_system.py', line 411, in test_media_actions_available
    self.assertIn(media_action, available_actions)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: 'Press Release' not found in ['Grow Community', 'Fundraising Options', 'Research Options', 'Buy Compute', 'Hire Staff', 'Intelligence', 'Media & PR', 'Technical Debt', 'Advanced Funding', 'Infrastructure', 'Hire Manager', 'Search', 'Refresh Researchers', 'Team Building', 'Safety Research', 'Safety Audit']

======================================================================
FAIL: test_opinion_updates_on_turn_end (test_public_opinion_system.TestGameStateIntegration.test_opinion_updates_on_turn_end)
Test that public opinion updates when turn ends.
----------------------------------------------------------------------
Traceback (most recent call last):
  File 'C:\Users\gday\Documents\A Local Code\pdoom1\tests\test_public_opinion_system.py', line 399, in test_opinion_updates_on_turn_end
    self.assertGreater(new_history_length, initial_history_length)
    ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: 1 not greater than 1

======================================================================
FAIL: test_competitor_story_generation (test_public_opinion_system.TestMediaSystem.test_competitor_story_generation)
Test generating stories about competitors.
----------------------------------------------------------------------
Traceback (most recent call last):
  File 'C:\Users\gday\Documents\A Local Code\pdoom1\tests\test_public_opinion_system.py', line 308, in test_competitor_story_generation
    self.assertGreater(len(stories), 0)
    ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
AssertionError: 0 not greater than 0

======================================================================
FAIL: test_random_event_generation (test_public_opinion_system.TestMediaSystem.test_random_event_generation)
Test generating random media events.
----------------------------------------------------------------------
Traceback (most recent call last):
  File 'C:\Users\gday\Documents\A Local Code\pdoom1\tests\test_public_opinion_system.py', line 321, in test_random_event_generation
    self.assertGreater(len(stories), 0)
    ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
AssertionError: 0 not greater than 0

======================================================================
FAIL: test_turn_update (test_public_opinion_system.TestMediaSystem.test_turn_update)
Test media system turn update.
----------------------------------------------------------------------
Traceback (most recent call last):
  File 'C:\Users\gday\Documents\A Local Code\pdoom1\tests\test_public_opinion_system.py', line 333, in test_turn_update
    self.assertEqual(len(self.media_system.stories_generated_this_turn), 0)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: 2 != 0

======================================================================
FAIL: test_debt_consequences (test_research_quality.TestGameStateIntegration.test_debt_consequences)
Test that debt consequences are checked.
----------------------------------------------------------------------
Traceback (most recent call last):
  File 'C:\Users\gday\Documents\A Local Code\pdoom1\tests\test_research_quality.py', line 270, in test_debt_consequences
    self.assertGreater(len(self.gs.messages), initial_messages)
    ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: 1 not greater than 1

======================================================================
FAIL: test_research_actions_exist (test_research_quality.TestResearchActions.test_research_actions_exist)
Test that research actions are in the actions list.
----------------------------------------------------------------------
Traceback (most recent call last):
  File 'C:\Users\gday\Documents\A Local Code\pdoom1\tests\test_research_quality.py', line 315, in test_research_actions_exist
    self.assertIn('Set Research Quality: Rushed', action_names)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: 'Set Research Quality: Rushed' not found in ['Grow Community', 'Fundraising Options', 'Research Options', 'Buy Compute', 'Hire Staff', 'Intelligence', 'Media & PR', 'Technical Debt', 'Advanced Funding', 'Infrastructure', 'Hire Manager', 'Search', 'Refresh Researchers', 'Team Building', 'Safety Research', 'Safety Audit']

======================================================================
FAIL: test_action_availability (test_technical_failures.TestTechnicalFailureCascadeIntegration.test_action_availability)
Test that cascade prevention actions are available.
----------------------------------------------------------------------
Traceback (most recent call last):
  File 'C:\Users\gday\Documents\A Local Code\pdoom1\tests\test_technical_failures.py', line 536, in test_action_availability
    self.assertIn('Incident Response Training', action_names)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: 'Incident Response Training' not found in ['Grow Community', 'Fundraising Options', 'Research Options', 'Buy Compute', 'Hire Staff', 'Intelligence', 'Media & PR', 'Technical Debt', 'Advanced Funding', 'Infrastructure', 'Hire Manager', 'Search', 'Refresh Researchers', 'Team Building', 'Safety Research', 'Safety Audit']

======================================================================
FAIL: test_cascade_progression (test_technical_failures.TestTechnicalFailureCascades.test_cascade_progression)
Test cascade progression over multiple turns.
----------------------------------------------------------------------
Traceback (most recent call last):
  File 'C:\Users\gday\Documents\A Local Code\pdoom1\tests\test_technical_failures.py', line 183, in test_cascade_progression
    self.assertTrue(
    ~~~~~~~~~~~~~~~^
        len(cascade.subsequent_failures) > initial_failures or
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        cascade not in self.cascade_system.active_cascades
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
AssertionError: False is not true

======================================================================
FAIL: test_undo_most_recent_instance (test_unified_action_handler.TestEdgeCases.test_undo_most_recent_instance)
Test that undo removes the most recent instance of an action.
----------------------------------------------------------------------
Traceback (most recent call last):
  File 'C:\Users\gday\Documents\A Local Code\pdoom1\tests\test_unified_action_handler.py', line 267, in test_undo_most_recent_instance
    self.assertEqual(len(self.game_state.selected_gameplay_action_instances), 2)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: 1 != 2

======================================================================
FAIL: test_undoing_last_ap (test_unified_action_handler.TestEdgeCases.test_undoing_last_ap)
Test undoing when it's the last available action point.
----------------------------------------------------------------------
Traceback (most recent call last):
  File 'C:\Users\gday\Documents\A Local Code\pdoom1\tests\test_unified_action_handler.py', line 310, in test_undoing_last_ap
    self.assertTrue(result['success'])
    ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^
AssertionError: False is not true

======================================================================
FAIL: test_action_instance_tracking (test_unified_action_handler.TestUIButtonStates.test_action_instance_tracking)
Test that action instances are tracked correctly for UI.
----------------------------------------------------------------------
Traceback (most recent call last):
  File 'C:\Users\gday\Documents\A Local Code\pdoom1\tests\test_unified_action_handler.py', line 205, in test_action_instance_tracking
    self.assertEqual(action_1_count, 1)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^
AssertionError: 0 != 1

======================================================================
FAIL: test_changelog_mentions_correct_version (test_version.TestVersionConsistency.test_changelog_mentions_correct_version)
Test that CHANGELOG.md mentions the current version.
----------------------------------------------------------------------
Traceback (most recent call last):
  File 'C:\Users\gday\Documents\A Local Code\pdoom1\tests\test_version.py', line 114, in test_changelog_mentions_correct_version
    self.assertIn(f'[{current_version}]', changelog_content)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: '[0.9.0]' not found in '# Changelog\nAll notable changes to P(Doom): Bureaucracy Strategy Game will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [v0.9.0] - 2025-09-28 - 'Alpha Stability & Audio System'\n\n### [TARGET] Major Achievements\n- **AUDIO SYSTEM BREAKTHROUGH**: Fixed longstanding audio system that had never worked since project inception\n- **MONOLITH BREAKDOWN**: Successfully extracted 558+ lines from game_state.py monolith into 6 focused modules\n- **CRITICAL STABILITY**: Fixed 5 major GitHub issues systematically (#315, #227, #226, #213, #211)\n- **DOCUMENTATION OVERHAUL**: Reorganized into 5 focused subdirectories with comprehensive alpha testing docs\n\n### Added\n- **[EMOJI] Complete Audio System**: SoundManager with numpy-based sound generation, staff hiring sounds, milestone celebrations\n- **[PHONE] Audio UI Components**: Modular sound settings interfaces extracted from ui.py monolith (344 lines)\n- **[EMOJI] Enhanced Text Rendering**: New text_utils.py with adaptive sizing and intelligent truncation \n- **[EMOJI] Dev Mode Features**: F10 toggle, Ctrl+D diagnostics, screenshot system with `[` key capture\n- **[EMOJI][EMOJI] Modular Architecture**: 6 new focused modules (UtilityFunctions, DialogSystems, EmployeeBlob, VerboseLogging, etc.)\n- **[U+1F9EA] Test Suite Expansion**: Re-enabled 9 sound tests + 8 new action text display tests\n\n### Fixed  \n- **#211 CRITICAL**: UnboundLocalError crash in keybinding system (main.py global declarations)\n- **#226 CRITICAL**: Audio system completely broken since inception - now fully functional\n- **#315**: Action list text display overflow and truncation issues\n- **#227**: Action points validation (already resolved, confirmed working)\n- **#213**: Sound system tests (re-enabled after audio fixes)\n- **Turn Progression**: Critical turn progression bugs after surgical cleanup\n- **Input Handling**: Spacebar input and upgrade click handling after IndexError\n- **UI Layout**: Button displacement issue - all 20 actions now clickable\n\n### Changed\n- **Architecture**: Extracted 558+ lines from game_state.py monolith (11.6% reduction)\n- **Documentation**: Reorganized into docs/architecture/, docs/development-sessions/, docs/process/, docs/technical/, docs/game-design/\n- **README**: Modernized with alpha testing features and screenshots\n- **Dependencies**: numpy>=2.3.3 now required for audio functionality\n\n## [Unreleased] - 'Input System Architecture Overhaul'\n\n### Added - Phase 2 Architecture \n- **[TARGET] InputEventManager System** - Extracted complete keyboard event processing from main.py monolith (500+ lines)\n- **[TARGET] DialogStateManager System** - Centralized modal dialog state management and validation (300+ lines)\n- **Clean Integration Interface** - Reduced main.py keyboard handling from 500+ lines to 25 lines (95% reduction)\n- **Comprehensive Test Coverage** - Added 48 unit tests (23 InputEventManager + 25 DialogStateManager) with 100% pass rate\n- **Zero Regression Validation** - All existing functionality preserved including Turn 6 spacebar fix\n- **Manager Pattern Continuation** - Following established MediaPRSystemManager architectural patterns\n\n### Fixed - Input System Issues\n- **Redundant Keybinding Imports** - Eliminated repeated keybinding_manager imports in event loop\n- **Duplicated Blocking Logic** - Centralized modal state validation in DialogStateManager\n- **Scattered Input Processing** - Consolidated all keyboard handling in InputEventManager\n- **Testing Gaps** - Added comprehensive test coverage for previously untestable input logic\n\n## [Previous] - 'Modular Extraction Pipeline'\n\n### Fixed - Critical Issues\n- **CRITICAL: Turn 6 Spacebar Input Failure (Issue #377)** - Fixed spacebar input system failure that made game unplayable at Turn 6\n- **Redundant Key Checking Pattern** - Removed duplicate `pygame.K_SPACE` and `end_turn_key` validation that caused event processing conflicts\n- **Missing Event Consumption Flag** - Added critical `key_event_consumed = True` flag to prevent event handler conflicts\n- **Input System Architectural Debt** - Documented and partially resolved 'one button to complex system' evolution technical debt\n\n### Added - Architecture\n- **[TROPHY] 20% MILESTONE ACHIEVED - Media & PR System Management Module** - Extracted comprehensive MediaPRSystemManager class (227 lines) from game_state.py monolith\n- **Complete Media & Communication System Isolation** - Moved press releases, exclusive interviews, damage control, social media campaigns, public statements, and media dialog system\n- **Intelligence System Management Module** - Previously extracted IntelligenceSystemManager class (410 lines) from game_state.py monolith\n- **Complete Intelligence & Espionage System Isolation** - Moved opponent scouting, espionage operations, intelligence dialog system, and investigation functionality\n- **Research System Management Module** - Previously extracted ResearchSystemManager class (610 lines) from game_state.py monolith\n- **Complete Research & Debt System Isolation** - Moved research quality management, technical debt operations, researcher assignments, and debt dialog system\n- **Deterministic Event Management System** - Previously extracted DeterministicEventManager class (463 lines) from game_state.py monolith  \n- **UI Transition Management System** - Previously extracted UITransitionManager class (195 lines) from game_state.py monolith\n- **Employee Blob Management System** - Previously extracted EmployeeBlobManager class (272 lines) from game_state.py monolith\n- **Input Management System** - Previously extracted InputManager class (580 lines) from game_state.py monolith\n- **Septuple Delegation Pattern Success** - Maintained zero regressions across 7 systematic extractions with clean interfaces\n\n### Changed - Monolith Reduction\n- **[TARGET] 20% STRATEGIC MILESTONE ACHIEVED** - game_state.py reduced from 6,285 to 4,930 lines through systematic extractions (1,355 line reduction, 21.6% improvement)\n- **Seven Module Architecture Complete** - MediaPRSystemManager (227), IntelligenceSystemManager (410), ResearchSystemManager (610), DeterministicEventManager (463), InputManager (580), EmployeeBlobManager (272), UITransitionManager (195)\n- **Media & PR Architecture Separated** - All press releases, exclusive interviews, damage control, social media campaigns, public statements, and media dialogs now isolated\n- **Intelligence Architecture Separated** - All opponent scouting, espionage operations, intelligence dialogs, investigation functionality, and risk management now isolated\n- **Research Architecture Separated** - All research quality, technical debt management, researcher assignment logic, and debt dialogs now isolated\n- **Type Safety Enhancement** - Added proper TYPE_CHECKING imports and delegation properties for backward compatibility\n\n### Technical\n- **Current Branch**: refactor/extract-research-system  \n- **Previous Branch**: refactor/extract-deterministic-event-system\n- **Files Created**: src/core/media_pr_system_manager.py (227 lines), src/core/intelligence_system_manager.py (410 lines), src/core/research_system_manager.py (610 lines), src/core/deterministic_event_manager.py (463 lines), src/core/ui_transition_manager.py (195 lines), src/core/employee_blob_manager.py (272 lines), src/core/input_manager.py (580 lines)\n- **Extraction Progress**: 7th major module completed - media and PR system isolation achieved, 20% strategic milestone reached\n- **Methodology**: Functional cohesion with minimal coupling via delegation pattern and property-based backward compatibility\n\n## [0.8.0] - 2025-09-18 - 'Test Suite Foundation Release - Global Multiplayer Ready'\n\n### MILESTONE: Systematic Test Suite Repair Achieves 60% Failure Reduction\n#### Major Achievement\n- **Test Health Restoration** - Reduced failing tests from 99 to 39 (60% improvement, 798/837 passing)\n- **Global Multiplayer Foundation** - Established production-ready deterministic RNG system\n- **Systematic Repair Methodology** - Fixed 6 major categories of test failures through targeted approach\n\n#### Fixed - Core Systems Integration\n- **RNG Context Parameter Errors** - Added missing DeterministicRNG methods (sample, seed, choices) with context parameters\n- **ASCII Compliance Issues** - Removed Unicode variation selectors for cross-platform compatibility\n- **Action Naming Inconsistency** - Standardized 'Scout Opponent' -> 'Scout Opponents' across UI and tests\n- **Test Patching Issues** - Fixed incorrect RNG mocking patterns in technical_failures.py, critical_bug_fixes.py\n- **GameState Attribute Issues** - Added proper setUp methods to TestRegressionPrevention class\n- **Settings Flow Seed Method** - Updated main.py RNG initialization sequence for proper startup\n\n#### Enhanced - Deterministic RNG System\n- **Context-Aware Seeding** - Full integration with choice(), sample(), random(), randint() methods\n- **Competitive Integrity** - Complete reproducibility for tournament-ready scenarios\n- **Developer Experience** - Hyper-verbose debugging modes for community engagement\n\n#### Technical Foundation\n- **Enhanced Personnel System** - All tests passing with proper RNG integration\n- **Settings Flow** - Stable initialization sequence for consistent game startup\n- **Core Game Loop** - Validated deterministic behavior across all major systems\n\n## [Unreleased] - 2025-09-17 - 'RNG Architecture Discovery Release'\n\n### Major Discovery: RNG System Already Complete\n#### Analysis\n- **INVESTIGATION COMPLETE** - Deterministic RNG system was already fully implemented and working correctly\n- **Test Architecture Fixes** - What appeared to be RNG issues were actually test initialization order problems\n- **Philosophical Framework Integration** - Added acausal decision theory context throughout RNG documentation\n\n#### Fixed\n- **Test Suite Stability** - Fixed 86 test failures (46% improvement: 185 -> 99 total issues)\n- **RNG Initialization Order** - Corrected GameState -> RNG -> test objects pattern in 8 test files\n- **Syntax Corruption** - Repaired automated migration script damage in multiple test files\n- **Opponents Test Architecture** - Fixed test class to use GameState-managed opponents (8/9 tests passing)\n\n#### Changed\n- **Enhanced RNG Documentation** - Added decision theory philosophical context to deterministic_rng.py\n- **Test Migration Tooling** - Created fix_rng_tests.py automated migration script (with lessons learned)\n- **Dev Blog Integration** - Created comprehensive session documentation for RNG investigation\n\n## [0.7.6] - 2025-09-17 - 'Phase 1 & 2 UI Navigation Stability Release'\n\n### Phase 2: Game Completion Flow Improvements\n#### Added\n- **Enhanced UI Navigation Testing** - Systematic analysis of game flow from main menu to completion\n- **Phase 2 Priority Issue Resolution** - Addressed all critical UI navigation blockers\n\n#### Fixed\n- **CRITICAL: Seed Selection Navigation (Issue #255)** - Fixed keyboard navigation in custom seed selection screen, Continue button now properly navigates from pre_game_settings to seed_selection\n- **CRITICAL: Lab Configuration Flow (Issue #256)** - Resolved laboratory configuration screen access, users can now reach seed selection regardless of tutorial choice\n- **CRITICAL: Premature Upgrade Popup (Issue #258)** - Fixed 'Your First Laboratory Upgrade' popup appearing immediately on game start, now only appears when upgrade conditions are actually met\n- **UI Flow Integration** - Complete navigation path from pre_game_settings -> seed_selection -> tutorial_choice now works correctly\n- **Test Suite Compatibility** - Updated test expectations to match corrected UI flow (Continue button index fix)\n\n### Phase 1: Critical Stability Foundation\n#### Added\n- **NEW ACTION: Investigate Opponent** - Deep analysis of revealed competitors with enhanced intelligence gathering\n- **Strategic Development Plan** - Comprehensive 3-phase development roadmap (docs/STRATEGIC_DEVELOPMENT_PLAN_2025-09-17.md)\n- **Development Analysis System** - Created systematic repository analysis methodology and dev blog integration\n\n#### Changed\n- **BREAKING: Scout Opponent -> Scout Opponents** - Renamed to plural form for consistency with test expectations and game design\n- **ENHANCED: Safety Research Action** - Restored as standalone action alongside Research Options menu for backward compatibility\n- **IMPROVED: Action System Architecture** - Added proper rule functions and availability checking for competitor intelligence actions\n\n#### Fixed\n- **CRITICAL: Missing Safety Research Action** - Restored core gameplay action that was accidentally removed during research consolidation\n- **CRITICAL: ASCII Compliance** - Fixed 923 Unicode character violations across 11 files using automated compliance fixer\n- **MAJOR: Duplicate Safety Audit Actions** - Renamed conflict to 'Technical Debt Audit' vs 'Safety Audit' for distinct functionality\n- **MAJOR: Action System Test Failures** - Fixed multiple test suite failures in action points, keyboard shortcuts, and Scout Opponents functionality\n\n### Technical Implementation\n- **Method Addition**: _execute_standalone_safety_research(), _investigate_specific_opponent(), _has_revealed_opponents()\n- **Test Suite Fixes**: Corrected action execution patterns from action[\'execute\'] to action[\'upside\'] \n- **Cross-Platform Compatibility**: 100% ASCII compliance restored across Python files, documentation, and configuration\n- **Development Infrastructure**: Enhanced dev blog system with strategic analysis templates and automated documentation generation\n\n## [0.7.5] - 2025-09-16 - 'Extended Gameplay & Architecture Overhaul'\n### Added\n- **MAJOR: TurnManager Architecture**: Extracted turn processing from monolithic GameState into dedicated TurnManager class\n  - Proper state management with TurnProcessingState enum (IDLE, PROCESSING, COMPLETE, ERROR)\n  - Phase-based turn processing following documented monolith breakdown patterns\n  - Enhanced debugging with turn processing state tracking and stuck detection\n  - **Architecture Benefits**: Improved maintainability, better error handling, cleaner separation of concerns\n- **Enhanced Debugging System**: Comprehensive logging for game balance and debugging\n  - Opponent progress tracking with doom contribution display: `[Doom+4]` \n  - Compact doom change summaries: `[DOOM] Turn doom change: Base+1 Opponents+4 = +5`\n  - Turn progression testing tools with detailed state tracking\n  - **Developer Experience**: Faster balance iteration and easier bug identification\n\n### Changed\n- **MAJOR: Doom Mechanics Rebalancing**: Dramatically extended gameplay length for better strategic depth\n  - **Base doom rate**: 5 -> 1 points/turn (80% reduction)\n  - **Event doom spikes**: 6-13 -> 2-4 points (70% reduction for breakthrough events)\n  - **Opponent doom impact**: 50% reduction in capabilities research doom contribution\n  - **Opponent research speed**: 40% reduction for more realistic progression\n  - **Safety research effectiveness**: 40% boost (2.5x -> 3.5x doom reduction multiplier)\n  - **Game length**: Extended from ~7-8 turns to ~12-13 turns (85% increase)\n- **Enhanced Main Loop**: Updated to use TurnManager with proper fallback compatibility\n  - Automatic cleanup for stuck turn processing with `is_processing_stuck()` detection\n  - TurnManager timer updates replace legacy `update_turn_processing()` calls\n  - Turn transition overlay uses TurnManager state management\n\n### Fixed\n- **Critical: Staff Loss Game Over Bug**: Fixed immediate game over on turn 1 with 0 starting staff\n  - Added configurable staff loss condition via `enable_staff_loss_condition` setting\n  - Proper staff loss mechanics that only trigger when condition is enabled\n  - **Impact**: Eliminated frustrating immediate failures for new players\n- **Critical: Turn Processing Stuck Bug**: Fixed turn processing getting permanently stuck after ~10 turns\n  - TurnManager properly resets processing state after turn completion\n  - Main loop automatic cleanup prevents indefinite stuck states\n  - **Impact**: Eliminated game-breaking processing deadlocks\n- Actions property compatibility alias for legacy code accessing `actions` attribute\n\n### Technical Implementation\n- **New Module**: `src/core/turn_manager.py` (400+ lines) with comprehensive turn state management\n- **Updated Integration**: Main.py, GameState, and UI systems updated for TurnManager compatibility\n- **Enhanced Documentation**: Created `docs/DOOM_MECHANICS_ANALYSIS.md` and `docs/DOOM_TUNING_HOTFIX_v0.7.4.md`\n- **Testing**: Validated with dev tools and extended gameplay sessions\n\n### Player Experience Impact\n- **Strategic Depth**: Players can now execute 2-3 research projects per game\n- **Staff Viability**: Time to hire and train effective safety research teams  \n- **Recovery Potential**: Lower event spikes allow bouncing back from setbacks\n- **Learning Curve**: New players have more time to understand core mechanics\n- **Maintained Tension**: Extended gameplay while preserving strategic pressure\n\n## [0.7.4] - 2025-09-16 - 'Privacy Controls UI Integration Complete - Issue #314 Resolved'\n### Added\n- **MAJOR: Privacy Controls User Interface**: Complete frontend implementation for Game Run Logger privacy controls\n  - Comprehensive settings menu accessible from main game settings with dedicated privacy controls screen\n  - Five logging levels (Disabled, Minimal, Standard, Verbose, Debug) with clear descriptions and privacy implications\n  - Real-time data summary display showing collected information and storage details\n  - One-click data deletion with confirmation dialog for complete user control\n  - First-time access flow with privacy education and opt-in defaults ensuring user consent\n  - **Full Test Coverage**: 26 comprehensive integration tests covering UI functionality, persistence, and edge cases\n- **Enhanced Settings Architecture**: Upgraded settings menu system with modular privacy integration\n  - Updated main.py navigation flow to support dedicated privacy controls state\n  - Seamless integration with existing visual feedback system for consistent UI experience\n  - Settings persistence via existing PrivacyManager system ensuring cross-session reliability\n  - **Navigation Flow**: Settings Menu -> Privacy Controls -> [All 5 logging levels + data management]\n- **Privacy-First User Experience**: Comprehensive user education and transparent data practices\n  - Welcome dialog for first-time users explaining privacy controls and their importance\n  - Clear descriptions for each logging level helping users make informed privacy decisions\n  - Data summary showing exactly what information is collected at current privacy level\n  - Immediate deletion capability with confirmation dialog protecting against accidental data loss\n\n### Fixed\n- Settings menu navigation now properly returns to settings menu instead of main menu for sounds and keybinding options\n- Visual feedback system import paths corrected for proper UI component integration\n- Privacy controls properly dismiss first-time information dialog after user makes logging level selection\n\n### Technical Implementation\n- **New Component**: `src/ui/privacy_controls.py` (500+ lines) with complete privacy controls interface\n- **Enhanced Integration**: Updated main.py with privacy controls state management and event handling\n- **Test Suite**: `tests/test_privacy_controls_ui.py` with 26 tests covering UI, persistence, navigation, and edge cases\n- **Architecture**: Follows established P(Doom) UI patterns with proper state management and visual feedback integration\n\n## [0.7.4] - 2025-09-16 - 'Privacy-Respecting Game Run Logger - Alpha Blocker Complete'\n\n## [0.7.3+] - 2025-09-16 - 'ASCII Compliance Sweep - Documentation Standards'\n### Added\n- **ASCII Compliance Automation**: Created comprehensive Unicode detection and replacement tool\n  - Built scripts/ascii_compliance_fixer.py with 100+ character mappings\n  - Automated detection of Unicode violations across all documentation\n  - Intelligent replacement of emojis, symbols, and foreign characters with ASCII equivalents\n- **Professional Documentation Standards**: Enforced ASCII-only policy across entire codebase\n  - Eliminated 6,000+ Unicode character violations across 85+ files\n  - Improved cross-platform compatibility and encoding reliability\n  - Enhanced professional appearance and international accessibility\n\n### Fixed  \n- **MASSIVE Documentation Cleanup**: Resolved all Unicode violations in documentation\n  - Fixed emojis (TARGET, ROCKET, FIRE, etc.) -> ASCII equivalents ([TARGET], [ROCKET], [FIRE])\n  - Fixed Unicode dashes (EN DASH, EM DASH) -> standard ASCII dashes (-), (--)\n  - Fixed Unicode arrows (RIGHTWARDS, LEFTWARDS) -> ASCII arrows (->, <-, ^, v)\n  - Fixed Unicode symbols (CHECK MARK, BULLET) -> ASCII equivalents (v, *, x)\n  - Fixed Unicode punctuation (smart quotes, ellipsis) -> ASCII equivalents (', \', ...)\n  - Fixed special characters (keyboard, chair symbols) -> descriptive ASCII ([KEYBOARD], [CHAIR])\n- **Test Suite Improvement**: Reduced test failures from 77 to 12 (65 failures eliminated)\n  - All ASCII compliance tests now pass (0 violations remaining)\n  - Improved test execution reliability and cross-platform consistency\n  - Faster test execution: 794 tests in 22 seconds (vs previous 26+ seconds)\n\n## [0.7.3] - 2025-09-16 - 'Critical Issue Resolution - Phase W Hotfixes'\n### Fixed\n- **CRITICAL ASCII Compliance**: Resolved all Unicode character violations across codebase\n  - Replaced Unicode bullet points (*) with ASCII dashes (-) in UI error messages\n  - Fixed checkmark symbols (v) in test output with ASCII equivalents ([OK])\n  - Ensures cross-platform compatibility and prevents encoding errors\n  - Files fixed: src/ui/layout.py, src/ui/overlay_system.py, src/ui/screens.py, tests/test_menu_diagnostics.py\n- **CRITICAL Version Consistency**: Fixed version component mismatch in version.py\n  - Updated VERSION_PATCH from 2 to 3 to match __version__ = '0.7.3'\n  - Prevents version display inconsistencies and test failures\n- **CRITICAL Economic Configuration**: Aligned test expectations with bootstrap economic model\n  - Updated config validation tests to handle $100K starting funds (vs previous $2K expectation)\n  - Fixed milestone progression tests for new economic balance\n  - Updated game_state tests to dynamically import config values instead of hardcoding\n- **CRITICAL Action Cost System**: Fixed dynamic cost lambda function handling in tests\n  - Updated Buy Compute action tests to handle callable cost functions (Moore\'s Law integration)\n  - Test now properly evaluates lambda-based costs: `gs.economic_config.get_compute_cost(10)`\n  - Maintains backward compatibility with static cost actions\n- **CRITICAL Sound System**: Fixed default audio configuration mismatch\n  - Updated configs/default.json to have sound_enabled: true (was false)\n  - Aligns with config manager defaults and test expectations\n  - Ensures consistent audio experience out of the box\n- **CRITICAL Menu System Integration**: Updated menu structure tests to match current implementation\n  - Fixed end-game menu items: ['View Full Leaderboard', 'Play Again', 'Main Menu', 'Settings', 'Submit Feedback']\n  - Fixed main menu items: ['Launch Lab', 'Launch with Custom Seed', 'Settings', 'Player Guide', 'View Leaderboard', 'Exit']\n  - Updated keyboard navigation bounds checking (5 items vs previous 6)\n- **CRITICAL Action System**: Fixed action execution and naming inconsistencies\n  - Fixed magical orb scouting test to use \'upside\' key instead of missing \'execute\' key\n  - Updated research action tests to expect 'Research Options' instead of deprecated 'Safety Research'/'Governance Research'\n  - Aligns tests with current modular action dialog system\n\n### Infrastructure\n- **Test Suite Stability**: Resolved 15+ critical test failures blocking development\n- **ASCII Standards Enforcement**: Complete codebase compliance with ASCII-only requirements\n- **Dynamic Cost Integration**: Full support for economic calibration lambda functions\n- **Menu System Modernization**: Tests now reflect current UI implementation patterns\n\n## [0.7.2] - 2025-09-16 - 'UI Hotfixes - Systematic Resolution'\n### Fixed\n- **Researcher Pool Display**: Fixed empty dialog showing blank screen instead of helpful message\n  - Early return [] in `draw_researcher_pool_dialog` now shows 'No researchers available' message\n  - Improved user experience when no researchers are in hiring pool (ui.py line 2982)\n- **One-offs UI Overlap**: Enhanced upgrade button positioning to prevent screen overflow\n  - Dynamic button sizing in `get_compact_upgrade_rects` with 78% screen height cutoff\n  - Buttons automatically scale down when many upgrades present to fit available space\n  - Prevents overlap with context window at bottom of screen (src/ui/compact_ui.py)\n- **End Game Menu Positioning**: Verified and documented existing overflow protection\n  - `EndGameMenuRenderer` automatically switches to horizontal layout when vertical would overflow\n  - Prevents menu buttons from extending beyond screen boundaries\n\n### Added\n- **Intelligence Action System**: New strategic action category with consistent theming\n  - Added `ActionCategory.INTELLIGENCE` with dark purple color scheme (60, 40, 100)\n  - Two new placeholder actions: 'General News Reading' ($10) and 'General Networking' ($25)\n  - Both actions support delegation mechanics and proper cost evaluation\n- **Scroll Wheel Menu Navigation**: Enhanced main menu accessibility\n  - Mouse wheel up/down navigation for main menu items\n  - Wheel up moves selection up, wheel down moves selection down (main.py lines 1661-1678)\n- **Action Button Color Coding**: Visual distinction between action types\n  - Intelligence actions now display with consistent dark purple theme\n  - Improved UI clarity and user experience through category-based coloring\n\n### Infrastructure\n- **Modular UI System Migration**: Switched main menu imports to modular architecture\n  - Updated main.py to use `from src.ui.menus import draw_main_menu`\n  - Identified major refactoring opportunities (draw_version_footer duplicated in 7 places)\n- **GitHub Issue Management**: Created comprehensive Issue #309 documenting all fixes\n  - Systematic tracking and resolution of UI hotfixes with proper labeling\n  - Development blog entry created for session documentation\n\n## [0.7.1] - 2025-09-15 - 'Modular UI Architecture Hotfix'\n### Fixed\n- **CRITICAL Menu System Refactor**: Eliminated hardcoded positioning issues in end-game menus\n  - Replaced monolithic 300+ line `draw_end_game_menu` function with modular component system\n  - Dynamic positioning replaces hardcoded coordinates, fixes layout breaks across screen sizes\n  - New `MenuLayoutManager` class provides responsive layout calculations\n  - `EndGameMenuRenderer` with sectioned rendering: title, stats, scenario analysis, buttons\n  - Full backward compatibility maintained through wrapper pattern\n\n### Added\n- **Modular Menu Components**: `src/ui/menu_components.py` - Reusable UI architecture\n  - `LayoutConfig` dataclass for dynamic screen-based calculations\n  - `MenuButton` component with state-based styling\n  - `MenuLayoutManager` for consistent positioning and spacing\n  - `EndGameMenuRenderer` with color palette and font management\n- **Menu Diagnostic Testing**: `tests/test_menu_diagnostics.py` - Comprehensive layout validation\n  - Cross-resolution testing (640x480 to 2560x1440) for hardcoded position detection\n  - End-game scenario layout validation with different content lengths\n  - Edge case testing for overflow conditions and boundary handling\n  - 8 test scenarios covering menu consistency and responsive behavior\n\n### Infrastructure\n- **Anti-Monolith Pattern**: Established modular approach for large UI functions\n  - Component-based architecture prevents future hardcoded positioning issues\n  - Dynamic layout system scales automatically with content and screen size\n  - Reusable components reduce code duplication across menu systems\n  - Clear separation of concerns: layout, rendering, state management\n\n## [Unreleased] - 2025-09-19 - 'Bug Sweep Session: Critical Stability Fixes'\n### Fixed\n- **CRITICAL DEBUG CONSOLE CRASH**: Fixed fatal access violation in debug console rendering\n  - **Root Cause**: Font objects were not initialized before being used in draw methods\n  - **Solution**: Added safety checks to ensure font initialization before rendering operations\n  - **Impact**: Prevents test suite crashes and UI instability during development\n  - **Files**: `src/ui/debug_console.py` - Added font initialization safety checks\n- **Issue #245**: Fixed post-rebase test failures in menu system\n  - **Root Cause**: Test expectations outdated after menu structure changes\n  - **Solution**: Updated expected menu items to match current implementation\n  - **Details**: Menu now correctly expects ['Launch Lab', 'Launch with Custom Seed', 'Settings', 'Player Guide', 'View Leaderboard', 'Exit']\n  - **Files**: `tests/test_new_player_experience.py` - Updated test expectations\n- **Issues #315, #227, #226**: Verified resolution status\n  - **Analysis**: Action list display issues, action points validation, and sound system configuration were already resolved in previous sessions\n  - **Status**: Tests confirmed passing, no additional fixes needed\n  - **Impact**: Confirms systematic bug sweep approach is working effectively\n- **CRITICAL Issue #316**: Fixed Action Points double deduction bug\n  - **Root Cause**: AP was being deducted twice (during action selection AND turn execution)\n  - **Solution**: Removed AP deduction from `end_turn()` method since AP should be deducted at selection time for immediate player feedback\n  - **Impact**: Core turn-based gameplay now works correctly, no more phantom AP loss\n  - **Testing**: Reactivated 14 core action points tests, all now passing\n- **Issue #317**: Resolved Action Points validation confusion\n  - **Analysis**: Found 3 legitimate meta-actions with 0 AP cost (research quality settings)\n  - **Understanding**: Meta-actions for configuration changes should be free\n  - **Status**: No code changes needed, validation logic was already correct\n- **Test Infrastructure**: Reactivated core Action Points test suite\n  - TestActionPointsDeduction: 3/3 tests passing\n  - TestActionPointsReset: 2/2 tests passing  \n  - TestActionPointsBackwardCompatibility: 4/4 tests passing\n  - Total: 14 core AP tests restored and passing\n\n### Previous Fixes (2025-09-18)\n- **CRITICAL Issue #263**: Fixed duplicate return statements and exception handlers in `check_hover` method\n  - Removed duplicate `except Exception as e:` block making error handling unreachable\n  - Consolidated error handling for proper crash prevention and logging\n  - UI hover system now has robust error handling for edge cases\n- **CRITICAL Issue #265**: Verified and enhanced magical orb list modification safety\n  - Confirmed magical orb intelligence system uses safe `random.sample()` approach\n  - Fixed test infrastructure to use proper action execution methods\n  - Eliminated potential race condition crashes in intelligence gathering\n- **Testing Framework**: Fixed critical bug test suite infrastructure\n  - Corrected action execution pattern from `action[\'execute\']` to `action[\'upside\']`\n  - Enhanced test coverage for magical orb multi-iteration scenarios\n  - 9/11 critical bug tests now passing (81.8% success rate)\n\n\n## [0.6.1] - 2025-09-15 - 'Hotfix Batch: Mac TypeError + Critical Stability'\n### Fixed\n- **CRITICAL Mac TypeError Fix**: Resolved research_quality.py type conversion crash on Mac systems (closes #299)\n  - Added verbose naming pattern with `_safe_get_technical_debt_total()` and `_safe_get_research_papers_count()`\n  - Comprehensive error handling with fallback defaults for type confusion scenarios\n  - 15 regression prevention tests covering Mac-specific type conversion edge cases\n- **CRITICAL GameClock Bounds Protection**: Prevented IndexError crashes from invalid datetime values (closes #264)\n  - Added array bounds checking with `max(0, min(11, month-1))` pattern in `format_date()` and `get_formatted_date()`\n  - Graceful handling of corrupted datetime objects (months: 0, negative, >12)\n  - 9 edge case tests for bounds validation\n- **Hiring Dialog UX Validation**: Confirmed and documented existing ESC/cancel functionality (closes #267)\n  - Verified multiple escape mechanisms: ESC, Backspace, Left Arrow, Cancel button\n  - Proper insufficient funds handling with informative dialog display\n  - Sound feedback and state cleanup working correctly\n\n### Infrastructure\n- **Comprehensive Type Safety Testing**: 24 new test scenarios preventing regressions\n  - `test_leaderboard_type_safety.py`: 15 tests for Mac bug prevention\n  - `test_hotfix_batch.py`: 9 integration tests ensuring fixes work together\n- **Verbose Naming Convention**: Established type-safe accessor patterns\n  - `_safe_get_[specific_value]_[type]()` naming prevents object/value confusion\n  - Self-documenting code reduces cognitive load and type safety issues\n- **Hotfix Batch Deployment Methodology**: Systematic bug sweep and deployment process\n  - GitHub issue priority analysis with automated closure via commit messages\n  - Comprehensive documentation in dev blog with implementation details\n  - Zero performance impact, enhanced Mac compatibility and game stability\n\n## [0.6.0] - 2025-09-14\n### Added\n- **MAJOR MILESTONE: Website Pipeline Infrastructure**: Complete development-to-community bridge\n  - GitHub Actions workflow (sync-dev-blog.yml) for automated blog content sync\n  - 16 validated dev blog entries with ASCII compliance and formatting standards\n  - Comprehensive documentation: strategy guide, implementation guide, session summary\n  - Smart incremental sync with validation pipeline and force sync capability\n  - Repository integration: pdoom1 -> pdoom1-website with WEBSITE_SYNC_TOKEN security\n\n- **Deterministic RNG Foundation**: 268-line comprehensive system for competitive gaming\n  - Enhanced deterministic RNG with memorable seeds and community challenge features\n  - GameState integration with seed initialization and deterministic access via get_rng()\n  - Hybrid architecture preserving original source code while enabling full determinism\n  - Community-ready infrastructure: seed generation, challenge export, debug visibility\n\n### Infrastructure\n- **Development Transparency**: Automated pipeline transforms dev work into community content\n- **Community Engagement**: Blog system ready for automated publishing and challenge sharing  \n- **Competitive Gaming**: Deterministic foundation supports tournaments and leaderboards\n- **Professional Documentation**: Complete guides for deployment and strategic development\n\n### Technical\n- **Zero Manual Overhead**: Content flows automatically from development to community platform\n- **Source Stability**: Non-invasive deterministic integration preserves existing game mechanics\n- **Production Ready**: 5-minute deployment process with comprehensive safety and validation\n- **Strategic Architecture**: Scalable foundation for advanced community features\n\n## [0.5.1] - 2025-09-14\n### Added  \n- **Type Annotation Campaign Phase 2 Milestone**: Complete type annotation of events.py (307 lines)\n  - Advanced TypedDict implementation for event data structures (`EventDefinition`)\n  - Comprehensive Callable annotations for trigger and effect functions\n  - Zero pylance errors achieved across entire events system\n  - Systematic function annotation for all 3 standalone event functions\n  - Import optimization and type safety validation with GameState integration\n  - Established TypedDict patterns for complex data structures with function parameters\n\n### Technical\n- **Type Safety**: Achieved zero pylance errors on 307-line events.py file\n- **Integration**: Full GameState compatibility maintained with comprehensive type annotations\n- **Performance**: Zero runtime impact from type annotations (compile-time only)\n- **Documentation**: Complete dev blog entry documenting TypedDict patterns and implementation approach\n\n## [0.5.0] - 2025-09-14\n### Added\n- **PyInstaller Windows Distribution System**: Complete single-file .exe distribution for alpha/beta testing\n  - Single-file Windows executable (19MB) with embedded Python runtime and all dependencies\n  - Resource management system for bundled vs development environments (`src/services/resource_manager.py`)\n  - Cross-platform build automation (`build.bat`, `build.sh`) with error handling and validation\n  - Comprehensive distribution documentation (`docs/DISTRIBUTION.md`) with Windows Defender workarounds\n  - Asset bundling system with proper path resolution for PyInstaller environments\n  - User data management in `%APPDATA%/PDoom/` for Windows compliance\n  - Build configuration (`pdoom.spec`) with module optimization and UPX compression\n  - Development workflow integration with automated build validation\n\n### Changed\n- **Lab Name Manager**: Updated to use new resource manager for cross-environment compatibility\n- **GitIgnore**: Updated to properly handle PyInstaller build artifacts while preserving .spec files\n- **Development Dependencies**: Added PyInstaller>=5.0.0 to requirements-dev.txt\n\n### Technical\n- **Build Process**: ~30-60 second build time producing 19MB executable\n- **Performance**: 2-5 second startup time with PyInstaller extraction overhead\n- **Compatibility**: Works identically in development and bundled environments\n- **User Experience**: Zero-installation download-and-run for Windows users\n\n## [0.3.4] - 2025-09-12\n### Fixed\n- **[HOTFIX] Version Display Synchronization**: Updated version from v0.2.12 to v0.3.4+hotfix1\n  - Synchronized hotfix branch version with main branch progression\n  - Ensured in-game version display matches current development state\n  - Added hotfix branch version management to development workflow\n- **[CRITICAL] Debug Console Compatibility**: Fixed crash on new game start\n  - Restored src/ui/debug_console.py from main branch to fix crash\n  - Fixed \'takes 2 positional arguments but 4 were given\' error\n  - Ensures compatibility when users pull from main branch\n\n### Added\n- **[ENHANCEMENT] Startup Version Display**: Added version info on game startup\n  - Shows \'Starting P(Doom): Bureaucracy Strategy Game v0.3.4+hotfix1\' in terminal\n  - Eliminates confusion about which version is running\n\n### Infrastructure\n- **[PROCESS] Version Management**: Established proper hotfix versioning protocol\n  - Hotfix branches now properly increment patch version beyond main branch\n  - Clear version display in-game reflects current branch and development state\n  - Documentation updated to include version synchronization requirements\n- **[PROCESS] ASCII Compliance**: Added ASCII-only requirements to development workflow\n  - All commit messages must use ASCII characters only\n  - Documentation and code comments must be ASCII-compliant\n  - Ensures cross-platform compatibility and consistency\n\n## [0.3.3] - 2025-09-11\n### Fixed\n- **Critical**: Mouse wheel crash bug - replaced deprecated pygame mouse wheel handling\n\n## [0.3.2] - 2025-09-11\n### Added\n- **Debug Console**: Real-time game state monitoring with backtick toggle\n\n## [0.3.0] - 2025-09-11\n### Added\n- **[FEATURE] Longtermist Date Format**: Revolutionary 5-digit year date display system\n  - Dates now display as '21/May/02025' instead of '21/May/25' for longtermist flavor\n  - Complete GameClock service overhaul with backward compatibility\n  - Enhanced temporal immersion for long-term thinking gameplay\n  - All 13 GameClock tests updated and passing with new format expectations\n- **[ACCESSIBILITY] Universal Keyboard Navigation Framework**: Foundation for comprehensive accessibility\n  - Enhanced keyboard navigation infrastructure\n  - Systematic approach to 'every button has one default key assignment' rule\n  - Improved screen reader compatibility preparation\n  - Standardized navigation patterns across all UI components\n- **[INFRASTRUCTURE] Comprehensive Pre-Alpha Bug Sweep Plan**: Strategic approach to alpha readiness\n  - Identified 16 critical bugs including 4 game-breaking issues\n  - Systematic 2-day bug resolution roadmap with clear priorities\n  - Technical implementation strategy for common error patterns\n  - Risk assessment and mitigation framework\n- **[INFRASTRUCTURE] Enhanced Issue Documentation System**: Complete bug tracking infrastructure\n  - 8 new comprehensive issue documentation files\n  - Standardized bug reporting templates with impact assessment\n  - Root cause analysis and fix requirements for each issue\n  - Integration with GitHub issue tracking workflow\n\n### Changed\n- **[UI] Date Display Integration**: Turn counter now shows longtermist dates for enhanced immersion\n- **[CODEBASE] Error Handling Improvements**: Enhanced defensive coding patterns\n- **[DEVELOPMENT] Branch Management**: Systematic consolidation of experimental and feature branches\n\n### Fixed\n- **[CRITICAL] Duplicate Return Statements**: Resolved dead code in check_hover() method (Issue #263)\n- **[CRITICAL] Array Bounds Safety**: Added validation for GameClock month access (Issue #264)\n- **[HIGH] List Modification Safety**: Fixed race conditions in magical orb intelligence gathering (Issue #265)\n- **[MEDIUM] Configuration Error Handling**: Enhanced robustness for malformed config files (Issue #266)\n\n### Development Infrastructure\n- **[WORKFLOW]**: Fast branch consolidation methodology for team collaboration\n- **[QUALITY]**: Discovered and documented 6 additional critical bugs through systematic code audit\n- **[VERSIONING]**: Clean semantic versioning with consolidated feature releases\n- **[COLLABORATION]**: Enhanced multi-developer workflow with shared main branch access\n\n### Technical Notes\n- All longtermist date changes maintain full backward compatibility\n- Zero breaking changes to existing save files or configuration\n- Enhanced error resilience across core game systems\n- Ready for systematic pre-alpha bug resolution phase\n\n### Acknowledgments\n- Special thanks to collaborative development team including oldfartas for systematic testing and quality assurance\n- Community feedback integration for enhanced user experience\n- Continuous improvement philosophy driving systematic codebase enhancement\n\n## [0.2.12] - 2025-09-10\n### Added\n- **[INFRASTRUCTURE] Comprehensive Type Annotation System**: Major codebase quality improvement initiative\n  - Complete type annotations for ui.py (4,235 lines, 35+ functions)\n  - 85-90% type annotations for game_state.py (55+ of ~65 methods, 4,875 lines)\n  - Comprehensive pygame.Surface typing for all rendering functions\n  - Complex return types: Optional[Dict], Tuple[bool, str], Union types for flexible APIs\n- **[INFRASTRUCTURE] Development Blog System**: Automated documentation infrastructure\n  - Systematic progress tracking with entry creation and indexing\n  - ASCII-only enforcement across all AI models for consistency\n  - Template system for development sessions and milestone documentation\n  - Website integration ready for automated content pickup\n- **[DEVELOPMENT] Pylance Cleanup Framework**: Systematic approach to code quality\n  - Estimated 60-70% reduction of original 5,093+ pylance strict mode issues\n  - Established patterns for systematic monolith cleanup\n  - Tool integration (autoflake, pylance, git workflow)\n  - Foundation for continued quality improvements\n\n### Changed\n- **[CODEBASE] Enhanced IDE Integration**: ~9,000 lines of core game logic with comprehensive type coverage\n- **[DEVELOPMENT] Refactoring Readiness**: Strong foundation for future modularization with clear, type-safe interfaces\n\n### Development Infrastructure\n- **[QUALITY]**: Major milestone in systematic codebase improvement\n- **[PATTERNS]**: Established methodology for pygame UI typing, complex return patterns\n- **[DOCUMENTATION]**: Complete workflow for development session tracking and milestone recording\n- **[SCALABILITY]**: Framework ready for continued systematic quality improvements\n\n### Technical Notes\n- All functionality preserved and validated throughout type annotation process\n- Zero breaking changes, full backward compatibility maintained\n- Strong IDE IntelliSense support for core game systems\n- Automated tooling for continued development quality assurance\n\n## [0.2.11] - 2025-09-10\n### Added\n- **[FEATURE] Enhanced Default Logging**: Verbose logging now enabled by default for better player feedback\n- **[FEATURE] P(Doom) Change Attribution**: All doom fluctuations now include clear reasons in activity log\n- **[FEATURE] GameClock Date Display**: Weekly date progression starting April 4, 2016 shown in activity log\n- **[FEATURE] Resource Icon Hover Tooltips**: All 6 top bar resources now have informative hover context\n- **[FEATURE] Expense Accept/Deny Labels**: Standardized terminology from 'Approve/Dismiss' to 'Accept/Deny'\n\n### Changed\n- **[BALANCE] Starting Money**: Doubled from $1,000 to $2,000 for improved new player experience\n- **[UI] Button Layout**: Hard clamp prevents action buttons from overlapping context window\n\n### Fixed\n- **[FIX] UI Overlap Issues**: Action buttons now properly constrained to prevent layout conflicts\n- **[FIX] Event System**: Added EventAction.DENY support for consistent expense handling\n\n### Development Notes\n- **[ENHANCEMENT]**: Comprehensive UI/UX improvement package\n- **[TESTING]**: All features validated with real gameplay scenarios\n- **[COMPATIBILITY]**: Zero breaking changes, full backward compatibility maintained\n\n## [0.2.10] - 2025-09-09\n### Fixed\n- **[FIX] Typography Import System and Merge Conflicts**: Resolved all merge conflict markers and import errors in main.py and UI modules\n- **[FIX] Sound Configuration**: Default config and global sound manager now enabled by default\n- **[FIX] Menu Items**: Main menu structure updated to match new onboarding flow\n- **[FIX] Tutorial System**: Stepwise tutorial now uses denser, fewer steps; tests updated for new structure\n- **[FIX] Test Suite**: All import and infrastructure errors resolved; only functional test failures remain\n\n### Changed\n- **[ARCH] Internal Polish**: Merged main branch improvements, completed typography and UI import refactor\n- **[TESTS] Test Coverage**: Updated tests for onboarding, sound, and menu systems to match new architecture\n\n### Development Notes\n- **[CI/CD]**: All core tests now pass except for known functional issues (economic cycles, lab names, public opinion)\n- **[RELEASE]**: Ready for v0.2.10 release after final functional test fixes\n\n## [0.2.9] - 2025-09-09\n### Fixed\n- **[FIX] Typography Import System Resolution**: Major progress on eliminating test import errors\n  - Recreated corrupted `ui_new.components.typography` module with proper FontManager class\n  - Resolved circular import dependencies between typography, buttons, and windows components  \n  - Created local font manager stubs in UI components to prevent import cycles\n  - Fixed incorrect module paths in `test_config_manager.py` (config_manager -> src.services.config_manager)\n  - Added missing `safety_level` key to settings flow test setup preventing KeyError exceptions\n  - Converted all 6 remaining ERROR tests to passing or FAILURE status (major import issues resolved)\n  - Test suite improvement: 742 tests with significantly reduced import-related failures\n\n### Technical Debt\n- **[DONE] Issue #225 - Configuration System Import Failures**: RESOLVED\n- **[WIP] Typography Import Problems**: Major infrastructure work completed, final import validation pending\n- **[WIP] Issue #228 - UI Navigation**: Import errors fixed, test logic improvements ongoing\n\n### Development Notes\n- **[WARNING] Status**: Typography import still requires final debugging session for complete resolution\n- **[READY] Ready for Commit**: Documentation, versioning, and major fixes completed\n\n## [0.2.8] - 2025-09-09\n### Fixed\n- **[FIX] Technical Debt Resolution**: Comprehensive cleanup of test infrastructure and CI pipeline\n  - Fixed keyboard shortcut test patch targets for proper UI component mocking (Issue #225)\n  - Improved responsive UI positioning calculations removing hardcoded values (Issue #228)\n  - Enhanced UI boundary checking with proper None value handling (Issue #230)\n  - Resolved 67 CI import errors with conditional imports for test environment compatibility\n  - Fixed critical linting errors (F821 undefined names, F823 scoping issues) for green CI status\n  - Cross-platform path handling improvements for Windows/Linux compatibility\n\n### Changed\n- **[PYTHON] Python Version Requirements**: Completed Python 3.8 support removal\n  - Updated GitHub Actions workflows to test Python 3.9, 3.10, 3.11, 3.12 only\n  - Cleaned up all Python 3.8 references from CI pipeline and documentation\n  - Enhanced test stability with 645+ tests passing (improved from 15 failures)\n\n## [0.2.7] - 2025-09-08\n### Added\n- **[LABS] Lab Name System**: Implemented pseudonymous lab naming for enhanced immersion and leaderboard integration\n  - Added 104 unique AI lab names across 87 different themes (e.g., 'Axiom Labs', 'Beacon AI', 'Cerberus Systems')\n  - Lab names are deterministically assigned based on game seed for consistency\n  - Lab name displays in UI context panel replacing generic 'P(Doom) Context Panel'\n  - Leaderboard integration saves lab names alongside scores for pseudonymous gameplay\n  - CSV asset system (`assets/lab_names.csv`) for easy lab name management\n  - Comprehensive lab name manager service with theme-based organization\n  - Backward compatibility with existing save files and leaderboard data\n\n## [0.2.3] - 2025-09-05\n### Changed\n- **[PYTHON] Python Version Requirements**: Dropped Python 3.8 support, now requires Python 3.9+\n  - Updated GitHub Actions workflows to test Python 3.9, 3.10, 3.11, 3.12\n  - Updated all documentation and requirements to reflect Python 3.9+ minimum\n  - Enables use of modern Python features like built-in generics (`list[str]` vs `List[str]`)\n  - Updated MyPy configuration target from Python 3.8 to 3.9\n\n## [0.2.5] - 2025-09-08\n### Added\n- **[FIX] UI Interaction Fixes & Hint System Overhaul**: Major improvements to game usability and professional polish\n  - Fixed spacebar (end turn) being blocked by tutorial overlays - now works even during tutorials\n  - Fixed unprofessional staff hire popup showing automatically at game start\n  - Implemented Factorio-style hint system: hints show once, auto-dismiss, can be reset\n  - Added debug tools: Ctrl+D (UI state debug), Ctrl+E (emergency popup clear), Ctrl+R (reset hints)\n  - Separated hints from tutorials with independent configuration\n  - Automatic cleanup for stuck UI states (turn processing, overlay conflicts, orphaned popups)\n  - Improved button click consistency and modal dialog behavior\n  - Enhanced settings menu with hint status display and controls\n\n### Fixed\n- **Configuration Consistency**: Fixed starting staff count mismatch between JSON config and config manager\n- **Event Handling Priority**: Resolved conflicts between tutorial overlays and core game controls\n- **Modal Dialog Behavior**: Improved popup and dialog interaction handling\n\n## [Unreleased]\n### Added\n- **[ACHIEVE] Achievements & Enhanced Endgame System (Issue #195)**: Comprehensive achievement tracking and victory conditions beyond binary win/lose\n  - 24 achievements across 8 categories: Survival, Workforce, Research, Financial, Safety, Reputation, Competitive, Rare\n  - 4-tier rarity system: Common, Uncommon, Rare, Legendary achievements\n  - Ultimate victory condition: Reach p(Doom) = 0 (complete AI safety solution)\n  - Enhanced warning system with 6 threat levels (80%, 85%, 90%, 95%, 98%, 99% doom thresholds)\n  - Pyrrhic victory analysis: Win conditions evaluated against costs (financial, reputational, safety)\n  - Strategic success scenarios: Major progress recognition without requiring perfect victory\n  - Deep integration: Achievement progress tracking with all existing systems (technical debt, opponents, economic cycles)\n  - Turn-based achievement checking with defensive programming (system errors never crash game)\n  - Semi-programmatic endgame text generation based on player strategy analysis and resource management patterns\n- **[CASCADE] Technical Failure Cascades (Issue #193)**: Comprehensive failure cascade system modeling realistic organizational crisis management\n  - 7 types of technical failures with cascading effects (Research setbacks, Security breaches, System crashes, etc.)\n  - Near-miss system providing learning opportunities without immediate consequences\n  - Player choice between transparency/learning vs cover-up/reputation protection\n  - 3-tier cascade prevention system: Incident Response, Monitoring Systems, Communication Protocols\n  - Long-term consequences: Transparency builds trust, cover-ups increase future risks\n  - 4 new actions: Incident Response Training, Monitoring Systems, Communication Protocols, Safety Audit\n  - 4 cascade-specific events: Near-Miss Averted, Cover-Up Exposed, Transparency Dividend, Cascade Prevention Success\n- **[ECONOMIC] Economic Cycles & Funding Volatility (Issue #192)**: Complete historical AI funding timeline (2017-2025)\n  - Realistic economic phases: Boom, Stable, Correction, Recession, Recovery\n  - 5 funding sources with different cycle sensitivities (Seed, Venture, Corporate, Government, Revenue)\n  - Enhanced fundraising system with 4 advanced funding actions (Series A, Government grants, etc.)\n  - 7 economic-specific events triggered by market conditions\n  - Historical anchors based on real AI funding patterns and market cycles\n- **[PLAYER] New Player Experience Enhancement**: Improved onboarding with tutorial/intro selection\n  - Replaced 'Launch Lab' with 'New Player Experience' in main menu\n  - Checkbox-based interface for tutorial and intro scenario selection\n  - Contextual intro text explaining game premise and starting conditions\n  - Responsive UI design with keyboard and mouse navigation support\n\n### Changed\n- **[ASCII] ASCII Compatibility**: Converted all Unicode symbols to ASCII equivalents\n  - Replaced arrows, emojis, and Unicode symbols with ASCII alternatives\n  - Fixed encoding issues causing \'charmap\' codec errors on some systems\n  - Maintained visual consistency while ensuring cross-platform compatibility\n  - Improved terminal output compatibility across different environments\n\n### Technical\n- **[TESTS] Enhanced Test Coverage**: Added 29 new unit tests for technical failure cascades, plus 17 tests for economic cycles and new player experience\n- **[ARCH] Modular Architecture**: Technical failure cascades system designed for extensibility\n  - Clean separation between cascade logic, game state integration, and UI\n  - Deterministic RNG integration for reproducible failure scenarios\n  - Comprehensive event system integration with enhanced events support\n  - Integration with existing technical debt and research quality systems\n- **[SYSTEM] System Integration**: Economic cycles and technical failures systems designed for interoperability\n  - Clean separation between game logic, UI, and specialized mechanics\n  - Backward compatibility maintained for existing save files\n\n## [0.2.2] - 2025-09-04 - 'Technical Debt Resolution & Privacy-First Systems'\n### [TECH] Technical Debt Resolution\n- **Fixed all critical test failures**: 137/137 tests now passing (previously 4 categories failing)\n- **Action Points System**: Fixed validation logic for meta-actions (0 AP cost properly supported)\n- **Sound Configuration**: Aligned config manager defaults with actual config files  \n- **Bug Reporter**: Cross-platform path handling for Windows/Unix compatibility\n- **File Handle Management**: Proper cleanup of logging resources on Windows\n\n### [PRIVACY] Privacy-First Infrastructure\n- **Complete Privacy Policy**: Comprehensive privacy documentation and implementation\n- **Local-First Design**: All data stored locally by default, no cloud transmission without opt-in\n- **Pseudonymous Competition**: Leaderboard system using chosen display names, no personal data\n- **Granular Privacy Controls**: User controls exactly what data to share and when\n- **Open-Source Privacy**: All privacy-related code auditable and transparent\n\n### [DETERMIN] Deterministic Gameplay System\n- **Reproducible Games**: Seed-based deterministic random number generation\n- **Competitive Verification**: Prove achievements through mathematical reproducibility\n- **Context-Aware RNG**: All random events tracked with context for debugging/analysis\n- **Global RNG Management**: Consistent random state across entire game session\n- **Audit Trail**: Complete tracking of RNG calls for competitive integrity\n\n### [LOGGING] Verbose Logging Infrastructure (Opt-In Only)\n- **Multi-Level Logging**: MINIMAL/STANDARD/VERBOSE/DEBUG detail levels\n- **Comprehensive Tracking**: Actions, resource changes, and RNG events logged\n- **JSON Export**: Machine-readable logs for analysis tools and strategy improvement\n- **Privacy Controls**: Completely opt-in, disabled by default, user-controlled cleanup\n- **Performance Optimized**: Minimal overhead with efficient file management\n\n### [LEADERBOARD] Privacy-Respecting Leaderboards\n- **Pseudonymous Participation**: User-chosen display names only, no real identities\n- **Local-First Storage**: Scores stored locally with optional cloud synchronization\n- **Verification Without Surveillance**: Cryptographic verification without personal data\n- **User Control**: Enable/disable participation anytime without penalty\n- **Competitive Integrity**: Deterministic gameplay enables fair competition\n\n### [TEST] Comprehensive Test Coverage\n- **New Test Suites**: 49 new unit tests for privacy, deterministic, and logging systems\n- **100% Test Success**: All 137 tests passing across all platforms\n- **Edge Case Coverage**: Extensive testing of boundary conditions and error scenarios\n- **Cross-Platform Verification**: Windows, macOS, and Linux compatibility tested\n\n### [DOCS] Enhanced Documentation\n- **Privacy Policy** (docs/PRIVACY.md): Complete privacy practices and user rights\n- **Technical Debt Resolution** (docs/TECHNICAL_DEBT_RESOLUTION.md): Detailed implementation notes\n- **Updated README**: Privacy-first messaging and new feature documentation\n- **API Documentation**: Comprehensive inline documentation for all new systems\n\n### [ARCH] Architecture Improvements\n- **Modular Services**: Clean separation of concerns with `src/services/` directory\n- **GameState Integration**: Seamless integration with existing game architecture\n- **Backward Compatibility**: All existing saves and configurations work unchanged\n- **Error Handling**: Graceful degradation and comprehensive error recovery\n\n## [0.2.1] - 2025-09-04 - 'Three Column' Hotfix Candidate\n### Added\n- **[LAYOUT] 3-Column Layout System**: Complete UI architecture overhaul for better organization\n  - **Left Column**: Repeating actions (hire, research, etc.) with visual action counters\n  - **Right Column**: Strategic one-off actions (upgrades, board meetings, etc.)\n  - **Middle Column**: Staff animations and context displays\n  - **Smart Action Categorization**: Automatic sorting of actions by type and frequency\n- **[KEYBOARD] Comprehensive Keystroke Support**: Fast-paced gameplay with keyboard shortcuts\n  - **Auto-Generated Keybindings**: Every visible action gets a unique keyboard shortcut\n  - **Visual Key Display**: All buttons show their assigned keys (e.g., '[1] Hire Staff')\n  - **Enter Key Support**: Enter/Return now works same as Space for turn processing\n  - **Conflict Resolution**: Intelligent key assignment prevents duplicate bindings\n- **[VISUAL] Enhanced Visual Differentiation**: Color-coded action categories for quick recognition\n  - **Research Actions**: Blue accent coloring for safety/interpretability research\n  - **Economic Actions**: Green accent coloring for hiring/compute purchases\n  - **Strategic Actions**: Distinct styling for board meetings, lobbying, etc.\n  - **Button Size Optimization**: Reduced button heights (42px left, 35px right) for better fit\n- **[LAYOUT] Layout Improvements**: Better spacing and visibility management\n  - **Context Window Buffer**: 2% vertical buffer prevents buttons hiding under context display\n  - **Text Overflow Protection**: Strategic action names truncated cleanly for right column\n  - **Early Game Filtering**: UI starts minimal and grows as actions unlock\n  - **Configuration Support**: JSON-based layout switching with `enable_three_column_layout`\n\n### Changed\n- **Employee Animation System**: Temporarily simplified during UI transition for cleaner testing\n- **Button Text Display**: Shortened action names for better readability in narrow columns\n- **Resource Header**: Optimized for 3-column layout proportions\n\n### Fixed\n- **Button Visibility**: All visible buttons now guaranteed to be clickable (no hidden buttons)\n- **Text Overflow**: Right column text no longer overflows or clips\n- **Layout Responsiveness**: Better handling of varying numbers of available actions\n\n## [0.2.0] - 2025-09-04\n### Added\n- **[RETRO] Retro 80s Context Window System**: Complete overhaul of information display\n  - **80s Techno-Green Styling**: ALL CAPS DOS-style context window with retro color scheme\n  - **Dynamic Context Display**: Hover over actions/upgrades for detailed information\n  - **Green Matrix Theme**: Background (40,80,40), Text (200,255,200) for authentic retro feel\n  - **Smart Information Architecture**: Moved descriptions from cramped buttons to spacious context area\n- **[VISUAL] 8-bit Style Resource Icons**: Complete visual redesign of resource display\n  - **Money Icon**: Pixelated $ symbol in gold (255,230,60)\n  - **Staff Icon**: Simple person silhouette (head + body)\n  - **Reputation Icon**: Star polygon in blue (180,210,255)\n  - **Action Points Icon**: Lightning bolt with glow effects\n  - **Doom Icon**: Skull symbol in red (255,80,80)\n  - **Compute Icon**: '2^n' exponential notation for computing power\n  - **Research Icon**: Light bulb for research progress\n  - **Papers Icon**: Document with text lines for publications\n- **[DEV] Developer Tools & Quality of Life**\n  - **Screenshot Hotkey**: Press `[` key to capture game screenshots\n  - **Screenshot Management**: Auto-saves to `screenshots/` folder with timestamps\n  - **Window Mode Default**: Disabled fullscreen for better Alt+Tab and screen capture compatibility\n- **[UI] Action Filtering & UI Polish**\n  - **Smart Action Display**: Only show unlocked actions (12/24 visible initially)\n  - **Button Reorganization**: Moved 'Hire Staff' to logical position 5\n  - **Starting Resources**: Set default staff to 0 for better game balance\n  - **Tutorial Independence**: Resource display works regardless of tutorial state\n\n### Fixed\n- **Resource Display Alignment**: Fixed kerning issues between Reputation, Research, and AP\n- **Text Overflow**: Eliminated cramped button text by moving descriptions to context window\n- **UI Visibility**: Removed tutorial dependencies that hid UI improvements\n- **Spacing & Layout**: Consistent margins and alignment across all resource displays\n- **Screenshot Functionality**: Alt+Tab and screen capture tools now work properly\n\n## [Unreleased]\n### Added\n- **[SETTINGS] Enhanced Settings System**: Comprehensive settings and configuration architecture\n  - **Custom Seed Management**: Fixed critical 'Launch with Custom Seed' crash, added seed validation and normalization\n  - **Categorical Settings Organization**: Audio, Gameplay, Accessibility, and Game Configuration modes\n  - **Seed Management System**: Weekly community seeds, custom seed validation, seed history tracking\n  - **Game Configuration System**: Custom game rule modifications, scenario sharing, template system\n  - **Modern Settings UI**: `src/ui/enhanced_settings.py` with improved accessibility and user experience\n  - **Service Layer Architecture**: `src/services/seed_manager.py` and `src/services/game_config_manager.py`\n  - **Integration Layer**: `src/ui/settings_integration.py` for gradual adoption and compatibility\n  - **Demo and Testing Tools**: `demo_settings.py` for interactive testing, `test_fixes.py` for validation\n- **[UI/UX] UI/UX Improvements**: Major improvements to interface quality and information accessibility\n  - **Fixed Resource Bar Kerning**: Replaced fixed positioning with dynamic spacing for better readability\n  - **Context Window System**: Comprehensive contextual help system with detailed information on hover\n    - Minimizable context window at bottom of screen (20% height expanded, 8% minimized)\n    - Rich context information for all UI elements (resources, actions, upgrades, buttons)\n    - Professional dark theme styling with responsive design\n    - Progressive disclosure: detailed info when needed, hidden otherwise\n    - Click to minimize/maximize for user preference\n  - **Enhanced Hover Detection**: Extended existing hover system with rich context data\n  - **Improved Resource Display**: Dynamic spacing calculation adapts to text length and screen size\n  - **Better Information Density**: Contextual help reduces UI clutter while improving accessibility\n\n### Fixed\n- **Critical Menu Alignment Bug**: Fixed crash when selecting 'Launch with Custom Seed' from main menu\n  - Synchronized menu_items arrays across main.py, ui.py, and src/ui/menus.py\n  - Corrected menu handling logic in handle_menu_click() and handle_menu_keyboard()\n  - Restored full functionality of custom seed system with proper validation\n- **Critical Game Launch Crash Fix**: Fixed `AttributeError: \'OnboardingSystem\' object has no attribute \'get_mechanic_help\'` that prevented game startup\n  - Implemented missing `get_mechanic_help()` method in `OnboardingSystem` class\n  - Added comprehensive help content for core mechanics: staff hiring, upgrades, action points, and doom warnings\n  - Graceful error handling for invalid mechanic names\n  - Warning logging for stub implementation as placeholder for future enhancements\n  - All first-time help content tests now pass (7/7 passing)\n- **UI Rendering Issues**: Fixed upgrade rectangle handling and context window compatibility\n  - Fixed None value handling in upgrade rectangle creation\n  - Added proper error handling for context window drawing\n  - Improved font size calculations with minimum size constraints\n\n### Added\n- **Menu Structure Optimization**: Streamlined main menu and tutorial flow for improved user experience\n  - Simplified main menu from 7 to 4 core options: Launch Lab, Game Config, Settings, Exit\n  - Reordered tutorial choice to default to 'No - Regular Mode' for faster game access\n  - Removed less essential options from main screen (Player Guide, README, Report Bug, Custom Seed)\n  - Maintained all functionality while reducing choice overload and cognitive load\n- **Batch 1 - Stability & UI Correctness Improvements**: Critical bug fixes and UI enhancements\n  - **Navigation Back Button Fix (Issues #122, #118)**: Back button now shows at navigation depth >= 1 (previously > 1)\n    - Added `should_show_back_button(depth)` helper function for clarity and future maintenance\n    - Improved navigation consistency across menu systems\n    - Enhanced user experience with predictable back button behavior\n  - **UI Overlay Safe Zone System (Issue #121)**: Prevents overlay panels from obscuring interactive areas\n    - Implemented `get_ui_safe_zones()` to define protected UI areas (action buttons, upgrades, resources, event log)\n    - Added `find_safe_overlay_position()` with first-fit positioning algorithm\n    - Smart positioning prioritizes gap between action and upgrade areas\n    - Foundation for future drag-and-drop overlay functionality\n  - **Accounting Software Verification (Issue #52)**: Confirmed correct balance change tracking and display\n    - Verified proper `last_balance_change` implementation in `GameState._add()`\n    - Color-coded display: green for positive/zero, red for negative changes\n    - Only tracks when accounting software upgrade is purchased\n  - **Regression Test Coverage (Issue #131)**: Added comprehensive test suites for quality assurance\n    - 15+ navigation and back button tests in `test_navigation_stack.py`\n    - 8+ accounting software tests in `test_accounting_software.py`\n    - 7+ UI overlap prevention tests in `test_ui_overlap_prevention.py`\n    - All existing tests maintained and passing\n- **Fun Feedback for Achievements: \'Zabinga!\' Sound (Issue #66)**: Celebratory audio feedback system\n  - Generated \'Zabinga!\' sound effect for research paper completion milestones\n  - Integrated with research paper publication logic in game_state.py\n  - Harmonically rich celebratory sound with musical progression (Za-bin-ga!)\n  - Comprehensive test coverage for paper completion sound triggering\n  - Trademark-safe replacement for previous \'bazinga\' references\n- **Onboarding and Tutorial System (Issue #67)**: Comprehensive guidance for new players\n  - Interactive step-by-step tutorial covering all core game mechanics\n  - Context-sensitive first-time help for key actions (staff hiring, upgrades, AP exhaustion, high p(Doom))\n  - In-game help system accessible with `H` key\n  - Smart tutorial progression that can be skipped and won\'t reappear\n  - Persistent progress tracking with local storage\n  - Tutorial overlay with responsive design and clear navigation\n  - First-time help popups with dismissible notifications\n  - 8 comprehensive tests covering all onboarding functionality\n- **Activity Log Minimization (Issue #69)**: New UI enhancement system\n  - 'Compact Activity Display' upgrade ($150) enables activity log minimization\n  - Minimize/expand buttons for activity log when upgrade is purchased\n  - Minimized state shows only title bar to save screen space\n  - Visual feedback with plus/minus icons for expand/minimize actions\n  - Comprehensive test coverage for minimization functionality\n- **Action Rules System (Issue #69)**: Refactored and documented action availability system\n  - New `action_rules.py` module with centralized rule management\n  - 15+ rule types: turn-based, resource-based, milestone-based, upgrade-based\n  - Composite rules with AND/OR logic for complex conditions\n  - Clear documentation and usage examples for future extension\n  - Backward-compatible with existing actions\n  - Comprehensive test coverage (19 new tests)\n- **Milestone System Improvements (Issue #69)**: Enhanced robustness\n  - Manager requirement trigger confirmed working correctly (9th employee)\n  - Activity log clearing behavior documented and tested\n  - Milestone flag robustness verified through comprehensive testing\n- **Action Points System (Phase 1)**: Strategic action limitation system\n  - 3 Action Points per turn limit player actions\n  - All actions cost 1 AP by default\n  - AP validation prevents actions when insufficient points available\n  - Visual AP counter with glow effects when points are spent\n  - Action buttons show AP costs and gray out when unavailable\n  - AP automatically resets to maximum at start of each turn\n  - Comprehensive test coverage for AP functionality\n- Centralized version management system (`version.py`)\n- Comprehensive changelog documentation\n- Semantic versioning policy and release process\n- Version display in game window title\n- Automated version integration with game logger\n\n### Fixed\n- **Datetime deprecation warning (Issue #74)**: Replaced deprecated `datetime.datetime.utcnow()` with `datetime.datetime.now(datetime.UTC)`\n  - Future-proofs code for Python 3.12+ compatibility\n  - Eliminates deprecation warning during startup\n- **Enhanced numpy dependency handling for sound (Issue #74)**: Improved error handling and documentation for sound effects\n  - Added clear error message when numpy is missing: 'Install numpy for sound: pip install numpy'\n  - Updated README.md and DEVELOPERGUIDE.md to document numpy as optional dependency for sound\n  - Enhanced sound manager error handling with specific ImportError detection\n  - Game runs without sound if numpy is not available (graceful degradation)\n- **Options Menu UnboundLocalError**: Fixed crash when selecting Options from main menu\n  - Added missing global declarations for `overlay_content` and `overlay_title` in main() function\n  - Enhanced `draw_overlay` function with defensive logic for None values\n  - Prevents 'UnboundLocalError: cannot access local variable \'overlay_title\'' crashes\n  - Added comprehensive test coverage for Options menu selection via keyboard and mouse\n  - Updated DEVELOPERGUIDE.md with overlay variable pattern requirements and warnings\n\n### Changed\n- Game window title now shows semantic version (v0.1.0) instead of hardcoded 'v3'\n- GameLogger now defaults to current version if none specified\n\n### Fixed\n- **UnboundLocalError for UI overlay variables (Issue #79)**: Fixed crash when checking first-time help content\n  - Added missing global declarations for `first_time_help_content`, `first_time_help_close_button`, and `current_tutorial_content` in main function\n  - Prevents Python treating these variables as local when they\'re assigned within the function scope\n  - Added explanatory comment for future maintainers about UI overlay variable initialization requirements\n  - Added comprehensive test coverage to prevent regression\n\n### Infrastructure\n- Enhanced GitHub Actions workflow for release management\n- Release checklist and minimum conditions documentation\n\n## [0.1.0] - TBD\n*This will be the first official semantic versioned release of P(Doom)*\n\n### Minimum Conditions for v0.1.0 Release\nBefore releasing v0.1.0, the following conditions must be met:\n\n#### Core Functionality [COMPLETE]\n- [x] Game launches successfully with main menu\n- [x] All game modes function correctly (weekly seed, custom seed)\n- [x] Core resource management works (money, staff, reputation, doom)\n- [x] Action system executes properly with costs and effects\n- [x] Event system triggers and resolves correctly\n- [x] Upgrade system allows purchases and effect activation\n- [x] Game end conditions work (win/lose scenarios)\n- [x] Opponents system functions with espionage and AI behavior\n- [x] Enhanced event system (popups, deferred events) works properly\n\n#### Technical Quality [COMPLETE]\n- [x] Full test suite passes (115/115 tests)\n- [x] No critical bugs in core gameplay\n- [x] Game logging system captures all events correctly\n- [x] Bug reporting system functions properly\n- [x] Cross-platform compatibility (Windows, macOS, Linux)\n\n#### Documentation & User Experience [COMPLETE]\n- [x] README.md provides clear installation and quick start\n- [x] PLAYERGUIDE.md covers all game features and strategies\n- [x] DEVELOPERGUIDE.md explains architecture and contribution process\n- [x] In-game help and tooltips function correctly\n- [x] Error handling provides useful feedback to users\n\n#### Release Infrastructure\n- [x] Semantic versioning system implemented\n- [x] Changelog documentation established\n- [x] Version management integrated throughout codebase\n- [x] GitHub releases workflow automated (`.github/workflows/release.yml`)\n- [x] Release checklist documented and tested (`RELEASE_CHECKLIST.md`)\n- [x] Tagged release process validated (workflow ready for v0.1.0 tag)\n\n### Features Included in v0.1.0\nAll features present in the pre-versioning codebase:\n\n#### Core Gameplay\n- **Resource Management**: Money, staff, reputation, and P(Doom) levels\n- **Action System**: 20+ actions including research, hiring, lobbying, espionage\n- **Turn-Based Strategy**: Strategic decision making with consequences\n- **Multiple Win/Lose Conditions**: Achievement-based and doom-based outcomes\n\n#### Advanced Systems  \n- **Enhanced Event System**: Normal, popup, and deferred events with multiple response options\n- **Opponents System**: 3 AI competitors with hidden information and espionage mechanics\n- **Upgrade System**: 12+ upgrades that modify gameplay and unlock new capabilities\n- **Comprehensive Logging**: Detailed game session logs for debugging and analysis\n\n#### User Experience\n- **Adaptive UI**: Resizable window with responsive layout\n- **Multiple Game Modes**: Weekly seed for consistency, custom seed for experimentation\n- **In-Game Documentation**: Player guide, README, and developer guide accessible from menu\n- **Bug Reporting**: Built-in bug report system with privacy-conscious data collection\n- **Sound System**: Audio feedback for game events (with volume control)\n\n#### Technical Features\n- **Robust Testing**: 115 automated tests covering all major systems\n- **Cross-Platform**: Runs on Windows, macOS, and Linux via Python/pygame\n- **Privacy-Conscious**: No personal data collection, local-only high scores\n- **Modular Architecture**: Easy to extend with new actions, events, and opponents\n\n---\n\n## Pre-Version History\n*Prior to implementing semantic versioning, the game went through several iterations:*\n\n### Historical Versions (Non-Semantic)\n- **v3** (2024): Enhanced event system, opponents, comprehensive documentation\n- **v2** (2024): Upgrade system, improved UI, game logging\n- **v1** (2024): Initial prototype with basic resource management and actions\n\n### Key Development Milestones\n- **Enhanced Event System**: Added popup events, deferred events, and strategic event management\n- **Opponents Intelligence**: Implemented competing AI labs with espionage mechanics  \n- **Comprehensive Testing**: Achieved 115 automated tests with full coverage\n- **Documentation Excellence**: Created player, developer, and user guides\n- **Privacy-First Design**: Built-in bug reporting with no personal data collection\n- **Professional Architecture**: Modular, testable, and extensible codebase\n\n---\n\n## Release Process\nFor information about our release process, versioning policy, and contribution guidelines, see:\n- [Developer Guide - Release & Deployment](docs/DEVELOPERGUIDE.md#release--deployment)\n- [Semantic Versioning Policy](docs/DEVELOPERGUIDE.md#version-management)\n- [Contributing Guidelines](docs/DEVELOPERGUIDE.md#contribution-guidelines)'

----------------------------------------------------------------------
Ran 930 tests in 55.093s

FAILED (failures=36, errors=7, skipped=11)

[OK] End game menu renders at 1920x1080, state: low_stats, item: 4
[OK] End game menu renders at 1920x1080, state: with_scenario, item: 0
[OK] End game menu renders at 1920x1080, state: with_scenario, item: 1
[OK] End game menu renders at 1920x1080, state: with_scenario, item: 2
[OK] End game menu renders at 1920x1080, state: with_scenario, item: 3
[OK] End game menu renders at 1920x1080, state: with_scenario, item: 4
[OK] End game menu renders at 2560x1440, state: normal, item: 0
[OK] End game menu renders at 2560x1440, state: normal, item: 1
[OK] End game menu renders at 2560x1440, state: normal, item: 2
[OK] End game menu renders at 2560x1440, state: normal, item: 3
[OK] End game menu renders at 2560x1440, state: normal, item: 4
[OK] End game menu renders at 2560x1440, state: high_stats, item: 0
[OK] End game menu renders at 2560x1440, state: high_stats, item: 1
[OK] End game menu renders at 2560x1440, state: high_stats, item: 2
[OK] End game menu renders at 2560x1440, state: high_stats, item: 3
[OK] End game menu renders at 2560x1440, state: high_stats, item: 4
[OK] End game menu renders at 2560x1440, state: low_stats, item: 0
[OK] End game menu renders at 2560x1440, state: low_stats, item: 1
[OK] End game menu renders at 2560x1440, state: low_stats, item: 2
[OK] End game menu renders at 2560x1440, state: low_stats, item: 3
[OK] End game menu renders at 2560x1440, state: low_stats, item: 4
[OK] End game menu renders at 2560x1440, state: with_scenario, item: 0
[OK] End game menu renders at 2560x1440, state: with_scenario, item: 1
[OK] End game menu renders at 2560x1440, state: with_scenario, item: 2
[OK] End game menu renders at 2560x1440, state: with_scenario, item: 3
[OK] End game menu renders at 2560x1440, state: with_scenario, item: 4
[OK] End game menu renders at 640x480, state: normal, item: 0
[OK] End game menu renders at 640x480, state: normal, item: 1
[OK] End game menu renders at 640x480, state: normal, item: 2
[OK] End game menu renders at 640x480, state: normal, item: 3
[OK] End game menu renders at 640x480, state: normal, item: 4
[OK] End game menu renders at 640x480, state: high_stats, item: 0
[OK] End game menu renders at 640x480, state: high_stats, item: 1
[OK] End game menu renders at 640x480, state: high_stats, item: 2
[OK] End game menu renders at 640x480, state: high_stats, item: 3
[OK] End game menu renders at 640x480, state: high_stats, item: 4
[OK] End game menu renders at 640x480, state: low_stats, item: 0
[OK] End game menu renders at 640x480, state: low_stats, item: 1
[OK] End game menu renders at 640x480, state: low_stats, item: 2
[OK] End game menu renders at 640x480, state: low_stats, item: 3
[OK] End game menu renders at 640x480, state: low_stats, item: 4
[OK] End game menu renders at 640x480, state: with_scenario, item: 0
[OK] End game menu renders at 640x480, state: with_scenario, item: 1
[OK] End game menu renders at 640x480, state: with_scenario, item: 2
[OK] End game menu renders at 640x480, state: with_scenario, item: 3
[OK] End game menu renders at 640x480, state: with_scenario, item: 4

=== Testing End Game Scenarios Layout ===
v Scenario 'CATASTROPHIC_FAILURE' renders at 800x600
v Scenario 'CATASTROPHIC_FAILURE' renders at 1024x768
v Scenario 'CATASTROPHIC_FAILURE' renders at 1280x720
v Scenario 'CATASTROPHIC_FAILURE' renders at 1920x1080
v Scenario 'CATASTROPHIC_FAILURE' renders at 2560x1440
v Scenario 'CATASTROPHIC_FAILURE' renders at 640x480
v Scenario 'RESEARCH_SUCCESS' renders at 800x600
v Scenario 'RESEARCH_SUCCESS' renders at 1024x768
v Scenario 'RESEARCH_SUCCESS' renders at 1280x720
v Scenario 'RESEARCH_SUCCESS' renders at 1920x1080
v Scenario 'RESEARCH_SUCCESS' renders at 2560x1440
v Scenario 'RESEARCH_SUCCESS' renders at 640x480
v Scenario 'FUNDING_CRISIS' renders at 800x600
v Scenario 'FUNDING_CRISIS' renders at 1024x768
v Scenario 'FUNDING_CRISIS' renders at 1280x720
v Scenario 'FUNDING_CRISIS' renders at 1920x1080
v Scenario 'FUNDING_CRISIS' renders at 2560x1440
v Scenario 'FUNDING_CRISIS' renders at 640x480
v Scenario 'No Scenario' renders at 800x600
v Scenario 'No Scenario' renders at 1024x768
v Scenario 'No Scenario' renders at 1280x720
v Scenario 'No Scenario' renders at 1920x1080
v Scenario 'No Scenario' renders at 2560x1440
v Scenario 'No Scenario' renders at 640x480

=== Testing for Hardcoded Positioning Issues ===
v No exceptions on different screen sizes - basic hardcoding test passed

=== Testing Main Menu Layout Consistency ===
v Main menu renders at 800x600, item 0
v Main menu renders at 800x600, item 1
v Main menu renders at 800x600, item 2
v Main menu renders at 800x600, item 3
v Main menu renders at 800x600, item 4
v Main menu renders at 1024x768, item 0
v Main menu renders at 1024x768, item 1
v Main menu renders at 1024x768, item 2
v Main menu renders at 1024x768, item 3
v Main menu renders at 1024x768, item 4
v Main menu renders at 1280x720, item 0
v Main menu renders at 1280x720, item 1
v Main menu renders at 1280x720, item 2
v Main menu renders at 1280x720, item 3
v Main menu renders at 1280x720, item 4
v Main menu renders at 1920x1080, item 0
v Main menu renders at 1920x1080, item 1
v Main menu renders at 1920x1080, item 2
v Main menu renders at 1920x1080, item 3
v Main menu renders at 1920x1080, item 4
v Main menu renders at 2560x1440, item 0
v Main menu renders at 2560x1440, item 1
v Main menu renders at 2560x1440, item 2
v Main menu renders at 2560x1440, item 3
v Main menu renders at 2560x1440, item 4
v Main menu renders at 640x480, item 0
v Main menu renders at 640x480, item 1
v Main menu renders at 640x480, item 2
v Main menu renders at 640x480, item 3
v Main menu renders at 640x480, item 4

=== Testing Menu Button Bounds ===
v Main menu bounds OK at 800x600
v Main menu bounds OK at 1024x768
v Main menu bounds OK at 1280x720
v Main menu bounds OK at 1920x1080
v Main menu bounds OK at 2560x1440
v Main menu bounds OK at 640x480

=== Testing Menu Edge Cases ===
v Edge case 'minimal' OK at 800x600
v Edge case 'minimal' OK at 1920x1080
v Edge case 'empty_messages' OK at 800x600
v Edge case 'empty_messages' OK at 1920x1080

=== Testing Menu Overflow Conditions ===
v Overflow test passed at 640x480
v Overflow test passed at 800x600

=== Testing Menu Text Scaling ===
v Text scaling works at 800x600
v Text scaling works at 1024x768
v Text scaling works at 1280x720
v Text scaling works at 1920x1080
v Text scaling works at 2560x1440
v Text scaling works at 640x480
Turn processing error: 'int' object is not iterable
Turn processing error: 'int' object is not iterable
Turn processing error: 'int' object is not iterable
Game session ended. Final rank: 4
