#!/usr/bin/env python3
"""
Demo script to showcase the UI improvements:
1. Fixed kerning in resource display
2. New context window system

This script demonstrates the improved UI features without requiring full gameplay.
"""

import pygame
import sys
from src.core.game_state import GameState
from ui import draw_ui, draw_context_window

def main():
    pygame.init()
    
    # Set up display
    width, height = 1200, 800
    screen = pygame.display.set_mode((width, height))
    pygame.display.set_caption("P(Doom) UI Improvements Demo")
    clock = pygame.time.Clock()
    
    # Create game state
    game_state = GameState('demo')
    
    # Mock some hover context for demonstration
    demo_contexts = [
        {
            'title': 'Safety Research',
            'description': 'Conduct research into AI safety measures to reduce existential risk. This is the core activity of your lab.',
            'details': ['Cost: $100, 1 AP', '[OK] Available to execute', 'Reduces P(Doom) by 3-5 points']
        },
        {
            'title': 'Money',
            'description': 'Your available funding for actions and upgrades. Generated by research progress and certain actions.',
            'details': [f'Current: ${game_state.money}', 'Used for hiring, research, and upgrades']
        },
        {
            'title': 'Action Points (AP)',
            'description': 'Limits how many actions you can take per turn. Most actions cost 1 AP.',
            'details': [
                f'Current: {game_state.action_points}/{game_state.max_action_points}',
                f'Base: 3 + Staff bonus: {game_state.max_action_points - 3}',
                'Resets to maximum each turn'
            ]
        }
    ]
    
    context_index = 0
    show_context = False
    context_minimized = False
    
    print("Demo Controls:")
    print("- SPACE: Toggle context window")
    print("- M: Toggle minimize context window")
    print("- TAB: Cycle through different context examples")
    print("- ESC: Exit demo")
    print("\nMove mouse around to see hover effects!")
    
    running = True
    while running:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False
            elif event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    running = False
                elif event.key == pygame.K_SPACE:
                    show_context = not show_context
                    print(f"Context window: {'ON' if show_context else 'OFF'}")
                elif event.key == pygame.K_m and show_context:
                    context_minimized = not context_minimized
                    print(f"Context window: {'minimized' if context_minimized else 'expanded'}")
                elif event.key == pygame.K_TAB:
                    context_index = (context_index + 1) % len(demo_contexts)
                    print(f"Switched to context: {demo_contexts[context_index]['title']}")
            elif event.type == pygame.MOUSEMOTION:
                # Update hover state
                game_state.check_hover(event.pos, width, height)
        
        # Clear screen
        screen.fill((15, 25, 35))
        
        # Draw main UI (this will show the improved kerning)
        draw_ui(screen, game_state, width, height)
        
        # Draw context window demonstration
        if show_context:
            # Use demo context or current hover context
            if hasattr(game_state, 'current_context_info') and game_state.current_context_info:
                context_info = game_state.current_context_info
            else:
                context_info = demo_contexts[context_index]
            
            context_rect, button_rect = draw_context_window(
                screen, context_info, width, height, context_minimized
            )
        
        # Draw instructions
        font = pygame.font.SysFont('Arial', 16)
        instructions = [
            "DEMO: UI Improvements",
            "1. Notice improved spacing in top resource bar",
            "2. Move mouse over elements to see context info",
            "3. Press SPACE to toggle context window"
        ]
        
        for i, instruction in enumerate(instructions):
            color = (255, 255, 255) if i == 0 else (200, 200, 200)
            text = font.render(instruction, True, color)
            screen.blit(text, (10, 10 + i * 20))
        
        pygame.display.flip()
        clock.tick(60)
    
    pygame.quit()
    print("Demo complete!")

if __name__ == "__main__":
    main()
