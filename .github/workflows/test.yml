name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Verify version system
      run: |
        python -c "
        from src.services.version import get_version, get_display_version, get_version_info
        print('Version system check:')
        print(f'  Version: {get_version()}')
        print(f'  Display: {get_display_version()}')
        print(f'  Info: {get_version_info()}')
        print('CHECKED Version system working correctly')
        "
    
    - name: Run unit tests
      env:
        PYTHONWARNINGS: ignore::DeprecationWarning
      run: |
        python -m pytest tests/ -v
    
    - name: Verify event log behavior specifically
      run: |
        python -m unittest tests.test_game_state.TestEventLog -v
        
    - name: Test basic game functionality
      run: |
        python -c "
        from src.core.game_state import GameState
        from src.services.version import get_display_version
        print(f'Testing P(Doom) {get_display_version()}')
        gs = GameState('ci-test')
        print('CHECKED Game state initializes correctly')
        assert gs.logger.game_version == get_display_version()
        print(f'CHECKED Logger version consistency: {gs.logger.game_version}')
        gs.messages.append('Test message')
        gs.end_turn()
        assert len([m for m in gs.messages if 'Test message' in m]) == 0
        print('CHECKED Event log clears correctly on turn end')
        print('CHECKED All critical functionality verified')
        "